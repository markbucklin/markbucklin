function fullTE = fastTE(X,Y, nxlag, nylag)
% Transfer Entropy of X->Y: reduction in uncertainty in y(n), given x(n-nxlag) and y(n-nylag) in comparison with
% the reduction given by y(n-nylag) alone.
if nargin < 2
   Y = X;
end
if nargin < 3
   nxlag = 1;
end
if nargin < 4
   nylag = 1;
end
Xlag = squeeze(any(shiftedWinMat(X,1,nxlag),1));
Xlag(1:nxlag,:) = false;
Ylag = squeeze(any(shiftedWinMat(Y,0,nxlag),1));
Ylag(1:nylag,:) = false;
M = size(X,1);
Nx = size(X,2);
Ny = size(Y,2);

% partialTE = @(yi,yilag,xilag) ...
%    bsxfun(@times,...
%    binaryjoint( {yi,yilag}, xilag),...
%    log2(bsxfun(@rdivide,...
%    bsxfun(@times,  binaryjoint( {yi,yilag}, xilag),  bsxfun(@rdivide, sum(yilag,1), 2)),...
%    bsxfun(@times,...
%    squeeze(bsxfun(@rdivide, sum(bsxfun(@and, yilag, permute(shiftdim(xilag,-1),[2 1 3:(ndims(xilag)+1)])),1), 8)),...
%    squeeze(bsxfun(@rdivide, sum(bsxfun(@and, yi, permute(shiftdim(yilag,-1),[2 1 3:(ndims(yilag)+1)])),1), 4))...
%    ))));

partialTE = @(yi,yilag,xilag) binaryjoint(yi, {yilag,xilag}) .* log2(binaryconditional(yi, {yilag,xilag})./binaryconditional(yi,yilag)) ;

fullTE = zeros(Nx,Ny);
parfor k=1:size(Y,2)
   yk = Y(:,k);
   yklag = Ylag(:,k);
   teK = sum(cat(2, ...
	  partialTE( yk, yklag, Xlag), ...
	  partialTE( yk,  yklag,~Xlag), ...
	  partialTE( yk,~yklag, Xlag), ...
	  partialTE( yk,~yklag,~Xlag), ...
	  partialTE(~yk, yklag, Xlag), ...
	  partialTE(~yk, yklag,~Xlag), ...
	  partialTE(~yk,~yklag, Xlag), ...
	  partialTE(~yk,~yklag,~Xlag)),2) ;
   fullTE(:,k) = teK(:);
end
fullTE(isnan(fullTE)) = 0;
end


% SUBFUNCTIONS
function PX = binaryprob(x,dim)
if nargin < 2
   dim = 1;
end
PX = squeeze( bsxfun(@rdivide, sum(x,dim), size(x,1)));
end
function PXnY = binaryjoint(x,y)
if iscell(x)
   xcell = x;
   x = xcell{1};
   for k=1:numel(xcell)
	  x = bsxfun(@and, x, xcell{k});
   end
end
if iscell(y)
   ycell = y;
   y = ycell{1};
   for k=1:numel(ycell)
	  y = bsxfun(@and, y, ycell{k});
   end
end
y = permute(shiftdim(y,-1), [2 1 3:(ndims(y)+1)]);
PXnY = squeeze( bsxfun(@rdivide, sum(bsxfun(@and, x , y),1), size(x,1)));
end
function PXIY = binaryconditional(x,y)
if iscell(x)
   xcell = x;
   x = xcell{1};
   for k=1:numel(xcell)
	  x = bsxfun(@and, x, xcell{k});
   end
end
if iscell(y)
   ycell = y;
   y = ycell{1};
   for k=1:numel(ycell)
	  y = bsxfun(@and, y, ycell{k});
   end
end
y = permute(shiftdim(y,-1), [2 1 3:(ndims(y)+1)]);
PXIY = squeeze(bsxfun(@rdivide, sum(bsxfun(@and, x , y),1) , sum(y,1)));
end




%    teK = 0 ...
% 	  + partialTE( yk,  yklag, Xlag) ...
% 	  + partialTE( yk,  yklag,~Xlag) ...
% 	  + partialTE( yk,~yklag, Xlag) ...
% 	  + partialTE( yk,~yklag,~Xlag) ...
% 	  + partialTE(~yk, yklag, Xlag) ...
% 	  + partialTE(~yk, yklag,~Xlag) ...
% 	  + partialTE(~yk,~yklag, Xlag) ...
% 	  + partialTE(~yk,~yklag,~Xlag)

% fullTE =  0 ...
% 		 + partialTE( Y,  Ylag, Xlag) ...
% 		 + partialTE( Y,  Ylag,~Xlag) ...
% 		 + partialTE( Y,~Ylag, Xlag) ...
% 		 + partialTE( Y,~Ylag,~Xlag) ...
% 		 + partialTE(~Y, Ylag, Xlag) ...
% 		 + partialTE(~Y, Ylag,~Xlag) ...
% 		 + partialTE(~Y,~Ylag, Xlag) ...
% 		 + partialTE(~Y,~Ylag,~Xlag)

%for k=1:nxlag (TODO)
% Xlag = circshift(X,nxlag+1,1);
% Ylag = circshift(Y,nylag+1,1);

% partialTE = @(yi,yilag,xilag) bsxfun(@times, binaryjoint( {yi,yilag}, xilag),...
%    log2(bsxfun(@rdivide, binaryconditional({yi,yilag},xilag), binaryconditional(yi,yilag)))) ;

% 			x = bsxfun(@and, x, permute(shiftdim(xcell{k},-1), [2 1 3:(ndims(x)+1)]));
% 			y = bsxfun(@and, y, permute(shiftdim(ycell{k},-1), [2 1 3:(ndims(y)+1)]));

% fullTE = nansum(cat(4, ...
%    partialTE( Y, Ylag, Xlag), ...
%    partialTE( Y,  Ylag,~Xlag), ...
%    partialTE( Y,~Ylag, Xlag), ...
%    partialTE( Y,~Ylag,~Xlag), ...
%    partialTE(~Y, Ylag, Xlag), ...
%    partialTE(~Y, Ylag,~Xlag), ...
%    partialTE(~Y,~Ylag, Xlag), ...
%    partialTE(~Y,~Ylag,~Xlag)),4) ;


% B = bsxfun(@and, bsxfun(@and, Y, permute(shiftdim(Ylag,-1),[2 1 3])), permute(shiftdim(Xlag,-2),[3 1 2 4]));
% PB = bsxfun(@rdivide, sum(B,1), N);
%
% fte = bsxfun(@times, ...
%    sum(B,1)./N, ...
%    log2(bsxfun(@rdivide,...
%    bsxfun(@times,...
%    sum(B,1)./N, sum(or(or(B,2),4),1)./N),...
%    bsxfun(@times, sum(or(B,2),1)./N, sum(or(B, 4),1)./N)...
%    )));

% fte = bsxfun(@times, ...
%    PB, ...
%    log2(bsxfun(@rdivide,...
%    PB, sum(sum(PB,2),4)),...
%    bsxfun(@times, sum(sum(B,1),2)./(N^2), sum(sum(B,1), 4)./(N^2))...
%    ));
