classdef BehaviorBoxGUI < hgsetget & dynamicprops
    
    
    
    
    
    
    
    properties
        mainFig
        mainMenu
        mainObj
    end
    properties % PANELS
        statusPanel
        systemsPanel
        settingsPanel
        startStopPanel
    end
    properties (Hidden, SetAccess = protected)
        systemsListBox
        savePathControl
        reflectedPropDisplay
        startStopButton
    end
    
    
    
    
    events
        
    end
    
    
    
    
    
    
    methods % SETUP
        function obj = BehaviorBoxGUI(mainobj)
            dbstop if error
            obj.mainObj = mainobj;
            obj.makeFigure();
            keyboard
            obj.makeListeners();
            set(obj.mainFig,'HandleVisibility','callback')
        end
        function makeFigure(obj)
            % Make Figure
            obj.mainFig = figure(...
                'position',[100 200 300 400],...
                'menubar','none',...
                'name','Behavior Box',...
                'numbertitle','off',...
                'tag','mainfig',...
                'closerequestfcn',@(src,evnt)closeFigFcn(obj,src,evnt));
            % Make Status, Settings, and System Panels
            mainLayout = uiextras.VBox('Parent',obj.mainFig);
            obj.statusPanel = uiextras.BoxPanel(...
                'Parent',mainLayout,...
                'Title','Experiment Status');
            obj.settingsPanel = uiextras.BoxPanel(...
                'Parent',mainLayout,...
                'Title','Settings');
            obj.systemsPanel = uiextras.BoxPanel(...
                'Parent',mainLayout,...
                'Title','CameraSystem &  BehaviorSystem Management');
            obj.startStopPanel = uiextras.Panel(...
                'Parent',mainLayout,...
                'BackgroundColor','y');
            % Fill Each Panel
            fillStatusPanel()
            fillSettingsPanel()
            fillSystemsPanel()
            fillStartStopPanel()
            set(mainLayout,...
                'Sizes',[170 100 -1 45]);
            % Panel-Making Sub-Functions
            function fillStatusPanel()
                pan = uiextras.Grid('Parent',obj.statusPanel);
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Experiment Status: ');
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Experiment Name: ');
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Trial Number: ');
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Camera Status: ');
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Frame Rate: ');
                uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','Frames Acquired: ');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','experimentStatus');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','experimentName');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','trialNumber');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','cameraStatus');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','frameRate');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',pan,...
                    'style','text',...
                    'string','x',...
                    'tag','framesAcquired');
                set(pan.Children,...
                    'units','pixels',...
                    'fontsize',14,...
                    'horizontalalignment','left');
                set(pan,...
                    'ColumnSizes',[175 -1],...
                    'RowSizes',[-1 -1 -1 -1 -1 -1]);
            end
            function fillSettingsPanel()
                pan = uiextras.VBox('Parent',obj.settingsPanel);
                toppan = uiextras.HButtonBox(...
                    'Parent',pan,...
                    'ButtonSize',[280 25],...
                    'HorizontalAlignment','left',...
                    'VerticalAlignment','bottom',...
                    'Padding',10);
                bottompan = uiextras.HButtonBox(...
                    'Parent',pan,...
                    'HorizontalAlignment','left',...
                    'VerticalAlignment','bottom',...
                    'Padding',10);
                obj.savePathControl.button = uicontrol(...
                    'Parent',bottompan,...
                    'style','pushbutton',...
                    'tag','changeSaveRoot',...
                    'string','Change Root',...
                    'callback',@(src,evnt)changeSaveRoot(obj,src,evnt));
                %                 obj.savePathControl.pop = uicontrol(...
                %                     'Parent',bottompan,...
                %                     'style','popup',...
                %                     'tag','animalName',...
                %                     'string',obj.mainObj.animalNameList,...
                %                     'callback',@(src,evnt)setTagProp2String(obj,src,evnt));
%                 obj.mainObj.updateSavePath();
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = uicontrol(...
                    'Parent',toppan,...
                    'style','edit',...
                    'horizontalalignment','left',...
                    'BackgroundColor',[1 1 1],...
                    'string',obj.mainObj.savePath,...
                    'tag','savePath',...
                    'callback',@(src,evnt)setTagProp2String(obj,src,evnt));
            end
            function fillSystemsPanel()
                pan = uiextras.HBox('Parent',obj.systemsPanel);
                % New Systems Buttons
                leftbox = uiextras.VButtonBox(...
                    'Parent',pan);
                uicontrol('Parent',leftbox,...
                    'string','BehaviorSystem',...
                    'tag','BehaviorSystem',...
                    'callback',@(src,evnt)newSystem(obj,src,evnt));
                uicontrol('Parent',leftbox,...
                    'string','CameraSystem',...
                    'tag','CameraSystem',...
                    'callback',@(src,evnt)newSystem(obj,src,evnt));
                % Systems List
                obj.systemsListBox = uicontrol(...
                    'Parent',pan,...
                    'style','list',...
                    'tag','systemNames');
                obj.reflectedPropDisplay(numel(obj.reflectedPropDisplay)+1) = obj.systemsListBox;
                % System Management Buttons
                rightbox = uiextras.VButtonBox(...
                    'Parent',pan);
                uicontrol('Parent',rightbox,...
                    'string','Show',...
                    'callback',@(src,evnt)showSystem(obj,src,evnt));
                uicontrol('Parent',rightbox,...
                    'string','Delete',...
                    'callback',@(src,evnt)deleteSystem(obj,src,evnt));
            end
            function fillStartStopPanel()
                pan = uiextras.HButtonBox('Parent',obj.startStopPanel);
                obj.startStopButton = uicontrol(...
                    'parent',pan,...
                    'string','START',...
                    'callback',@(src,evnt)startStopFcn(obj,src,evnt));
            end
        end
        function makeListeners(obj)
            props = properties(obj.mainObj);
            taggedprops = fields(obj.mainObj.guiTaggedProps);
            for n = 1:numel(taggedprops)
                if any(strcmp(taggedprops{n},props))
                    prop = taggedprops{n};
                    addlistener(obj.mainObj,prop,'PostSet',...
                        @(src,evnt)updateStatusWindow(obj,src,evnt));
                end
            end
            syncevents = events(obj.mainObj);
            for n = 1:numel(syncevents)
                addlistener(obj.mainObj,syncevents{n},...
                    @(src,evnt)syncEventResponseFcn(obj,src,evnt));
            end
        end
    end
    methods (Hidden) % CALLBACKS
        function newSystem(obj,src,evnt)
            systemname = get(src,'tag');
            register(obj.mainObj,eval(systemname))
        end
        function deleteSystem(obj,src,evnt)
            keyboard
        end
        function showSystem(obj,src,evnt)
            keyboard
        end
        function changeSaveRoot(obj,src,evnt)
            sroot = uigetdir(obj.mainObj.saveRoot,'Locate Save-Root for All Data');
            obj.mainObj.saveRoot = sroot;
            updateSavePath(obj.mainObj)
        end
        function setTagProp2String(obj,src,evnt)
            tag = get(src,'tag');
            val = get(src,'string');
            if isa(val,'cell')
                val = val{get(src,'value')};
            end
            if any(strcmp(tag,properties(obj.mainObj)))
                obj.mainObj.(tag) = val;
            end
        end
        function startStopFcn(obj,src,evnt)
            newstate = get(src,'value');
            switch newstate
                case 1 % START
                    obj.disableControls();
                    start(obj.mainObj)
                case 0 % STOP
                    stop(obj.mainObj)
                    obj.enableControls();
            end
        end
    end
    methods (Hidden) % UPDATE
        function updateStatusWindow(obj,src,evnt)
            prop = src.Name;
            proptype = obj.mainObj.guiTaggedProps.(prop);
            uicobj = findobj(obj.reflectedPropDisplay,'tag',prop);
            switch proptype
                case 'string'
                    set(uicobj,'string',obj.mainObj.(prop));
                case 'num'
                    set(uicobj,'string',num2str(obj.mainObj.(prop)));
            end
        end
        function syncEventResponseFcn(obj,~,evnt)
            switch evnt.EventName
                case'SystemSyncReady'
                    obj.disableControls();
                case 'SystemSyncTrigger'
                    obj.disableControls();
                case 'SystemSyncStop'
                    obj.enableControls();
                case 'SystemSyncError'
                    obj.enableControls();
            end
        end
        function enableControls(obj)
            set(obj.settingsPanel,'Enable','on');
            set(obj.systemsPanel,'Enable','on');
        end
        function disableControls(obj)
            set(obj.settingsPanel,'Enable','off');
            set(obj.systemsPanel,'Enable','off');
        end
    end
    methods (Hidden) % CLEANUP
        function closeFigFcn(obj,~,~)
            try
                selection = questdlg('Close Image Acquisition Figure?',...
                    'Close Request',...
                    'Yes','No','Yes');
                switch selection,
                    case 'Yes'
                        delete(obj.mainObj)
                        delete(obj.mainFig)
                    case 'No'
                        return
                end
            catch me
                delete(gcf)
                close all hidden
                % 								errordlg('Closing error occured, figure will now close')
            end
        end
        function delete(obj)
            if ~isempty(obj.mainFig) && ishandle(obj.mainFig)
                delete(obj.mainFig)
            end
        end
    end
    
    
    
    
    
    
    
    
end