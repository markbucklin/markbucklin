function convertToLegacy(experimentObj)

%% Structure Definition
TrialFile = struct(...
		'first_image',[],...
		'images',[],...
		'mat_version',[],...
		'type',[],...
		...
		'cost',struct(...
		'ID',[],...
		'Size',[],...
		'Tag',[],...
		'NSynchChannels',[],...
		'SynchChannelMax',[],...
		'NStimulusChannels',[],...
		'StimulusPeriod',[],...
		'Comments',[]),...
		...
		'frames',struct(...
		'frame',[],...
		'frame_cost',[],...
		'image',[]),...
		...
		'soft',struct(...
		'ID',[],...
		'Size',[],...
		'Tag',[],...
		'DateTimeRecorded',[],...
		'UserName',[],...
		'SubjectID',[],...
		'ThisFilename',[],...
		'PrevFilename',[],...
		'NextFilename',[],...
		'DataType',[],...
		'FileType',[],...
		'SizeOfDataType',[],...
		'XSize',[],...
		'YSize',[],...
		'ROIXPosition',[],...
		'ROIYPosition',[],...
		'ROIXSize',[],...
		'ROIYSize',[],...
		'ROIXPositionAdjusted',[],...
		'ROIYPositionAdjusted',[],...
		'ROINumber',[],...
		'TemporalBinning',[],...
		'SpatialBinningX',[],...
		'SpatialBinningY',[],...
		'FrameHeaderSize',[],...
		'NFramesTotal',[],...
		'NFramesThisFile',[],...
		'WaveLength',[],...
		'FilterWidth',[],...
		'Comments',[]));

%%
tset = experimentObj.trialSet;
channel = 1; % TODO: add support for multi-wavelength recordings
for n = 1:length(tset)
		TrialFile(n) = fillMisc();
end



		function tfile = fillMisc()
				% first_image
				a = tset(n).video(:,:,channel,1);
				tfile.first_image = a(:);
				% images
				a = squeeze(tset(n).video(:,:,channel,:));
				tfile.images = reshape(a,[size(a,1)*size(a,2), size(a,3)]); % npixels X nframes
				% mat_version and type
				tfile.mat_version = 'continuous';
				tfile.type = 'raw'; %?
		end

end
































