<?xml version="1.0" encoding="utf-8"?>
<history>
<session>
<command time_stamp="15c7151802b">%-- 6/4/2017 12:16 AM --%</command>
<command execution_time="78">cd Z:\Data\SusieStem\</command>
<command execution_time="52">cd OUTPUT\</command>
<command execution_time="1879">vid = VideoReader('[TEMP] SC0503-M2LH-I0509(1 - 6)(2017May24_1119AM).mp4')</command>
<command execution_time="453">vid(2) = VideoReader('[TEMP] SC0503-M2LH-I0512(1 - 6)(2017May24_ 229PM).mp4')</command>
<command error="true" execution_time="275">f(1).cdata = cat(2, readFrame(vid(1), reaedFrame(vid(2));</command>
<command error="true" execution_time="171">f(1).cdata = cat(2, readFrame(vid(1), readFrame(vid(2))));</command>
<command error="true" execution_time="73">f = cat(2, readFrame(vid(1), readFrame(vid(2))));</command>
<command execution_time="24">vid(1)</command>
<command execution_time="49">f = readFrame(vid(1));</command>
<command execution_time="819">image(f)</command>
<command execution_time="224">vid(1).CurrentTime = 5</command>
<command execution_time="187">vid(2).CurrentTime = 5</command>
<command execution_time="36">f1 = readFrame(vid(1));</command>
<command execution_time="54">f2 = readFrame(vid(2));</command>
<command execution_time="49">F.cdata = cat(2,f1,f2);</command>
<command execution_time="21">F.colormap = [];</command>
<command execution_time="21">k = 1;</command>
<command batch="1" repeat="2">tnext = 10;</command>
<command batch="1">while vid(1).hasFrame &amp;&amp; vid(2).hasFrame &amp;&amp; vid(1).CurrentTime &lt; tnext</command>
<command batch="1">k = k+1;</command>
<command batch="1">f1 = readFrame(vid(1));</command>
<command batch="1">f2 = readFrame(vid(2));</command>
<command batch="1">F(k).cdata = cat(2,f1,f2);</command>
<command batch="1">F(k).colormap = [];</command>
<command batch="1" execution_time="39">end</command>
<command batch="2">tnext = 20;</command>
<command batch="2">while vid(1).hasFrame &amp;&amp; vid(2).hasFrame &amp;&amp; vid(1).CurrentTime &lt; tnext</command>
<command batch="2">k = k+1;</command>
<command batch="2">f1 = max(readFrame(vid(1)), readFrame(vid(1)));</command>
<command batch="2">f2 = max(readFrame(vid(2)), readFrame(vid(2)));</command>
<command batch="2">F(k).cdata = cat(2,f1,f2);</command>
<command batch="2">F(k).colormap = [];</command>
<command batch="2" execution_time="35436">end</command>
<command error="true" execution_time="44539">movie(F)</command>
<command execution_time="1567">help immovie</command>
<command execution_time="12327">implay(F)</command>
<command execution_time="91">hfig = gcf</command>
<command error="true" execution_time="386">him(1) = gcimage</command>
<command execution_time="34">him(1) = image</command>
<command execution_time="31">him(2) = image</command>
<command execution_time="28">hax(1) = him.Parent</command>
<command execution_time="25">hax(2) = him(2).Parent</command>
<command execution_time="24">set(hax,'Units','pixels')</command>
<command execution_time="24">hax</command>
<command execution_time="26">hax(1)</command>
<command execution_time="31">hax(1).Position = [10 10 0 0] + [0 0 1024 1024]</command>
<command execution_time="26">hax(2).Position = [1034 10 0 0] + [0 0 1024 1024]</command>
<command execution_time="25">him(1)</command>
<command error="true" execution_time="64">him(1).cdata = readFrame(vid(1));</command>
<command execution_time="28">him(1).CData = readFrame(vid(1));</command>
<command execution_time="28">him(2).CData = readFrame(vid(2));</command>
<command execution_time="26">hax(1)</command>
<command execution_time="19">hax(2)</command>
<command execution_time="25">hax(1).Position = [10 10 1024 1024]</command>
<command execution_time="25">hax(1)</command>
<command execution_time="27">hax(2)</command>
<command execution_time="28">hax(2).Parent</command>
<command execution_time="25">him(1)</command>
<command error="true" execution_time="137">clo</command>
<command execution_time="75">clf</command>
<command execution_time="53">him(1) = image(readFrame(vid(1)))</command>
<command execution_time="25">hax(1) = him(1).Parent</command>
<command execution_time="19">hax(2) = axes</command>
<command execution_time="48">him(2) = image(readFrame(vid(2)))</command>
<command execution_time="106">hax(1).Position = [10 10 1024 1024]</command>
<command execution_time="26">hax(1).Position = [10 1034 1024 1024]</command>
<command execution_time="25">hax(1).Position = [10 1044 1024 1024]</command>
<command execution_time="25">him(1)</command>
<command execution_time="26">him(2)</command>
<command execution_time="26">him(2).Parent</command>
<command execution_time="26">him(1).Parent</command>
<command execution_time="26">him(1).Parent.Units = 'pixels'</command>
<command execution_time="23">set(hax,'Units','pixels')</command>
<command execution_time="28">hax(1).Position = [10 10 1024 1024]</command>
<command execution_time="241">hax(1).Position = [10 1044 1024 1024]</command>
<command execution_time="26">hfig.Children</command>
<command execution_time="19">hfig.Children(1)</command>
<command execution_time="30">hfig.Children(2)</command>
<command execution_time="25">hax(1).Position = [1024 10 1024 1024]</command>
<command execution_time="25">hax(2).Position = [10 10 1024 1024]</command>
<command execution_time="25">hax(1).Position = [1044 10 1024 1024]</command>
<command execution_time="64">axis image ij</command>
<command execution_time="58">axis(hax(2))</command>
<command execution_time="28">axis image ij</command>
<command execution_time="41">axis(hax(1))</command>
<command execution_time="27">axis image ij</command>
<command execution_time="42">axes(hax(1))</command>
<command execution_time="26">axis image ij</command>
<command execution_time="40">axes(hax(2))</command>
<command execution_time="38">axis image ij</command>
<command execution_time="72">set(hax(1))</command>
</session>
<session>
<command time_stamp="15c73cd3f81">%-- 6/4/2017 11:50 AM --%</command>
<command execution_time="111">pathtool</command>
<command execution_time="267361">fname = uigetfile('*.mp4','Select Files','MultiSelect','on')</command>
<command batch="3" error="true">for kfname = fname</command>
<command batch="3" error="true">fprintf('%s\n',kfname)</command>
<command batch="3" error="true" execution_time="30">end</command>
<command batch="4" error="true">for k = 1:length(fname)</command>
<command batch="4" error="true">vr(k) = vreoReader(fname{k});</command>
<command batch="4" error="true" execution_time="91">end</command>
<command execution_time="2246">help vision.VideoFileReader</command>
<command execution_time="1411">VFR = vision.VideoFileReader(fname{1})</command>
<command batch="5">for k = 1:length(fname)</command>
<command batch="5">VR(k) = VideoReader(fname{k});</command>
<command batch="5" execution_time="4060">end</command>
<command execution_time="28">VFR.info</command>
<command execution_time="25">k=1</command>
<command error="true" execution_time="25">VFR(k).VideoOutputDataType = 'uint8';</command>
<command execution_time="28">VFR.VideoOutputDataType = 'uint8'</command>
<command execution_time="22">fileNum = 1;</command>
<command execution_time="34">VR(1)</command>
<command execution_time="32">which fig2png</command>
<command execution_time="862">edit compareVideosIn1080p.m</command>
<command execution_time="641">edit compareVidData.m</command>
<command execution_time="686">edit compareVideos.m</command>
<command execution_time="675">edit placelabel.m</command>
<command execution_time="691">edit genMultiFigures</command>
<command execution_time="675">edit genfigures</command>
<command execution_time="28">which implaysc</command>
<command error="true" execution_time="395">imrgbplay(F)</command>
<command execution_time="2909">imrgbplay(cat(4,F(1:200).cdata))</command>
<command execution_time="29">F(200)</command>
<command execution_time="7763">imrgbplay(cat(4,F(8000:end).cdata))</command>
<command execution_time="29">C</command>
<command execution_time="898">imrgbplay(cat(4,C.cdata))</command>
<command error="true" execution_time="580">imshow(max(cat(4,C.cdata)),[],4)</command>
<command execution_time="478">fmax= max(cat(4,C.cdata),[],4);</command>
<command execution_time="751">imshow(fmax)</command>
<command execution_time="405">f= cat(4,C.cdata);</command>
<command execution_time="470">imshow(max(f,[],4))</command>
<command execution_time="445">imshow(max(f,[],4)-min(f,[],4))</command>
<command execution_time="28">fileNum</command>
<command execution_time="28">VR(1)</command>
<command execution_time="30">whos</command>
<command execution_time="3289">F = []</command>
<command execution_time="23">out</command>
<command execution_time="27">out(1)</command>
<command execution_time="27">out(1).chunked(1)</command>
<command execution_time="27">out(1).chunked(2)</command>
<command execution_time="27">n=1;</command>
<command execution_time="818">imrgbplay(cat(4, out(n).chunked.cdata))</command>
<command execution_time="26">n=2</command>
<command execution_time="882">imrgbplay(cat(4, out(n).chunked.cdata))</command>
<command execution_time="27">n=3</command>
<command execution_time="956">imrgbplay(cat(4, out(n).chunked.cdata))</command>
<command execution_time="26">VR</command>
<command execution_time="35">VR(1)</command>
<command execution_time="27">VR(2)</command>
<command execution_time="28">VR(3)</command>
<command execution_time="28">VR(4)</command>
<command execution_time="27">out(7)</command>
<command execution_time="27">out(6)</command>
<command execution_time="26">n=7</command>
<command execution_time="789">imrgbplay(cat(4, out(n).chunked.cdata))</command>
<command execution_time="26">fileNum</command>
<command batch="6">set(VR(fileNum),'CurrentTime',5)</command>
<command batch="6">F = struct.empty;</command>
<command batch="6">k = 0;</command>
<command batch="6">while VR(fileNum).hasFrame</command>
<command batch="6">k = k+1;</command>
<command batch="6">t = VR(fileNum).CurrentTime;</command>
<command batch="6">f = readFrame(VR(fileNum));</command>
<command batch="6">F(k).cdata = f;</command>
<command batch="6">F(k).colormap = [];</command>
<command batch="6">F(k).tstamp = t;</command>
<command batch="6">F(k).framenumber = k;</command>
<command batch="6" execution_time="159266">end</command>
<command execution_time="27">F</command>
<command execution_time="50">for fileNum=1:7, C = out(fileNum).chunked; C(24:end)=[]; out(fileNum).chunked = C; end</command>
<command execution_time="27">clc</command>
<command execution_time="22">n=1</command>
<command execution_time="23">n=2</command>
<command execution_time="692">imrgbplay(cat(4, out(n).chunked.cdata))</command>
<command execution_time="456">for k=1:7, c(k).rgb=cat(4,out(k).chunked.cdata); end</command>
<command execution_time="24">c</command>
<command execution_time="23">c(1)</command>
<command error="true" execution_time="25">imrgbplay(  cat(1, (cat(2, c(1:3).rgb), cat(2, c(4:6).rgb))))</command>
<command execution_time="5591">imrgbplay(  cat(1, cat(2, c(1:3).rgb), cat(2, c(4:6).rgb) ) )</command>
<command execution_time="33">c</command>
<command execution_time="27">c(1)</command>
<command execution_time="28">which imcomposite</command>
<command execution_time="656">edit imcomposite</command>
<command execution_time="7583">which distinguishiable_colors</command>
<command execution_time="35">pathtool</command>
<command execution_time="28">out(7)</command>
<command execution_time="30">out(7).chunked</command>
<command error="true" execution_time="29">imcomposite(out(7).chunked.cdata(:,:,1))</command>
<command execution_time="73">f=cat(4,out(k).chunked.cdata);</command>
<command execution_time="29">whos f</command>
<command execution_time="396">help cellmat</command>
<command execution_time="471">help mat2cell</command>
<command error="true" execution_time="63">s = mat2cell(f, size(f,1), size(f,2), 1, 1);</command>
<command execution_time="395">s = mat2cell(f, size(f,1), size(f,2), ones(1,size(f,3)), ones(1,size(f,4)));</command>
<command execution_time="30">s</command>
<command execution_time="25">size(s)</command>
<command execution_time="26">size(squeeze(s))</command>
<command execution_time="26">s(1)</command>
<command execution_time="70">c = {}</command>
<command execution_time="410">s = squeeze(mat2cell(f, size(f,1), size(f,2), ones(1,size(f,3)), ones(1,size(f,4))));</command>
<command execution_time="27">s</command>
<command execution_time="29">clc</command>
<command execution_time="35">c</command>
<command execution_time="30">size(c)</command>
<command execution_time="1032">imcomposite(c{ 1, :, 1})</command>
<command execution_time="574">imcomposite(c{ 1, 1:3, 7})</command>
<command execution_time="447">imcomposite(c{ 1, 1:8, 7})</command>
<command execution_time="424">imcomposite(c{ 1, 1:4, 7})</command>
<command execution_time="23">which imcomposite</command>
<command execution_time="31">which imoverlay</command>
<command execution_time="426">help imoverlay</command>
<command execution_time="21">which imrgbplay</command>
<command execution_time="31">which imrc</command>
<command execution_time="677">edit imrc</command>
<command error="true" execution_time="39">imrc(c{ 1, 1:3, 7})</command>
<command execution_time="959">imrc(cat(3, c{ 1, 1:3, 7}))</command>
<command execution_time="665">imrc(cat(3, c{ 1, 1:5, 7}))</command>
<command error="true" execution_time="476">imrcOverlay(cat(3, c{ 1, 1:5, 7}))</command>
<command execution_time="22">whos f</command>
<command execution_time="57">[val,idx] = max(f(:,:,1,:),[],4);</command>
<command execution_time="21">whos idx</command>
<command error="true" execution_time="479">imrcOverlay(idx,squeeze(cat(4,f(:,:,1,:))))</command>
<command execution_time="2571">idx</command>
<command execution_time="494">imrcOverlay(idx,max(squeeze(cat(4,f(:,:,1,:))),[],3))</command>
<command execution_time="462">imrcOverlay(idx,val)</command>
<command execution_time="456">imrcOverlay(val,idx)</command>
<command error="true" execution_time="49">imcomposite(cat(3, c{ 1, 1:4, 7}))</command>
<command execution_time="272">imcomposite(c{ 1, 1:4, 7})</command>
<command execution_time="1216">imsc(F)</command>
<command execution_time="20">imin</command>
<command execution_time="21">imax</command>
<command execution_time="491">imsc(F)</command>
<command execution_time="33">numBaseFrames</command>
<command execution_time="21">numMask</command>
<command execution_time="21">numBaseFrames</command>
<command execution_time="221">dbquit</command>
<command execution_time="649">imcomposite(c{ 1, 1:4, 7}, max(cat(3,c{1,1:4,7}),[],3)&gt;.3)</command>
<command execution_time="3810">imcomposite(c{ 1, 1:4, 7}, cat(3,c{1,1:4,7})&gt;.3)</command>
<command execution_time="3678">imcomposite(c{ 1, 1:4, 7}, cat(3,c{1,1:4,7})&gt;.5)</command>
<command execution_time="11852">imcomposite(c{ 1, 1:8, 7}, cat(4,c{1,1:8,7})&gt;.5)</command>
<command error="true" execution_time="56">imcomposite(cat(4,c{1,1:8,7})&gt;.5)</command>
<command error="true" execution_time="17">imcomposite(cat(4,c{1,1:8,7})&gt;.5))</command>
<command execution_time="506">imcomposite(max(cat(4,c{2,:,7}),[],4)  , c{ 1, 1:4, 7})</command>
<command execution_time="21">whos f</command>
<command execution_time="21">whos</command>
<command execution_time="19">whos b</command>
<command execution_time="19">whos sb</command>
<command execution_time="20">whos f</command>
<command execution_time="19">whos b</command>
<command error="true" execution_time="65">imoverlay(f,b)</command>
<command error="true" execution_time="717">imcomposite(f,b)</command>
<command execution_time="821">imcomposite(f(:,:,1,:),b(:,:,1,:))</command>
<command execution_time="906">imcomposite(f(:,:,2,:),b(:,:,1,:))</command>
<command execution_time="820">imcomposite(f(:,:,2,:),b(:,:,1,1))</command>
<command execution_time="564">imcomposite(f(:,:,2,:),b(:,:,1,2))</command>
<command execution_time="651">imcomposite(f(:,:,2,:),b(:,:,1,3))</command>
<command execution_time="644">imcomposite(f(:,:,2,:),b(:,:,1,4))</command>
<command execution_time="641">imcomposite(f(:,:,2,:),b(:,:,1,5))</command>
<command execution_time="534">imcomposite(f(:,:,2,:),c{1,1:4,1})</command>
<command execution_time="647">imcomposite(f(:,:,2,:),b(:,:,1,5))</command>
<command execution_time="21">clc</command>
<command execution_time="436">sf = squeeze(mat2cell(f, size(f,1), size(f,2), ones(1,size(f,3)), ones(1,size(f,4))));</command>
<command error="true" execution_time="491">sb = squeeze(mat2cell(b, size(b,1), size(b,2), ones(b,size(b,3)), ones(1,size(b,4))));</command>
<command execution_time="4468">imcomposite(squeeze(max(cat(4,cf{2,:,7}),[],4)), cb{1,:,7})</command>
<command batch="7">chunkrange = 1:6;</command>
<command batch="7" execution_time="1695">imcomposite(squeeze(max(cat(4,cf{2,chunkrange,7}),[],4)), cb{1,chunkrange,7})</command>
<command batch="8">for k=1:15</command>
<command batch="8">chunkrange = k + (0:5);</command>
<command batch="8">imcomposite(squeeze(max(cat(4,cf{2,chunkrange,7}),[],4)), cb{1,chunkrange,7})</command>
<command batch="8">disp(chunkrange)</command>
<command batch="8">pause</command>
<command batch="8" execution_time="78845">end</command>
<command error="true" execution_time="440">chunkrange = k + (0:numchunks-1)</command>
<command execution_time="8372">help medfilt2</command>
<command execution_time="5807">savefig2jpeg</command>
<command execution_time="26">pictitle = ['imcomposite_lowthresh_', datestr(now,'yyyymmmdd_HHMMSSPM'),'.png']</command>
<command error="true" execution_time="503">fig2png(gfc,pictitle)</command>
<command execution_time="26225">fig2png(gcf,pictitle)</command>
<command execution_time="785">frame = getframe;</command>
<command execution_time="20">whos frame</command>
<command execution_time="20">frame(1)</command>
<command batch="9">imcomposite(...</command>
<command batch="9">bg,...</command>
<command batch="9" execution_time="1581">cb1{1,chunkrange,day})</command>
<command execution_time="866">frame1 = getframe;</command>
<command batch="10">imcomposite(...</command>
<command batch="10">bg,...</command>
<command batch="10" execution_time="1529">cb2{1,chunkrange,day})</command>
<command execution_time="605">frame2 = getframe;</command>
<command execution_time="85">imshow(frame1(1).cdata + frame2(1).cdata)</command>
<command execution_time="73">imshow(uint8( .6*frame1(1).cdata + .6*frame2(1).cdata ))</command>
<command execution_time="56">imshow(frame1(1).cdata)</command>
<command execution_time="56">imshow(frame2(1).cdata)</command>
<command execution_time="55">imshow(frame1(1).cdata)</command>
<command execution_time="55">imshow(frame2(1).cdata)</command>
<command execution_time="53">imshow(frame1(1).cdata)</command>
<command execution_time="54">imshow(frame2(1).cdata)</command>
<command execution_time="53">imshow(frame1(1).cdata)</command>
<command execution_time="53">imshow(frame2(1).cdata)</command>
<command execution_time="55">imshow(frame1(1).cdata)</command>
<command execution_time="474">imshow(uint8( .6*double(frame1(1).cdata) + .6*double(frame2(1).cdata) ))</command>
<command execution_time="54">imshow(frame1(1).cdata)</command>
<command execution_time="55">imshow(frame2(1).cdata)</command>
<command execution_time="54">imshow(frame1(1).cdata)</command>
<command execution_time="468">imshow(uint8( .6*double(frame1(1).cdata) + .6*double(frame2(1).cdata) ))</command>
<command execution_time="55">imshow(frame2(1).cdata)</command>
<command batch="11">imcomposite(...</command>
<command batch="11">bg,...</command>
<command batch="11" execution_time="1509">cb1{1,chunkrange,day})</command>
<command execution_time="458">imshow(uint8( .6*double(frame1(1).cdata) + .6*double(frame2(1).cdata) ))</command>
<command error="true" execution_time="81">set(gcf,'Title',sprintf('day %d - chunk %d to %d', day, chunkrange(1), chunkrange(end)))</command>
<command execution_time="46">set(gcf)</command>
<command error="true" execution_time="39">set(gca,'Title',sprintf('day %d - chunk %d to %d', day, chunkrange(1), chunkrange(end)));</command>
<command execution_time="40">set(gca)</command>
<command execution_time="28">ax = gca</command>
<command execution_time="25">ax.Title</command>
<command execution_time="26">ax.Title.String</command>
<command execution_time="19">ax.Title.String = sprintf('day %d - chunk %d to %d', day, chunkrange(1), chunkrange(end));</command>
<command execution_time="65">savefig2jpeg</command>
<command execution_time="23">1:numchunks:23</command>
<command execution_time="21">size(cf,2)</command>
<command execution_time="22">chunkrange&gt;size(cf,2)</command>
<command execution_time="23">chunkrange(chunkrange&gt;size(cf,2))</command>
<command execution_time="22">chunkrange(chunkrange&gt;size(cf,2)) = []</command>
<command execution_time="25">get(gcf)</command>
<command execution_time="22">set(gcf,'Position',[0 0 1 1])</command>
<command batch="12">imcomposite(...</command>
<command batch="12">bg,...</command>
<command batch="12">cb1{1,chunkrange,day})</command>
<command batch="12">ax = gca;</command>
<command batch="12">ax.Title.String = sprintf('imcomposite (day %d - chunk %d to %d) ', day, chunkrange(1), chunkrange(end));</command>
<command batch="12">set(gcf,'Position',[0 0 1 1])</command>
<command batch="12">pause(.1)</command>
<command batch="12">%     imcomposite(...</command>
<command batch="12">%         bg,...</command>
<command batch="12">%         cb2{1,chunkrange,day})</command>
<command batch="12">%     pause(.1)</command>
<command batch="12" execution_time="2032">savefig2jpeg</command>
<command error="true" execution_time="56">compareImages(C(7).cdata)</command>
<command execution_time="34">cf</command>
<command execution_time="33">r = cat(2,cf{1,:,7});</command>
<command execution_time="464">seq = cat(3, cat(2,cf{1,:,7}), cat(2,cf{2,:,7}), cat(2,cf{3,:,7}) );</command>
<command execution_time="673">imshow(seq)</command>
<command execution_time="22">size(cf)</command>
<command execution_time="23">makeStrip = @(day) cat(3, cat(2,cf{1,:,day}), cat(2,cf{2,:,day}), cat(2,cf{3,:,day}) );</command>
<command execution_time="616">imshow(makeStrip(1))</command>
<command execution_time="22">makeStrip = @(day,chunks) cat(3, cat(2,cf{1,chunks,day}), cat(2,cf{2,chunks,day}), cat(2,cf{3,chunks,day}) );</command>
<command execution_time="644">imshow(makeStrip(1,1:6))</command>
<command execution_time="610">imshow(makeStrip(1,1:6:23))</command>
<command execution_time="541">imshow(makeStrip(2,1:6:23))</command>
<command execution_time="838">imshow(makeStrip(3,1:2:23))</command>
<command execution_time="526">imshow(makeStrip(4,1:2:23))</command>
<command execution_time="625" repeat="2">imshow(makeStrip(5,1:2:23))</command>
<command execution_time="627">imshow(makeStrip(7,1:2:23))</command>
<command batch="13" error="true">makeStrip = @(day,chunks) cat(3, cat(2,cf{1,chunks,day}), cat(2,cf{2,chunks,day}), cat(2,cf{3,chunks,day}) );</command>
<command batch="13" error="true">imshow(makeStrip(7,1:2:23))</command>
<command batch="13" error="true">ax = gca;</command>
<command batch="13" error="true">ax.Title.String = sprintf('imcomposite (day %d - chunk %d to %d) ', day, chunkrange(1), chunkrange(end));</command>
<command batch="13" error="true">set(gcf,'Position',[0 0 1 1])</command>
<command batch="13" error="true">pause(.1)</command>
<command batch="13" error="true" execution_time="1101">savefig2jpeg</command>
<command execution_time="478">help padarray</command>
<command execution_time="1136">cf_pad = cellfun(@(A)padarray(A,[5 5]), cf, 'UniformOutput', false);</command>
<command execution_time="35">cf_pad</command>
<command execution_time="22">makeStrip = @(day,chunks) cat(3, cat(2,cf_pad{1,chunks,day}), cat(2,cf_pad{2,chunks,day}), cat(2,cf_pad{3,chunks,day}) );</command>
<command execution_time="553">imshow(makeStrip(7,1:2:23))</command>
<command error="true" execution_time="23">get(gcf</command>
<command execution_time="23">get(gcf)</command>
<command execution_time="641">imshow(makeStrip(day,1:2:23))</command>
<command execution_time="22">get(gcf,'Units')</command>
<command execution_time="23">set(gcf,'Units','Normalized')</command>
<command batch="14">ax = gca;</command>
<command batch="14">ax.Title.String = sprintf('strip (day %d) ', day);</command>
<command batch="14">set(gcf,'Position',[0 0 1 1])</command>
<command batch="14" execution_time="1120">drawnow</command>
<command execution_time="656">savefig2jpeg</command>
<command error="true" execution_time="58">fig2png</command>
<command error="true" execution_time="25">fig2png(ax.Title.String)</command>
<command execution_time="26735">fig2png(gcf, ax.Title.String)</command>
<command batch="15" error="true">cf={};</command>
<command batch="15" error="true">cb = {};</command>
<command batch="15" error="true">for k=1:7</command>
<command batch="15" error="true">f=cat(4,out(k).chunked.cdata);</command>
<command batch="15" error="true">b1 = f &gt; 80;</command>
<command batch="15" error="true">b2 = f &gt; 150;</command>
<command batch="15" error="true">sf = squeeze(mat2cell(f, size(f,1), size(f,2), ones(1,size(f,3)), ones(1,size(f,4))));</command>
<command batch="15" error="true">sb1 = squeeze(mat2cell(b1, size(b1,1), size(b1,2), ones(1,size(b1,3)), ones(1,size(b1,4))));</command>
<command batch="15" error="true">sb2 = squeeze(mat2cell(b2, size(b2,1), size(b2,2), ones(1,size(b2,3)), ones(1,size(b2,4))));</command>
<command batch="15" error="true">cf(:,:,k) = sf; % color X chunk X day</command>
<command batch="15" error="true">cb1(:,:,k) = sb1;</command>
<command batch="15" error="true">cb2(:,:,k) = sb2;</command>
<command batch="15" error="true">%c(k).rgb = f;</command>
<command batch="15" error="true">end</command>
<command batch="15" error="true" execution_time="835464">import_to_matlab</command>
<command error="true" execution_time="100167">cf={};</command>
<command error="true" execution_time="1337716">import_to_matlab</command>
<command execution_time="18">which uiputdir</command>
<command execution_time="44">pathtool</command>
<command execution_time="21">whos</command>
<command execution_time="18">clc</command>
<command execution_time="19">fname</command>
<command execution_time="21">VR</command>
<command execution_time="25">VR(1)</command>
<command execution_time="25">whos VR</command>
<command execution_time="25">VR(1)</command>
<command execution_time="30">VR(2)</command>
<command execution_time="30">VR(7)</command>
<command execution_time="4729">clear</command>
<command error="true" execution_time="26583">import_to_matlab</command>
<command execution_time="56">ls</command>
<command execution_time="85">cd SC0503-M2RH\</command>
<command execution_time="496">help uigetfile</command>
<command execution_time="5059">[filename,pathname] = uigetfile('*.mp4','Select Files','MultiSelect','on')</command>
<command execution_time="31">k = 1</command>
<command execution_time="30">fname = fullfile(pathname,filename{k})</command>
<command execution_time="30">fprintf('Loading %s\n', fname)</command>
<command error="true" execution_time="8485" repeat="2">import_to_matlab</command>
<command execution_time="908">clear</command>
<command execution_time="32">clc</command>
<command error="true" execution_time="1406794">import_to_matlab</command>
<command execution_time="83">cf_pad</command>
<command execution_time="32">clc</command>
<command error="true" execution_time="490">image(makestrip(4,1:5))</command>
<command execution_time="480" repeat="2">image(makeStrip(4,1:5))</command>
<command execution_time="487">help axis</command>
<command execution_time="42">axis image ij fill</command>
<command execution_time="54">set(gca)</command>
<command execution_time="737">imshow(makeStrip(day,1:2:23))</command>
<command execution_time="31">ax = gca;</command>
<command execution_time="30">ax.Title.String = sprintf('strip (day %d) ', day);</command>
<command execution_time="31">set(gcf,'Units','Normalized')</command>
<command execution_time="30">set(gcf,'Position',[0 0 1 1])</command>
<command execution_time="35">drawnow</command>
<command error="true" execution_time="7273">fig2png(gcf, ax.Title.String)</command>
<command execution_time="468">help print</command>
<command execution_time="624">imshow(makeStrip(day,1:2:23))</command>
<command batch="16">ax = gca;</command>
<command batch="16" execution_time="33">ax.Title.String = sprintf('strip (day %d) ', day);</command>
<command execution_time="32">fileName =  ax.Title.String</command>
<command execution_time="32">hFig = gcf</command>
<command execution_time="31">get(get(gca,'Title'),'String')</command>
<command execution_time="31">figDir = pwd</command>
<command execution_time="5536">print(hFig,fullfile(figDir,fileName), '-dpng','-r450')</command>
<command execution_time="31">makeStrip = @(day,chunks,dim) cat(3, cat(dim,cf_pad{1,chunks,day}), cat(dim,cf_pad{2,chunks,day}), cat(dim,cf_pad{3,chunks,day}) );</command>
<command execution_time="33">whos out</command>
<command execution_time="31">GB(out)</command>
<command execution_time="551">save('chunked_output.mat','out','-v6')</command>
<command execution_time="40">cd(pathname)</command>
<command execution_time="599">imshow( makeStrip( day, 1:10, 1) )</command>
<command execution_time="1324">imshow( cat(1, makeStrip( day, 1:7, 2) , makeStrip(day,8:14,2), makeStrip(day,15:21,2)))</command>
<command execution_time="39950">savepath</command>
<command execution_time="34">cf_pad</command>
<command execution_time="31">Nchunks = size(cf_pad,2);</command>
<command execution_time="31">Nchunks</command>
<command execution_time="1621099">import_to_matlab</command>
<command execution_time="46">cf</command>
<command execution_time="1895">f</command>
<command execution_time="1975">imrgbplay(f)</command>
<command execution_time="31">clc</command>
<command execution_time="1355">imrgbplay(f)</command>
<command execution_time="39">clc</command>
<command execution_time="1249">imrgbplay(f)</command>
<command execution_time="36">Nchunks</command>
</session>
<session>
<command time_stamp="15c7d744a19">%-- 6/6/2017 8:49 AM --%</command>
<command execution_time="94">cd('Z:\Files\backup\redundancy_cleanup')</command>
<command execution_time="499">edit</command>
</session>
<session>
<command time_stamp="15cf95f062e">%-- 6/30/2017 10:19 AM --%</command>
<command execution_time="60">clc</command>
<command execution_time="120">pathtool</command>
<command execution_time="2101827">pcout = runScicadelicVidGen</command>
<command execution_time="40">clc</command>
<command execution_time="90" repeat="2">cd ..</command>
<command execution_time="85">cd LastMinuteVideo\</command>
<command execution_time="35">whos</command>
<command execution_time="230">clear</command>
<command execution_time="30">clc</command>
<command execution_time="40">load('movementdata.mat')</command>
<command execution_time="25">whos</command>
<command execution_time="385">plot(xvals)</command>
<command execution_time="35">d.x = xvals;</command>
<command execution_time="30">d.y = yvals;</command>
<command execution_time="30">k = 20;</command>
<command execution_time="25">pre=20;</command>
<command execution_time="25">post=5;</command>
<command execution_time="25">k=21;</command>
<command execution_time="25">idx=k-pre : k+post;</command>
<command execution_time="30">idx</command>
<command execution_time="30">d.x(idx)</command>
<command execution_time="25">d.y(idx)</command>
<command execution_time="30">u=d.x(idx);</command>
<command execution_time="35">u = d.x(idx); v = d.y(idx); w = zeros(size(idx));</command>
<command error="true" execution_time="250">streamtube(u,v,w,0,0,0)</command>
<command execution_time="30">u</command>
<command execution_time="30">v</command>
<command execution_time="32">w</command>
<command execution_time="30">clc</command>
<command execution_time="23">u = d.x(idx); v = d.y(idx); w = zeros(size(u));</command>
<command execution_time="30">clc</command>
<command error="true" execution_time="25">streamtube(u,v,w,0,0,0)</command>
<command error="true" execution_time="55">verts = stream3(u,v,w,0,0,0)</command>
<command execution_time="25">whos</command>
<command execution_time="30">load wind</command>
<command execution_time="30">whos</command>
<command execution_time="255">u</command>
<command execution_time="35">whos</command>
<command execution_time="5396">for m=1:15; imagesc(u(:,:,m)), pause, end</command>
<command execution_time="7140">for m=1:15; imagesc(y(:,:,m)), pause, end</command>
<command execution_time="17621">for m=1:15; imagesc(v(:,:,m)), pause, end</command>
<command execution_time="223">x</command>
<command execution_time="30">clc</command>
<command execution_time="25">clear</command>
<command error="true" execution_time="400">dx = alld.x(idx); dy = alld.y(idx); dz = zeros(size(dy));</command>
<command execution_time="20" repeat="2">dx</command>
<command execution_time="30">clear</command>
<command execution_time="35">scrapShowMotionPath</command>
<command execution_time="30">f</command>
<command execution_time="95">plot(f.dx)</command>
<command execution_time="30">plot(f.x)</command>
<command execution_time="51">scrapShowMotionPath</command>
<command execution_time="28">dx</command>
<command execution_time="30">dy</command>
<command error="true" execution_time="203">x</command>
<command execution_time="311">f.x</command>
<command execution_time="60">mean(f.x)</command>
<command execution_time="30">range(f.x)</command>
<command execution_time="29">f.dx(1:100)</command>
<command execution_time="30">f.dx(1:10)</command>
<command execution_time="29">toeplitz(f.dx(1:10))</command>
<command execution_time="27">toeplitz(f.dx(10:-1:1))</command>
<command execution_time="31">toeplitz(f.dx(10:-1:1), f.dx(10:20))</command>
<command batch="17" error="true">f.dx(1:20</command>
<command batch="17" error="true" execution_time="43">)</command>
<command execution_time="32">f.dx(1:20)</command>
<command batch="18">k0 = 100;</command>
<command batch="18">pre = 20;</command>
<command batch="18">post = 5;</command>
<command batch="18">k=21;</command>
<command batch="18" execution_time="69">J.dx = toeplitz(f.dx(k0:-1:k0-pre), f.dx(k0:end));</command>
<command execution_time="30">J.dx(:,1:20)</command>
<command execution_time="29">toeplitz(5:-1:2, 5:10)</command>
<command execution_time="30">clc</command>
<command error="true" execution_time="47">scrapShowMotionPath</command>
<command execution_time="33">clc</command>
<command execution_time="30">getTail(1:200)</command>
<command execution_time="31">clc</command>
<command execution_time="28">getNose(1:130)</command>
<command execution_time="32">getNose = @(dd)toeplitz(dd((K0+len.nose):-1:(K0-len.tail)), dd((K0+len+nose):end));</command>
<command error="true" execution_time="43">getNose(1:130)</command>
<command execution_time="29">getNose = @(dd)toeplitz(dd((K0+len.nose):-1:(K0-len.tail)), dd((K0+len.nose):end));</command>
<command execution_time="31">getNose(1:130)</command>
<command execution_time="30">getTail(1:130)</command>
<command execution_time="35">getNose = @(dd)toeplitz(dd((K0+len.nose):-1:K0), dd((K0+len.nose):end));</command>
<command execution_time="31">getTail(1:130)</command>
<command execution_time="33">getNose(1:130)</command>
<command execution_time="32">K0</command>
<command execution_time="208">plot3(tail.x(:,1), tail.y(:,1), zeros(size(tail.y(:,1))))</command>
<command execution_time="385">grid on</command>
<command execution_time="20">clc</command>
<command execution_time="23">44.1e3</command>
<command execution_time="23">1/44.1e3</command>
<command execution_time="25">1/44.1e3 * 10^6</command>
<command execution_time="22">1/44.1e3 * 10^6 * .05</command>
<command batch="19">fs = [44.1e3 48e3 96e3 192e3</command>
<command batch="19" execution_time="25">]</command>
<command execution_time="23">10^6 ./ fs</command>
<command execution_time="20">clc</command>
<command execution_time="23">tail</command>
<command execution_time="24">whos</command>
<command execution_time="18">clear fs</command>
<command execution_time="20">clc</command>
<command execution_time="23">whos</command>
<command execution_time="24">tail</command>
<command execution_time="23">nose</command>
<command execution_time="33">nose.x(:,1:20)</command>
<command execution_time="22">nose.dx(:,1:20)</command>
<command execution_time="22">nose.dy(:,1:20)</command>
<command execution_time="36">tail.dy(:,1:20)</command>
<command execution_time="20">tail.dy(:,1:2)</command>
<command execution_time="21">clc</command>
<command execution_time="29">nose.dy(:,1:2), tail.dy(:,1:2)</command>
<command execution_time="32">mean(nose.dy(:,1:2),1), mean(tail.dy(:,1:2),1)</command>
<command execution_time="24">nose.dy(:,1:5), tail.dy(:,1:5)</command>
<command execution_time="22">f.dy(K0)</command>
<command execution_time="22">f.dy(K0+1)</command>
<command execution_time="1012">help surf</command>
<command execution_time="315">help patch</command>
<command error="true" execution_time="18">x = tail.x(:,1); y = tail.y(:,1); z = zeros(size(tail.y(:,1))));</command>
<command execution_time="20">x = tail.x(:,1); y = tail.y(:,1); z = zeros(size(tail.y(:,1)));</command>
<command execution_time="23">x</command>
<command execution_time="20">f.dx(1:10)</command>
<command execution_time="23">f.dy(1:10)</command>
<command execution_time="250">help gradient</command>
<command error="true" execution_time="189">idx</command>
<command execution_time="22">dx</command>
<command execution_time="23">dy</command>
<command execution_time="21">dz</command>
<command execution_time="20">x</command>
<command execution_time="22">y</command>
<command execution_time="33">plot3(x,y,z)</command>
<command execution_time="29">grid on</command>
<command execution_time="22">[dx' ; dy']</command>
<command execution_time="21">L</command>
<command execution_time="21">R</command>
<command execution_time="32">hold on</command>
<command execution_time="21">plot3(L(1,:)',L(2,:)',z)</command>
<command execution_time="22">plot3(R(1,:)',R(2,:)',z)</command>
<command execution_time="414">help hypot</command>
<command execution_time="21">dP</command>
<command execution_time="22">hypot(dx,dy)</command>
<command execution_time="21">dy</command>
<command execution_time="20">dP</command>
<command execution_time="27">cla</command>
<command execution_time="20">plot3(L(1,:)',L(2,:)',z)</command>
<command execution_time="21">hold on</command>
<command execution_time="20">plot3(R(1,:)',R(2,:)',z)</command>
<command execution_time="21">L</command>
<command execution_time="22">R</command>
<command execution_time="19">hypot(dx,dy)</command>
<command execution_time="20">dx</command>
<command execution_time="20">dy</command>
<command execution_time="20">P</command>
<command execution_time="20">P'</command>
<command execution_time="20">P + dP</command>
<command execution_time="21">L</command>
<command execution_time="34">R</command>
<command execution_time="21">cla</command>
<command execution_time="47">v = [L' ; flipud(R')]</command>
<command execution_time="31">hRoad = patch(v(:,1),v(:,2),zeros(size(v,1),1));</command>
<command execution_time="21">cla</command>
<command execution_time="21">hRoad = patch(v(:,1),v(:,2),.1*rand(size(v,1),1));</command>
<command execution_time="192">help patch</command>
<command execution_time="25">hold off</command>
<command execution_time="28">hRoad = fill3(v(:,1),v(:,2),.1*rand(size(v,1),1),'r');</command>
<command error="true" execution_time="70">hRoad = fill3(v(:,1),v(:,2),.1*rand(size(v,1),1));</command>
<command execution_time="22">hRoad = patch(v(:,1),v(:,2),.1*rand(size(v,1),1),'r');</command>
<command execution_time="21">hold off</command>
<command execution_time="21">hRoad = patch(v(:,1),v(:,2),.1*rand(size(v,1),1),'r');</command>
<command execution_time="22">cla</command>
<command error="true" execution_time="48">hRoad = patch(v(:,1),v(:,2));</command>
<command execution_time="23">v</command>
<command execution_time="47">hRoad = patch(v(:,1),v(:,2),zeros(size(v,1),1))</command>
<command execution_time="28">grid on</command>
<command execution_time="21">hRoad</command>
<command execution_time="40">hRoad.FaceVertexCData</command>
<command execution_time="34">hRoad.Vertices</command>
<command execution_time="21">hRoad</command>
<command execution_time="21">hRoad.Faces</command>
<command execution_time="208">help patch</command>
<command execution_time="25">hold off</command>
<command execution_time="23">cla</command>
<command execution_time="22">P</command>
<command execution_time="30">verts = {[P' zeros(size(P,2),1)]}</command>
<command error="true" execution_time="77">streamribbon(verts)</command>
<command execution_time="32">t=0:.15:1</command>
<command execution_time="21">cos(t)'</command>
<command execution_time="206">streamribbon(verts,{zeros(size(P,2),1)})</command>
<command execution_time="20">cla</command>
<command execution_time="39">streamribbon(verts,{pi/2.*ones(size(P,2),1)})</command>
<command execution_time="28">streamribbon(verts,{ones(size(P,2),1)})</command>
<command execution_time="20">cla</command>
<command execution_time="31">streamribbon(verts,{ones(size(P,2),1)})</command>
<command execution_time="20">cla</command>
<command execution_time="48">streamribbon(verts,{0.*ones(size(P,2),1)})</command>
<command execution_time="49">hrib = streamribbon(verts,{0.*ones(size(P,2),1)})</command>
<command execution_time="35">hrib.ZData</command>
<command execution_time="20">hrib.XData</command>
<command execution_time="21">hrib.YData</command>
<command execution_time="20">L</command>
<command execution_time="33">R</command>
<command execution_time="19">xdata = [L(1,:)' R(1,:)'];</command>
<command execution_time="19">ydata = [L(2,:)' R(2,:)'];</command>
<command execution_time="19">cla</command>
<command execution_time="38">hsurf = surface('xdata',xdata,'ydata',ydata)</command>
<command execution_time="36">hsurf = surface('xdata',xdata,'ydata',ydata,'ZData',zeros(26,2))</command>
<command error="true" execution_time="192">hsurf = surface('xdata',xdata,'ydata',ydata,'ZData',zeros(26,2),CData,zeros(26,2))</command>
<command execution_time="262">hsurf = surface('xdata',xdata,'ydata',ydata,'ZData',zeros(26,2),cvdata,zeros(26,2))</command>
<command execution_time="35">hsurf = surface('xdata',xdata,'ydata',ydata,'ZData',zeros(26,2),'CData',zeros(26,2))</command>
<command execution_time="20">cla</command>
<command execution_time="33">hsurf = surface('xdata',xdata,'ydata',ydata,'ZData',zeros(26,2),'CData',zeros(26,2))</command>
<command execution_time="36">hsurf</command>
<command execution_time="34">hsurf.EdgeAlpha = 0</command>
<command execution_time="35">hsurf.EdgeAlpha = .1</command>
<command execution_time="85">set(hsurf)</command>
<command execution_time="34">hsurf.FaceLighting = 'gouraud'</command>
<command execution_time="44">hsurf.FaceAlpha</command>
<command execution_time="35">hsurf.FaceAlpha = .1</command>
<command execution_time="35">hsurf.FaceAlpha = .5</command>
<command execution_time="33">k = k + 100</command>
<command execution_time="20">cla</command>
<command execution_time="35">hsurf = surface</command>
<command execution_time="36">hsurf.EdgeAlpha = 0</command>
<command execution_time="35">hsurf.FaceAlpha = 1</command>
<command execution_time="20">hsurf.FaceColor</command>
<command execution_time="33">set(hsurf, 'FaceColor')</command>
<command execution_time="20">set(hsurf, 'FaceColor', 'interp')</command>
<command execution_time="20">set(hsurf, 'FaceColor', 'none')</command>
<command execution_time="19">set(hsurf, 'FaceColor', 'texturemap')</command>
<command execution_time="33">L(1,:)</command>
<command execution_time="33">L(2,:)'</command>
<command execution_time="32">x</command>
<command execution_time="31">y</command>
<command execution_time="31">dx</command>
<command execution_time="31">dy</command>
<command execution_time="20">L</command>
<command execution_time="33">L'</command>
<command execution_time="19">P</command>
<command execution_time="27">x</command>
<command execution_time="39">ydata</command>
<command execution_time="31">xdata</command>
<command batch="20" error="true">idx=k-len.tail : k+len.nose;</command>
<command batch="20" error="true">idx = idx(idx&lt;=numel(f.x));</command>
<command batch="20" error="true">x = f.x(idx); y = f.y(idx); z = zeros(numel(idx),1);</command>
<command batch="20" error="true">dx = f.dx(idx); dy = f.dy(idx); dz = zeros(size(dy));</command>
<command batch="20" error="true">roadWidth = .1;</command>
<command batch="20" error="true">P = [x , y];</command>
<command batch="20" error="true">dP = [dx , dy];</command>
<command batch="20" error="true">L = P + roadWidth .* [0 -1 ; 1 0] * ((dP./hypot(dx,dy))');</command>
<command batch="20" error="true" execution_time="201">R = P + roadWidth .* [0 1 ; -1 0] * ((dP./hypot(dx,dy))');</command>
<command batch="21">idx=k-len.tail : k+len.nose;</command>
<command batch="21">idx = idx(idx&lt;=numel(f.x));</command>
<command batch="21">x = f.x(idx); y = f.y(idx); z = zeros(numel(idx),1);</command>
<command batch="21">dx = f.dx(idx); dy = f.dy(idx); dz = zeros(size(dy));</command>
<command batch="21">roadWidth = .1;</command>
<command batch="21">P = [x , y];</command>
<command batch="21" execution_time="90">dP = [dx , dy];</command>
<command error="true" execution_time="34">L = P + roadWidth .* [0 -1 ; 1 0] * ((dP./hypot(dx,dy))');</command>
<command execution_time="20">P</command>
<command execution_time="20">roadWidth</command>
<command execution_time="19">[0 -1 ; 1 0]</command>
<command execution_time="19">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command execution_time="20">L</command>
<command execution_time="38">xdata = [L(:,1) ; R(:,1)]</command>
<command execution_time="20">ydata</command>
<command execution_time="33">ydata = [L(:,2) , R(:,2)]</command>
<command execution_time="32">xdata = [L(:,1) , R(:,1)]</command>
<command batch="22">set(hsurf,...</command>
<command batch="22">'xdata',xdata,...</command>
<command batch="22">'ydata',ydata,...</command>
<command batch="22">'ZData',zeros(26,2),...</command>
<command batch="22" execution_time="21">'CData',zeros(26,2))</command>
<command batch="23" error="true">set(hsurf,...</command>
<command batch="23" error="true">'xdata',xdata,...</command>
<command batch="23" error="true">'ydata',ydata,...</command>
<command batch="23" error="true">'ZData',zeros(size(xdata)),...</command>
<command batch="23" error="true" execution_time="24">'CData',zeros(size(xdata))</command>
<command execution_time="33">x</command>
<command execution_time="39">gradient(x)</command>
<command execution_time="31">gradient(y)</command>
<command error="true" execution_time="196">d</command>
<command execution_time="40">x</command>
<command execution_time="31">y</command>
<command execution_time="32">dx</command>
<command execution_time="31">dy</command>
<command execution_time="32">L</command>
<command execution_time="31">R</command>
<command batch="24">idx=k-len.tail : k+len.nose;</command>
<command batch="24">idx = idx(idx&lt;=numel(f.x));</command>
<command batch="24">x = f.x(idx); y = f.y(idx); z = zeros(numel(idx),1);</command>
<command batch="24">dx = f.dx(idx); dy = f.dy(idx); dz = zeros(size(dy));</command>
<command batch="24">roadWidth = .1;</command>
<command batch="24">P = [x , y];</command>
<command batch="24">dP = [dx , dy];</command>
<command batch="24">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="24">R = P + roadWidth .* ([0 1 ; -1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="24">% v = [L' ; flipud(R')];</command>
<command batch="24">% hRoad = patch('vertices',v, 'Faces', 1:size(v,1),...</command>
<command batch="24">%     'FaceColor','blue',...</command>
<command batch="24">%     'FaceAlpha',.2);</command>
<command batch="24">% grid on</command>
<command batch="24">xdata = [L(:,1) , R(:,1)];</command>
<command batch="24" execution_time="254">ydata = [L(:,2) , R(:,2)];</command>
<command execution_time="32">xdata</command>
<command execution_time="19">dx</command>
<command execution_time="28">hypot(dx,dy)</command>
<command execution_time="32">xdata</command>
<command batch="25">set(hsurf,...</command>
<command batch="25">'xdata',xdata,...</command>
<command batch="25">'ydata',ydata,...</command>
<command batch="25">'ZData',zeros(size(xdata)),...</command>
<command batch="25" execution_time="20">'CData',zeros(size(xdata)))</command>
<command execution_time="19">x = f.x;</command>
<command execution_time="18">y = f.y;</command>
<command execution_time="18">dx = f.dx;</command>
<command execution_time="19">dy = f.dy;</command>
<command batch="26">roadWidth = .1;</command>
<command batch="26">P = [x , y];</command>
<command batch="26">dP = [dx , dy];</command>
<command batch="26">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="26" execution_time="63">R = P + roadWidth .* ([0 1 ; -1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="27">xdata = [L(:,1) , R(:,1)];</command>
<command batch="27">ydata = [L(:,2) , R(:,2)];</command>
<command batch="27">set(hsurf,...</command>
<command batch="27">'xdata',xdata,...</command>
<command batch="27">'ydata',ydata,...</command>
<command batch="27">'ZData',zeros(size(xdata)),...</command>
<command batch="27" execution_time="55">'CData',zeros(size(xdata)));</command>
<command execution_time="20">t = -pi:.01:pi;</command>
<command execution_time="48">x = sin(t)</command>
<command execution_time="19">clc</command>
<command execution_time="19">y = cos(t);</command>
<command execution_time="21">dx = gradient(x);</command>
<command execution_time="20">dy = gradient(y);</command>
<command batch="28" error="true">roadWidth = .1;</command>
<command batch="28" error="true">P = [x , y];</command>
<command batch="28" error="true">dP = [dx , dy];</command>
<command batch="28" error="true">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="28" error="true">R = P + roadWidth .* ([0 1 ; -1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="28" error="true">% v = [L' ; flipud(R')];</command>
<command batch="28" error="true">% hRoad = patch('vertices',v, 'Faces', 1:size(v,1),...</command>
<command batch="28" error="true">%     'FaceColor','blue',...</command>
<command batch="28" error="true">%     'FaceAlpha',.2);</command>
<command batch="28" error="true">% grid on</command>
<command batch="28" error="true">xdata = [L(:,1) , R(:,1)];</command>
<command batch="28" error="true">ydata = [L(:,2) , R(:,2)];</command>
<command batch="28" error="true">set(hsurf,...</command>
<command batch="28" error="true">'xdata',xdata,...</command>
<command batch="28" error="true">'ydata',ydata,...</command>
<command batch="28" error="true">'ZData',zeros(size(xdata)),...</command>
<command batch="28" error="true" execution_time="67">'CData',zeros(size(xdata)));</command>
<command batch="29">P = [x , y];</command>
<command batch="29" execution_time="30">dP = [dx , dy];</command>
<command error="true" execution_time="26">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))'</command>
<command execution_time="48">dx</command>
<command execution_time="20">clc</command>
<command execution_time="40">x = sin(t)'</command>
<command execution_time="37">y = cos(t)';</command>
<command execution_time="37">dx = gradient(x);</command>
<command execution_time="37">dy = gradient(y);</command>
<command execution_time="39">dx</command>
<command execution_time="39">clc</command>
<command execution_time="21">cla</command>
<command execution_time="48">xdata</command>
<command execution_time="37">ydata</command>
<command execution_time="36">xdata</command>
<command execution_time="31">size(xdata)</command>
<command execution_time="23">t = -pi:.1:pi;</command>
<command batch="30">x = sin(t)'</command>
<command batch="30">y = cos(t)';</command>
<command batch="30">dx = gradient(x);</command>
<command batch="30" execution_time="53">dy = gradient(y);</command>
<command execution_time="28">plot(x,y)</command>
<command error="true" execution_time="24">plot3(x,y)</command>
<command execution_time="25">plot3(x,y,zeros(size(x)))</command>
<command execution_time="23">grid on</command>
<command batch="31">hsurf = surface(....</command>
<command batch="31">'EdgeAlpha', 0.0,...</command>
<command batch="31" execution_time="24">'FaceAlpha', 0.5);</command>
<command batch="32">roadWidth = .1;</command>
<command batch="32">P = [x , y];</command>
<command batch="32">dP = [dx , dy];</command>
<command batch="32">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="32">R = P + roadWidth .* ([0 1 ; -1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="32">% v = [L' ; flipud(R')];</command>
<command batch="32">% hRoad = patch('vertices',v, 'Faces', 1:size(v,1),...</command>
<command batch="32">%     'FaceColor','blue',...</command>
<command batch="32">%     'FaceAlpha',.2);</command>
<command batch="32">% grid on</command>
<command batch="32">xdata = [L(:,1) , R(:,1)];</command>
<command batch="32" execution_time="206">ydata = [L(:,2) , R(:,2)];</command>
<command execution_time="24">xdata</command>
<command batch="33">set(hsurf,...</command>
<command batch="33">'xdata',xdata,...</command>
<command batch="33">'ydata',ydata,...</command>
<command batch="33">'ZData',zeros(size(xdata)),...</command>
<command batch="33" execution_time="26">'CData',zeros(size(xdata)));</command>
<command error="true" execution_time="40">help help flipud</command>
<command execution_time="238">help flipdim</command>
<command execution_time="20">x</command>
<command batch="34">t = [t t];</command>
<command batch="34">x = (1 + linspace(0,1,numel(t))) .* sin(t)'</command>
<command batch="34">y = (1 + linspace(0,1,numel(t))) .* cos(t)';</command>
<command batch="34">dx = gradient(x);</command>
<command batch="34" execution_time="231">dy = gradient(y);</command>
<command execution_time="22">clc</command>
<command batch="35">x = (1 + linspace(0,1,numel(t))) .* sin(t)';</command>
<command batch="35">y = (1 + linspace(0,1,numel(t))) .* cos(t)';</command>
<command batch="35">dx = gradient(x);</command>
<command batch="35" execution_time="55">dy = gradient(y);</command>
<command execution_time="86">plot3(x,y,zeros(size(x)))</command>
<command execution_time="38">cla</command>
<command execution_time="88">plot3(x,y,zeros(size(x)))</command>
<command execution_time="31">t</command>
<command execution_time="25">t = t';</command>
<command execution_time="22">x = (1 + linspace(0,1,numel(t))) .* sin(t)';</command>
<command execution_time="23">x</command>
<command execution_time="44">plot(x)</command>
<command execution_time="77">plot(y)</command>
<command execution_time="20">y = (1 + linspace(0,1,numel(t))) .* cos(t)';</command>
<command execution_time="40">plot(y)</command>
<command execution_time="21">dx = gradient(x);</command>
<command execution_time="20">dy = gradient(y);</command>
<command execution_time="23">plot3(x,y,zeros(size(x)))</command>
<command batch="36">hsurf = surface(....</command>
<command batch="36">'EdgeAlpha', 0.0,...</command>
<command batch="36" execution_time="23">'FaceAlpha', 0.5);</command>
<command batch="37" error="true">roadWidth = .1;</command>
<command batch="37" error="true">P = [x , y];</command>
<command batch="37" error="true">dP = [dx , dy];</command>
<command batch="37" error="true">L = P + roadWidth .* ([0 -1 ; 1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="37" error="true">R = P + roadWidth .* ([0 1 ; -1 0] * ((dP./hypot(dx,dy))'))';</command>
<command batch="37" error="true">% v = [L' ; flipud(R')];</command>
<command batch="37" error="true">% hRoad = patch('vertices',v, 'Faces', 1:size(v,1),...</command>
<command batch="37" error="true">%     'FaceColor','blue',...</command>
<command batch="37" error="true">%     'FaceAlpha',.2);</command>
<command batch="37" error="true">% grid on</command>
<command batch="37" error="true">xdata = [L(:,1) , R(:,1)];</command>
<command batch="37" error="true">ydata = [L(:,2) , R(:,2)];</command>
<command batch="37" error="true">set(hsurf,...</command>
<command batch="37" error="true">'xdata',xdata,...</command>
<command batch="37" error="true">'ydata',ydata,...</command>
<command batch="37" error="true">'ZData',zeros(size(xdata)),...</command>
<command batch="37" error="true">'CData',zeros(size(xdata)));</command>
<command batch="37" error="true">k = k + 1;</command>
<command batch="37" error="true" execution_time="71">drawnow</command>
<command execution_time="24">whos</command>
<command execution_time="27">whos dx</command>
<command execution_time="23">whos x</command>
<command execution_time="21">whos y</command>
<command execution_time="23">x = (1 + linspace(0,1,numel(t))') .* sin(t);</command>
<command execution_time="22">y = (1 + linspace(0,1,numel(t))') .* cos(t);</command>
<command execution_time="23">dx = gradient(x);</command>
<command execution_time="22">dy = gradient(y);</command>
<command execution_time="25">plot3(x,y,zeros(size(x)))</command>
<command batch="38">hsurf = surface(....</command>
<command batch="38">'EdgeAlpha', 0.0,...</command>
<command batch="38" execution_time="25">'FaceAlpha', 0.5);</command>
<command execution_time="102">help cross</command>
<command execution_time="23">whos xvals</command>
<command execution_time="23">p = [xvals yvals];</command>
<command execution_time="30">dx</command>
<command execution_time="24">x</command>
<command execution_time="23">gradient(dx)</command>
<command error="true" execution_time="195">dp</command>
<command execution_time="28">dP</command>
<command execution_time="21">x</command>
<command execution_time="238">help diff</command>
<command execution_time="25">clear</command>
<command execution_time="21">x = xvals;</command>
<command execution_time="22">y = yvals;</command>
<command execution_time="32">z = [];</command>
<command execution_time="25">roadWidth = mean(diff(x));</command>
<command execution_time="23">roadWidth</command>
<command execution_time="23">roadWidth = mean(abs(diff(x)))</command>
<command execution_time="20">z = [];</command>
<command execution_time="22">z = zeros(size(x));</command>
<command batch="39">x = x(:);</command>
<command batch="39">y = y(:);</command>
<command batch="39">z = z(:);</command>
<command batch="39" execution_time="53">N = length(x);</command>
<command batch="40">P = [x , y , z];</command>
<command batch="40" execution_time="31">dP = diff(P);</command>
<command execution_time="25">whos</command>
<command execution_time="66">help cross</command>
<command execution_time="22">dP(1:5,:)</command>
<command execution_time="22">P(1:5,:)</command>
<command execution_time="34">roadWidth = median(abs(diff(x)))</command>
<command execution_time="22">idx=30:35</command>
<command execution_time="22">P(idx,:)</command>
<command execution_time="22">dP(idx,:)</command>
<command execution_time="22">P(31,:)-P(30,:)</command>
<command execution_time="32">cross(dP(30,:),dP(31,:))</command>
<command execution_time="22">x = xvals(40:end);</command>
<command execution_time="23">y = yvals(40:end);</command>
<command execution_time="23">roadWidth = median(abs(diff(x)))</command>
<command execution_time="22">z = zeros(size(x));</command>
<command batch="41">x = x(:);</command>
<command batch="41">y = y(:);</command>
<command batch="41">z = z(:);</command>
<command batch="41">N = length(x);</command>
<command batch="41">% Get Position Velocity and Acceleration Vectors</command>
<command batch="41">P = [x , y , z];</command>
<command batch="41" execution_time="93">dP = diff(P);</command>
<command execution_time="23">cross(dP(30,:),dP(31,:))</command>
<command execution_time="22">dP(31,:)</command>
<command execution_time="21">dP(30,:)</command>
<command execution_time="23">dP(31,:)-dP(30,:)</command>
<command error="true" execution_time="512">cross(dp(30:40,:),dP(31:41,:))</command>
<command execution_time="38">cross(dP(30:40,:),dP(31:41,:))</command>
<command batch="42">dPb = [zeros(1,3) ; dP];</command>
<command batch="42" execution_time="35">dPf = [dP ; zeros(1,3)];</command>
<command execution_time="24">cross([0 1 0], [0 1 0])</command>
<command execution_time="23">cross([0 1 0], [0 1.1 0])</command>
<command execution_time="24">cross([1 1 0], [1 1.1 0])</command>
<command execution_time="24">cross([1 1 0], [1 1 0])</command>
<command execution_time="23">cross([1 1 0], [.9 1 0])</command>
<command execution_time="253">cross([0 1 0], [-.1 1 0])</command>
<command execution_time="21">cross([0 1 0], [.1 1 0])</command>
<command execution_time="24">cross([0 1 0], [0 1 0])</command>
<command execution_time="23">cross([0 1 0], [0.1 .9 0])</command>
<command execution_time="23">cross([0 1 0], [0.1 .8 0])</command>
<command execution_time="24">cross([0 1 0], [0.1 1.1 0])</command>
<command execution_time="24">cross([.1 1 0], [0.1 1.1 0])</command>
<command execution_time="23">cross([.1 1 0], [0.2 1.1 0])</command>
<command execution_time="23">cross([.1 1 0], [0.2 1 0])</command>
<command batch="43">P = [x , y , z];</command>
<command batch="43">dP = diff(P);</command>
<command batch="43">dPb = [zeros(1,3) ; dP];</command>
<command batch="43">dPf = [dP ; zeros(1,3)];</command>
<command batch="43">Pt = .5*dPb + .5*dPf;</command>
<command batch="43" execution_time="88">Pt_norm = Pt ./ hypot(Pt(:,1),Pt(:,2));</command>
<command execution_time="26">whos</command>
<command execution_time="25">Pt_cross = cross(dPb,dPf);</command>
<command execution_time="23">Pt_cross(1:10,:)</command>
<command execution_time="22">whos</command>
<command execution_time="23">Pt_norm(1:10,:)</command>
<command execution_time="26">[0 -1 0; 1 0 0 ; 0 0 1] * Pt_norm(1:10,:)'</command>
<command execution_time="24">([0 -1 0; 1 0 0 ; 0 0 1] * Pt_norm(1:10,:)')'</command>
<command execution_time="23">Pt_norm(1:10,:)</command>
<command execution_time="23">([0 -1 0; 1 0 0 ; 0 0 1] * Pt_norm(1:10,:)')'</command>
<command execution_time="38">cross([0 1 0] , [-.25 1 0])</command>
<command execution_time="22">cross([0 1 0] , [.25 1 0])</command>
<command execution_time="22">cross([0 1 0] , [-.25 1 0])</command>
<command execution_time="23">cross([-1 0 0] , [-1 -.25 0])</command>
<command execution_time="24">cross([0 -1 0] , [.25 -1 0])</command>
<command batch="44">Pt = .5*dPb + .5*dPf;</command>
<command batch="44">Pt_norm = Pt ./ hypot(Pt(:,1),Pt(:,2));</command>
<command batch="44">Pt_cross = cross(dPb,dPf); % left turn positive</command>
<command batch="44">Pt_left = ([0 -1 0; 1 0 0 ; 0 0 1] * Pt_norm')';</command>
<command batch="44">Pt_right = ([0 1 0; -1 0 0 ; 0 0 1] * Pt_norm')';</command>
<command batch="44">L = P + roadWidth .* Pt_left - Pt_cross;</command>
<command batch="44" execution_time="482">R = P + roadWidth .* Pt_right + Pt_cross;</command>
<command batch="45">xdata = [L(:,1) , R(:,1)];</command>
<command batch="45" execution_time="31">ydata = [L(:,2) , R(:,2)];</command>
<command execution_time="23">whos L</command>
<command execution_time="338">zdata = [L(:,3) , R(:,3)];</command>
<command batch="46">set(hsurf,...</command>
<command batch="46">'XData',xdata,...</command>
<command batch="46">'YData',ydata,...</command>
<command batch="46">'ZData',zdata,...</command>
<command batch="46" execution_time="25">'CData',zeros(size(xdata)));</command>
<command execution_time="32">plotSurfIdx = @(idx) set(hsurf,'XData',xdata(idx),'YData',ydata(idx),'ZData',zdata(idx),'CData',zeros(numel(idx),1))</command>
<command execution_time="577">plotSurfIdx(50:100)</command>
<command execution_time="24">whos</command>
<command execution_time="29">plotSurfIdx = @(idx) set(hsurf,'XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',zeros(numel(idx),2))</command>
<command execution_time="22">plotSurfIdx(50:100)</command>
<command batch="47">cla</command>
<command batch="47">hsurf = surface(....</command>
<command batch="47">'EdgeAlpha', 0.0,...</command>
<command batch="47" execution_time="32">'FaceAlpha', 0.5);</command>
<command execution_time="23">cla</command>
<command batch="48">hsurf = surface(....</command>
<command batch="48">'EdgeAlpha', 0.0,...</command>
<command batch="48" execution_time="26">'FaceAlpha', 0.5);</command>
<command execution_time="24">plotSurfIdx = @(idx) set(hsurf,'XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',zeros(numel(idx),2))</command>
<command execution_time="21">plotSurfIdx(50:100)</command>
<command execution_time="24">idx=50:100</command>
<command execution_time="27">set(hsurf,'XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',zeros(numel(idx),2))</command>
<command execution_time="24">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',zeros(numel(idx),2))</command>
<command execution_time="75">clf</command>
<command execution_time="27">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',zeros(numel(idx),2))</command>
<command execution_time="25">grid on</command>
<command execution_time="31">clf</command>
<command execution_time="27">plot(Pt_cross(:,3))</command>
<command execution_time="26">plot(tan(Pt_cross(:,3)))</command>
<command execution_time="25">plot(atan(Pt_cross(:,3)))</command>
<command execution_time="22">atan(0)</command>
<command batch="49">L = P + roadWidth .* (Pt_left - atan(Pt_cross));</command>
<command batch="49" execution_time="33">R = P + roadWidth .* (Pt_right + atan(Pt_cross));</command>
<command batch="50">xdata = [L(:,1) , R(:,1)];</command>
<command batch="50">ydata = [L(:,2) , R(:,2)];</command>
<command batch="50" execution_time="43">zdata = [L(:,3) , R(:,3)];</command>
<command execution_time="25">cdata = zeros(size(xdata));</command>
<command execution_time="579">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',cdata(idx,:))</command>
<command execution_time="32">clf</command>
<command execution_time="27">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',cdata(idx,:),'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command execution_time="24">roadWidth</command>
<command execution_time="26">roadWidth = .3</command>
<command batch="51">L = P + roadWidth .* Pt_left - atan(Pt_cross);</command>
<command batch="51" execution_time="33">R = P + roadWidth .* Pt_right + atan(Pt_cross);</command>
<command batch="52">L = P + roadWidth .* Pt_left - atan(Pt_cross);</command>
<command batch="52">R = P + roadWidth .* Pt_right + atan(Pt_cross);</command>
<command batch="52">xdata = [L(:,1) , R(:,1)];</command>
<command batch="52">ydata = [L(:,2) , R(:,2)];</command>
<command batch="52">zdata = [L(:,3) , R(:,3)];</command>
<command batch="52" execution_time="86">cdata = zeros(size(xdata));</command>
<command execution_time="30">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',cdata(idx,:),'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command execution_time="559">clf</command>
<command execution_time="28">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',cdata(idx,:),'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command batch="53">L = P + roadWidth .* Pt_left ;%- atan(Pt_cross);</command>
<command batch="53" execution_time="32">R = P + roadWidth .* Pt_right ;%+ atan(Pt_cross);</command>
<command batch="54">xdata = [L(:,1) , R(:,1)];</command>
<command batch="54">ydata = [L(:,2) , R(:,2)];</command>
<command batch="54">zdata = [L(:,3) , R(:,3)];</command>
<command batch="54" execution_time="52">cdata = zeros(size(xdata));</command>
<command execution_time="605">clf</command>
<command execution_time="28">surface('XData',xdata(idx,:),'YData',ydata(idx,:),'ZData',zdata(idx,:),'CData',cdata(idx,:),'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command error="true" execution_time="41">DT = delaunayTriangulation(xdata,ydata,zdata);</command>
<command error="true" execution_time="551">DT = delaunayTriangulation(xdata,ydata);</command>
<command execution_time="30">B = @(t,p1,p2,p3) [1 t t.^2] * [1 0 0 ; -2 2 0 ; 1 -2 1] * [p1(:)' ; p2(:)' ; p3(:)']</command>
<command execution_time="30">B = @(t,p1,p2,p3) [1 t(:) t(:).^2] * [1 0 0 ; -2 2 0 ; 1 -2 1] * [p1(:)' ; p2(:)' ; p3(:)']</command>
<command execution_time="571">B = @(t,p1,p2,p3) [ones(numel(t),1) t(:) t(:).^2] * [1 0 0 ; -2 2 0 ; 1 -2 1] * [p1(:)' ; p2(:)' ; p3(:)']</command>
<command execution_time="23">B(0,4,5,6)</command>
<command execution_time="25">B(0,[0 0],[.6 .4],[1 1])</command>
<command execution_time="26" repeat="2">B(.5,[0 0],[.6 .4],[1 1])</command>
<command execution_time="24">B(0:.1:1,[0 0],[.6 .4],[1 1])</command>
<command execution_time="30">clf</command>
<command execution_time="1268">L</command>
<command execution_time="24">any(isnan(L(:)))</command>
<command execution_time="28">any(isnan(P(:)))</command>
<command execution_time="24">any(isnan(Pt_norm(:)))</command>
<command execution_time="23">k = 2;</command>
<command execution_time="20">P(k,:)</command>
<command execution_time="725">Pt_left(k,:)</command>
<command error="true" execution_time="26">any(isnan(Pt_norm(:,1)) &amp;&amp; ~(Pt(:,1)==0 &amp;&amp; Pt(:,2)==0))</command>
<command error="true" execution_time="23">any(isnan(Pt_norm(:,1)) &amp;&amp; ~((Pt(:,1)==0) &amp;&amp; (Pt(:,2)==0)))</command>
<command execution_time="911">isnan(Pt_norm(:,1))</command>
<command error="true" execution_time="17">~((Pt(:,1)==0) &amp;&amp; (Pt(:,2)==0)))</command>
<command error="true" execution_time="28">~((Pt(:,1)==0) &amp;&amp; (Pt(:,2)==0))</command>
<command error="true" execution_time="15">(Pt(:,1)==0) &amp;&amp; (Pt(:,2)==0))</command>
<command error="true" execution_time="21">(Pt(:,1)==0) &amp;&amp; (Pt(:,2)==0)</command>
<command execution_time="462">(Pt(:,1)==0) &amp; (Pt(:,2)==0)</command>
<command error="true" execution_time="28">any(isnan(Pt_norm(:,1)) &amp;&amp; ~((Pt(:,1)==0) &amp; (Pt(:,2)==0)))</command>
<command execution_time="30">any(isnan(Pt_norm(:,1)) &amp; (Pt(:,1)==0) &amp; (Pt(:,2)==0))</command>
<command execution_time="30">any(isnan(Pt_norm(:,1)) &amp; ~(Pt(:,1)==0) &amp; (Pt(:,2)==0))</command>
<command batch="55">hsurf = surface(....</command>
<command batch="55">'EdgeAlpha', 0.0,...</command>
<command batch="55">'FaceAlpha', 0.5);</command>
<command batch="55" execution_time="56">hline = line()</command>
<command execution_time="244">idx=20:30;</command>
<command execution_time="21">hline.XData = P(idx,1);</command>
<command execution_time="21">hline.YData = P(idx,2);</command>
<command execution_time="583">hline.ZData = P(idx,3);</command>
<command execution_time="22">set(hline,'XData',P(idx,1),'YData',P(idx,2),'ZData',P(idx,3))</command>
<command execution_time="20">idx = 100:110;</command>
<command execution_time="21">set(hline,'XData',P(idx,1),'YData',P(idx,2),'ZData',P(idx,3))</command>
<command execution_time="606">L=P(idx,:) + roadWidth .* Pt_left(idx,:);</command>
<command execution_time="22">R=P(idx,:) + roadWidth .* Pt_right(idx,:);</command>
<command batch="56">xdata = [L(:,1) , R(:,1)];</command>
<command batch="56">ydata = [L(:,2) , R(:,2)];</command>
<command batch="56">zdata = [L(:,3) , R(:,3)];</command>
<command batch="56" execution_time="823">cdata = zeros(size(xdata));</command>
<command batch="57">set(hline,'XData',P(idx,1),'YData',P(idx,2),'ZData',P(idx,3))</command>
<command batch="57">set(hsurf,'XData',xdata,'YData',ydata,'ZData',zdata,'CData',cdata,...</command>
<command batch="57" execution_time="31">'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command execution_time="282">xdata</command>
<command execution_time="20">ydata</command>
<command execution_time="24">idx=145:146</command>
<command batch="58">L=P(idx,:) + roadWidth .* Pt_left(idx,:);</command>
<command batch="58">R=P(idx,:) + roadWidth .* Pt_right(idx,:);</command>
<command batch="58">xdata = [L(:,1) , R(:,1)];</command>
<command batch="58">ydata = [L(:,2) , R(:,2)];</command>
<command batch="58">zdata = [L(:,3) , R(:,3)];</command>
<command batch="58">cdata = zeros(size(xdata));</command>
<command batch="58">set(hline,'XData',P(idx,1),'YData',P(idx,2),'ZData',P(idx,3))</command>
<command batch="58">set(hsurf,'XData',xdata,'YData',ydata,'ZData',zdata,'CData',cdata,...</command>
<command batch="58" execution_time="1067">'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command execution_time="23">xdata</command>
<command execution_time="22">ydata</command>
<command execution_time="21">idx = 145:147</command>
<command execution_time="22">L=P(idx,:) + roadWidth .* Pt_left(idx,:)</command>
<command execution_time="22">R=P(idx,:) + roadWidth .* Pt_right(idx,:)</command>
<command execution_time="22">B(0:.1:1, L(1,:), L(2,:), L(3,:))</command>
<command execution_time="20">L=P(idx,:) + roadWidth .* Pt_left(idx,:)</command>
<command execution_time="20">R=P(idx,:) + roadWidth .* Pt_right(idx,:)</command>
<command batch="59">Lb = B(0:.1:1, L(1,:), L(2,:), L(3,:));</command>
<command batch="59">Rb = B(0:.1:1, R(1,:), R(2,:), R(3,:));</command>
<command batch="59">xdata = [Lb(:,1) , Rb(:,1)];</command>
<command batch="59">ydata = [Lb(:,2) , Rb(:,2)];</command>
<command batch="59">zdata = [Lb(:,3) , Rb(:,3)];</command>
<command batch="59" execution_time="86">cdata = zeros(size(xdata));</command>
<command batch="60">set(hsurf,'XData',xdata,'YData',ydata,'ZData',zdata,'CData',cdata,...</command>
<command batch="60" execution_time="24">'EdgeAlpha',.1,'FaceAlpha',.5)</command>
<command execution_time="22">clear</command>
<command execution_time="20">x = xvals(17:end);</command>
<command execution_time="20">y = yvals(17:end);</command>
<command execution_time="1325">cla</command>
<command execution_time="1282">clf</command>
<command execution_time="11411">k=1</command>
<command batch="61">p_left{1} = ([0 -1 0; 1 0 0 ; 0 0 1] * dPb_norm(k)')';</command>
<command batch="61">p_left{2} = ([0 -1 0; 1 0 0 ; 0 0 1] * dP_norm(k)')';</command>
<command batch="61">p_left{3} = ([0 -1 0; 1 0 0 ; 0 0 1] * dPf_norm(k)')';</command>
<command batch="61">p_right{1} = ([0 1 0; -1 0 0 ; 0 0 1] * dPb_norm(k)')';</command>
<command batch="61">p_right{2} = ([0 1 0; -1 0 0 ; 0 0 1] * dP_norm(k)')';</command>
<command batch="61" execution_time="10496">p_right{3} = ([0 1 0; -1 0 0 ; 0 0 1] * dPf_norm(k)')';</command>
</session>
<session>
<command time_stamp="15d2c0ad800">%-- 7/10/2017 6:28 AM --%</command>
<command execution_time="31">load('movementdata.mat')</command>
<command execution_time="25">x = xvals(17:end);</command>
<command execution_time="24">y = yvals(17:end);</command>
<command execution_time="1337">help norm</command>
<command execution_time="29">makeUnitVec = @(v) v ./ hypot(v(:,1),v(:,2))</command>
<command execution_time="25">x(1)</command>
<command execution_time="28">P = [x , y , z];</command>
<command execution_time="25">makeUnitVec(P(1,:))</command>
<command execution_time="27">makeUnitVec(P(5,:))</command>
<command execution_time="25">hypot(0,0)</command>
<command execution_time="22">makeUnitVec = @(v) v ./ (hypot(v(:,1),v(:,2))+eps);</command>
<command execution_time="25">hypot(0,0)</command>
<command execution_time="28">makeUnitVec(P(5,:))</command>
<command execution_time="20">makeUnitVec([0 0 0])</command>
<command execution_time="28">[0 0 0] ./ hypot(0,0)</command>
<command execution_time="25">clear</command>
<command execution_time="22">load('movementdata.mat')</command>
<command execution_time="25">x = xvals(17:end);</command>
<command execution_time="27">y = yvals(17:end);</command>
<command execution_time="23">k=1</command>
<command batch="62">p = P(k,:);</command>
<command batch="62">if k&gt;1</command>
<command batch="62">dpb = p - P(k-1,:);</command>
<command batch="62">else</command>
<command batch="62">dpb = zeros(1,3);</command>
<command batch="62">end</command>
<command batch="62">if k&lt;N</command>
<command batch="62">dpf = P(k+1,:) - p;</command>
<command batch="62">else</command>
<command batch="62">dpf = zeros(1,3);</command>
<command batch="62">end</command>
<command batch="62" execution_time="42">dp = .5*dpb + .5*dpf;</command>
<command execution_time="25">whos</command>
<command execution_time="25">dp</command>
<command execution_time="23">dpb</command>
<command execution_time="23">dpf</command>
<command execution_time="25">P(2,:)</command>
<command execution_time="22">dp</command>
<command error="true" execution_time="367">p_left</command>
<command batch="63">p_left{1} = p - .5*dpb + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="63">p_left{2} = p + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="63">p_left{3} = p + .5*dpf + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="63">p_right{1} = p - .5*dpb + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="63">p_right{2} = p + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="63" execution_time="78">p_right{3} = p + .5*dpf + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command execution_time="28">p_right</command>
<command execution_time="30">p_left</command>
<command execution_time="25">p_left{1}</command>
<command execution_time="25">p_left{2}</command>
<command execution_time="28">p_left{3}</command>
<command execution_time="25">p_right{3}</command>
<command execution_time="24">p_left_b = B(0:.1:1, p_left{:})</command>
<command execution_time="23">p_left_b</command>
<command error="true" execution_time="294">p_right_b</command>
<command batch="64">p_left_b = B(0:.1:1, p_left{:});</command>
<command batch="64" execution_time="25">p_right_b = B(0:.1:1, p_right{:});</command>
<command execution_time="22">p_right_b</command>
<command batch="65">xdata = [p_left_b(:,1) , p_right_b(:,1)];</command>
<command batch="65">ydata = [p_left_b(:,2) , p_right_b(:,2)];</command>
<command batch="65">zdata = [p_left_b(:,3) , p_right_b(:,3)];</command>
<command batch="65" execution_time="36">cdata = zeros(size(xdata));</command>
<command execution_time="22">set(h.surf,'XData',xdata,'YData',ydata,'ZData',zdata,'CData',cdata)</command>
<command execution_time="25">set(h.line,'XData',p(:,1),'YData',p(:,2),'ZData',p(:,3))</command>
<command execution_time="20">p_left_b</command>
<command execution_time="23">p_right_b</command>
<command execution_time="17">p_left_b</command>
<command batch="66">p_trajectory{1} = p - .5*dpb;</command>
<command batch="66">p_trajectory{2} = p;</command>
<command batch="66" execution_time="30">p_trajectory{3} = p + .5*dpf;</command>
<command batch="67">k = 1;</command>
<command batch="67">T.X = {};</command>
<command batch="67">T.Y = {};</command>
<command batch="67">T.Z = {};</command>
<command batch="67">S.X = {};</command>
<command batch="67">S.Y = {};</command>
<command batch="67">S.Z = {};</command>
<command batch="67" execution_time="62">S.C = {};</command>
<command batch="68">p = P(k,:);</command>
<command batch="68">if k&gt;1</command>
<command batch="68">dpb = p - P(k-1,:);</command>
<command batch="68">else</command>
<command batch="68">dpb = zeros(1,3);</command>
<command batch="68">end</command>
<command batch="68">if k&lt;N</command>
<command batch="68">dpf = P(k+1,:) - p;</command>
<command batch="68">else</command>
<command batch="68">dpf = zeros(1,3);</command>
<command batch="68">end</command>
<command batch="68">dp = .5*dpb + .5*dpf;</command>
<command batch="68">p_trajectory{1} = p - .5*dpb;</command>
<command batch="68">p_trajectory{2} = p;</command>
<command batch="68">p_trajectory{3} = p + .5*dpf;</command>
<command batch="68">p_left{1} = p - .5*dpb + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="68">p_left{2} = p + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="68">p_left{3} = p + .5*dpf + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="68">p_right{1} = p - .5*dpb + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="68">p_right{2} = p + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="68">p_right{3} = p + .5*dpf + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="68">p_trajectory_b = B(0:.1:1, p_trajectory{:});</command>
<command batch="68">p_left_b = B(0:.1:1, p_left{:});</command>
<command batch="68">p_right_b = B(0:.1:1, p_right{:});</command>
<command batch="68">T.X{end+1} = p_trajectory_b(:,1);</command>
<command batch="68">T.Y{end+1} = p_trajectory_b(:,2);</command>
<command batch="68">T.Z{end+1} = p_trajectory_b(:,3);</command>
<command batch="68">S.X{end+1} = [p_left_b(:,1) , p_right_b(:,1)];</command>
<command batch="68">S.Y{end+1} = [p_left_b(:,2) , p_right_b(:,2)];</command>
<command batch="68">S.Z{end+1} = [p_left_b(:,3) , p_right_b(:,3)];</command>
<command batch="68" execution_time="308">S.C{end+1} = zeros(size(p_left_b,1),2);</command>
<command execution_time="25">S</command>
<command execution_time="27">T</command>
<command execution_time="25">numel(S.X)</command>
<command execution_time="22">set(h.line,'XData',cat(1,T.X{:}),'YData',cat(1,T.Y{:}),'ZData',cat(1,T.Z{:}))</command>
<command execution_time="26">set(h.surf,'XData',cat(1,S.X{:}),'YData',cat(1,S.Y{:}),'ZData',cat(1,S.Z{:}),'CData',cat(1,S.C{:}))</command>
<command execution_time="22">N=50;</command>
<command execution_time="20">dp</command>
<command execution_time="25">p</command>
<command execution_time="2198">help camera</command>
<command execution_time="20">N = length(x);</command>
<command execution_time="35">get(h.line)</command>
<command execution_time="22">get(h.surf)</command>
<command error="true" execution_time="41">set(h.surf,'FaceAlpha', abs(sin(linspace(-pi/2,pi/2,220)))')</command>
<command execution_time="20">abs(sin(linspace(-pi/2,pi/2,220)))'</command>
<command execution_time="20">set(h.surf,'AlphaData', abs(sin(linspace(-pi/2,pi/2,220)))')</command>
<command execution_time="18">get(h.surf)</command>
<command execution_time="23">set(h.surf,'AlphaData', repmat(abs(sin(linspace(-pi/2,pi/2,220)))',1,2))</command>
<command execution_time="105">grid on</command>
<command execution_time="25">shading interp</command>
<command error="true" execution_time="42">lighting gourad</command>
<command execution_time="20">lighting gouraud</command>
<command execution_time="18">setGraphData = @(han,s,idx) set(han,'XData',cat(1,s.X{idx}),'YData',cat(1,s.Y{idx}),'ZData',cat(1,s.Z{idx}));</command>
<command execution_time="20">setGraphData = @(han,s,idx) set(han,'XData',cat(1,s.X{idx}),'YData',cat(1,s.Y{idx}),'ZData',cat(1,s.Z{idx}),'CData',cat(1,s.C{idx}));</command>
<command execution_time="28">S</command>
<command execution_time="20">setGraphData(h.surf,S,1:20)</command>
<command execution_time="20">T.X{end}</command>
<command execution_time="18">dp</command>
<command error="true" execution_time="20">hypot(dp)</command>
<command execution_time="20">norm(dp)</command>
<command execution_time="20">dp.^2</command>
<command execution_time="18">sum(dp.^2)</command>
<command execution_time="20">sqrt(sum(dp.^2))</command>
<command execution_time="20">orientation = atan2(dp(2),dp(1))</command>
<command execution_time="20">p_trajectory_b</command>
<command execution_time="62">norm(p_trajectory_b)</command>
<command execution_time="17">p_trajectory_b</command>
<command execution_time="17">p_left_b</command>
<command error="true" execution_time="25">cell.empty(1,23)</command>
<command execution_time="20">cell.empty(0,23)</command>
<command execution_time="20">cell(1,23)</command>
<command execution_time="15">T</command>
<command execution_time="17">c = {}</command>
<command execution_time="18">c{11} = [1 1 1]</command>
<command execution_time="17">cat(1,c{:})</command>
<command error="true" execution_time="290">bodyIdx</command>
<command execution_time="17">h</command>
<command execution_time="25">clc</command>
<command execution_time="15">T</command>
<command execution_time="32">clearvars h</command>
<command execution_time="15">h</command>
<command execution_time="20">S</command>
<command execution_time="18">S.X</command>
<command execution_time="17">S.C</command>
<command error="true" execution_time="15">linspace(0,1,numInterpPoints</command>
<command execution_time="17">linspace(0,1,numInterpPoints)</command>
<command execution_time="20">0:.1:1</command>
<command execution_time="83">colormap hot</command>
<command error="true" execution_time="30">cmap = [[linspace(0,1,128),linspace(0,1,128),ones(128,1)] ; [ones(128,1) , linspace(0,1,128) , linspace(0,1,128)]];</command>
<command execution_time="20">cmap = [[linspace(0,1,128)',linspace(0,1,128)',ones(128,1)] ; [ones(128,1) , linspace(0,1,128)' , linspace(0,1,128)']];</command>
<command execution_time="23">colormap(cmap);</command>
<command execution_time="18">velocity</command>
<command execution_time="16">dp</command>
<command execution_time="15">maxVelocity</command>
<command execution_time="20">p_trajectory_b</command>
<command execution_time="15">h</command>
<command execution_time="21">h.surfNose</command>
<command execution_time="18">h.surfBody</command>
<command execution_time="17">set(h.surfNose,'FaceAlpha','interp')</command>
<command execution_time="15">set(h.surfNose,'FaceColor','interp')</command>
<command batch="69" error="true">surfProps = {...</command>
<command batch="69" error="true">'EdgeAlpha', 0.0,...</command>
<command batch="69" error="true">'FaceColor', 'interp'</command>
<command batch="69" error="true" execution_time="25">'FaceAlpha', 'interp'};</command>
<command batch="70" error="true">surfProps = [...</command>
<command batch="70" error="true">{'EdgeAlpha'}, {0.0},...</command>
<command batch="70" error="true">{'FaceColor'}, {'interp'}</command>
<command batch="70" error="true" execution_time="20">{'FaceAlpha'}, {'interp'}]</command>
<command execution_time="20">whos surfProps</command>
<command batch="71">surfProps = [...</command>
<command batch="71">{'EdgeAlpha'}, {0.0},...</command>
<command batch="71">{'FaceColor'}, {'interp'},...</command>
<command batch="71" execution_time="22">{'FaceAlpha'}, {'interp'}]</command>
<command batch="72">surfProps = {...</command>
<command batch="72">'EdgeAlpha', 0.0,...</command>
<command batch="72">'FaceColor', 'interp',...</command>
<command batch="72" execution_time="20">'FaceAlpha', 'interp'}</command>
<command execution_time="25">get(h.surfNose)</command>
<command execution_time="20">noseIdx</command>
<command execution_time="17">bodyIdx</command>
<command execution_time="15">tailIdx</command>
<command execution_time="15">noseIdx</command>
<command execution_time="16">numTail</command>
<command execution_time="21">tailIdx</command>
<command execution_time="15">numTail</command>
<command execution_time="15">numBody</command>
<command execution_time="16">numTail</command>
<command execution_time="15">numBody</command>
<command execution_time="17">noseIdx</command>
<command execution_time="20">noseIdx = (numTail + numBody) + (1:numNose)</command>
<command execution_time="15">tailIdx</command>
<command execution_time="17">bodyAlpha = .7;</command>
<command batch="73">surfAlphaMask(tailIdx,:) = repmat( linspace(0,bodyAlpha*(1-1/numTail),numTail)', 1,2);</command>
<command batch="73">surfAlphaMask(bodyIdx,:) = ones(numBody,2);</command>
<command batch="73" execution_time="30">surfAlphaMask(noseIdx,:) = repmat( linspace(bodyAlpha*(1-1/numNose), 0, numNose)', 1,2);</command>
<command execution_time="17">surfAlphaMask</command>
<command execution_time="15">noseIdx</command>
<command execution_time="18">tailIdx</command>
<command execution_time="15">alphaVec = [linspace(0,bodyAlpha*(1-1/numTail),numTail) , ones(1,numBody) , linspace(bodyAlpha*(1-1/numNose), 0, numNose)];</command>
<command execution_time="17" repeat="2">alphaVec</command>
<command error="true" execution_time="331">numSegmentIdx</command>
<command execution_time="15">numSegmentIdx = numTail + numBody + numNose</command>
<command execution_time="18">surfAlphaMask</command>
<command execution_time="15">clear</command>
<command execution_time="25">clf</command>
<command execution_time="20">load('movementdata.mat')</command>
<command execution_time="22">x = xvals(17:end);</command>
<command execution_time="15">y = yvals(17:end);</command>
<command execution_time="18">h.surfRoad</command>
<command execution_time="53">get(h.ax)</command>
<command execution_time="20">get(h.fig)</command>
<command execution_time="25">h.fig.Colormap</command>
<command error="true" execution_time="247">h.fig.ColorMap = cmap;</command>
<command batch="74">set(h.fig,...</command>
<command batch="74" execution_time="15">'Colormap', cmap);</command>
<command error="true" execution_time="250">S</command>
<command batch="75" error="true">if k &lt;=N</command>
<command batch="75" error="true">p = P(k,:);</command>
<command batch="75" error="true">if k&gt;1</command>
<command batch="75" error="true">dpb = p - P(k-1,:);</command>
<command batch="75" error="true">else</command>
<command batch="75" error="true">dpb = zeros(1,3);</command>
<command batch="75" error="true">end</command>
<command batch="75" error="true">if k&lt;N</command>
<command batch="75" error="true">dpf = P(k+1,:) - p;</command>
<command batch="75" error="true">else</command>
<command batch="75" error="true">dpf = zeros(1,3);</command>
<command batch="75" error="true">end</command>
<command batch="75" error="true">dp = .5*dpb + .5*dpf;</command>
<command batch="75" error="true">% Get Single Velocity and Orientation</command>
<command batch="75" error="true">velocity = norm(dp);</command>
<command batch="75" error="true">orientation = atan2(dp(2),dp(1));</command>
<command batch="75" error="true">maxVelocity = max(velocity,maxVelocity);</command>
<command batch="75" error="true">% Build Triple Points for Trajectory and Offset Curves for</command>
<command batch="75" error="true">p_trajectory{1} = p - .5*dpb;</command>
<command batch="75" error="true">p_trajectory{2} = p;</command>
<command batch="75" error="true">p_trajectory{3} = p + .5*dpf;</command>
<command batch="75" error="true">p_left{1} = p - .5*dpb + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="75" error="true">p_left{2} = p + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="75" error="true">p_left{3} = p + .5*dpf + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="75" error="true">p_right{1} = p - .5*dpb + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="75" error="true">p_right{2} = p + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="75" error="true">p_right{3} = p + .5*dpf + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="75" error="true">% Interpolate using Bezier Curves</command>
<command batch="75" error="true">p_trajectory_b = B(linspace(0,1,numInterpPoints), p_trajectory{:});</command>
<command batch="75" error="true">p_left_b = B(linspace(0,1,numInterpPoints), p_left{:});</command>
<command batch="75" error="true">p_right_b = B(linspace(0,1,numInterpPoints), p_right{:});</command>
<command batch="75" error="true">dp_b = B(linspace(0,1,numInterpPoints), dpb , dp , dpf );</command>
<command batch="75" error="true" execution_time="7268">end'</command>
<command error="true" execution_time="251">dp_b</command>
<command batch="76">p = P(k,:);</command>
<command batch="76">if k&gt;1</command>
<command batch="76">dpb = p - P(k-1,:);</command>
<command batch="76">else</command>
<command batch="76">dpb = zeros(1,3);</command>
<command batch="76">end</command>
<command batch="76">if k&lt;N</command>
<command batch="76">dpf = P(k+1,:) - p;</command>
<command batch="76">else</command>
<command batch="76">dpf = zeros(1,3);</command>
<command batch="76">end</command>
<command batch="76">dp = .5*dpb + .5*dpf;</command>
<command batch="76">% Get Single Velocity and Orientation</command>
<command batch="76">velocity = norm(dp);</command>
<command batch="76">orientation = atan2(dp(2),dp(1));</command>
<command batch="76">maxVelocity = max(velocity,maxVelocity);</command>
<command batch="76">% Build Triple Points for Trajectory and Offset Curves for</command>
<command batch="76">p_trajectory{1} = p - .5*dpb;</command>
<command batch="76">p_trajectory{2} = p;</command>
<command batch="76">p_trajectory{3} = p + .5*dpf;</command>
<command batch="76">p_left{1} = p - .5*dpb + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="76">p_left{2} = p + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="76">p_left{3} = p + .5*dpf + w .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="76">p_right{1} = p - .5*dpb + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpb)')');</command>
<command batch="76">p_right{2} = p + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dp)')');</command>
<command batch="76">p_right{3} = p + .5*dpf + w .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpf)')');</command>
<command batch="76">% Interpolate using Bezier Curves</command>
<command batch="76">p_trajectory_b = B(linspace(0,1,numInterpPoints), p_trajectory{:});</command>
<command batch="76">p_left_b = B(linspace(0,1,numInterpPoints), p_left{:});</command>
<command batch="76">p_right_b = B(linspace(0,1,numInterpPoints), p_right{:});</command>
<command batch="76" execution_time="273">dp_b = B(linspace(0,1,numInterpPoints), dpb , dp , dpf );</command>
<command execution_time="18">dp_b</command>
<command error="true" execution_time="395">velocity_b = sqrt(sum(dp_p.^2,2))</command>
<command execution_time="20">velocity_b = sqrt(sum(dp_b.^2,2))</command>
<command execution_time="15">maxVelocity</command>
<command execution_time="15">dp</command>
<command execution_time="15">velocity = sqrt(sum(dp.^2))</command>
<command execution_time="15">maxVelocity = max(max(velocity_b),maxVelocity)</command>
<command execution_time="15">velocity_b</command>
<command execution_time="15">repmat(1/maxVelocity .* velocity_b, 1, 2)</command>
<command execution_time="17">S.C</command>
<command execution_time="17">S.Z</command>
<command execution_time="17">S.Y</command>
<command execution_time="16">S.X</command>
<command execution_time="17">surfAlphaMask</command>
<command execution_time="16">k</command>
<command execution_time="15">noseIdx</command>
<command execution_time="20">surfIdx = [tailIdx , bodyIdx , noseIdx]</command>
<command execution_time="18">surfIdx = [tailIdx , bodyIdx , noseIdx] - numSegmentIdx + k</command>
<command execution_time="20">surfIdx = [tailIdx , bodyIdx , noseIdx] - numSegmentIdx</command>
<command execution_time="16">surfIdx = [tailIdx , bodyIdx , noseIdx]</command>
<command execution_time="17" repeat="2">numSegmentIdx</command>
<command execution_time="21">surfIdx = surfIdx(surfIdx &gt;= (numSegmentIdx-k))</command>
<command execution_time="15">surfIdx</command>
<command execution_time="15">k</command>
<command execution_time="15">numSegmentIdx</command>
<command execution_time="14">surfIdx</command>
<command execution_time="15">S</command>
<command execution_time="16">S.X</command>
<command execution_time="16">surfIdx</command>
<command execution_time="15">S.Y</command>
<command execution_time="16">S.C</command>
<command execution_time="16">surfAlphaMask</command>
<command execution_time="22">clf</command>
<command execution_time="256">imagesc(cmap)</command>
<command execution_time="36">plot(cmap)</command>
<command execution_time="15">size(cmap)</command>
<command execution_time="24">plot(cmap(:,1))</command>
<command execution_time="21">plot(cmap(:,2))</command>
<command execution_time="16">cmap = [[linspace(0,1,128)',linspace(0,1,128)',ones(128,1)] ; [ones(128,1) , linspace(1,0,128)' , linspace(1,0,128)']];</command>
<command execution_time="15">clear</command>
<command execution_time="21">clf</command>
<command execution_time="17">load('movementdata.mat')</command>
<command execution_time="16">x = xvals(17:end);</command>
<command execution_time="15">y = yvals(17:end);</command>
<command execution_time="17">clear</command>
<command execution_time="17">load('movementdata.mat')</command>
<command execution_time="16">x = xvals(17:end);</command>
<command execution_time="18">y = yvals(17:end);</command>
<command execution_time="390239">h = showMouseMovement(x,y)</command>
<command execution_time="91">h.lineNose = line()</command>
<command error="true" execution_time="244">h.linNose</command>
<command execution_time="19">h.lineNose</command>
<command error="true" execution_time="237">set( h.LineNose, 'XData', sin(0:.1:pi), 'YData', cos(0:.2:2*pi))</command>
<command execution_time="17">set( h.lineNose, 'XData', sin(0:.1:pi), 'YData', cos(0:.2:2*pi))</command>
<command execution_time="17">size(0:.1:pi)</command>
<command execution_time="16">cmap = [[linspace(0,1,128)',linspace(0,1,128)',ones(128,1)] ; [ones(128,1) , linspace(1,0,128)' , linspace(1,0,128)']];</command>
<command execution_time="25">get(h.lineNose)</command>
<command execution_time="57">set(h.lineNose)</command>
<command execution_time="33">sline = struct(h.lineNose)</command>
<command execution_time="17">sline.NodeChildren</command>
<command execution_time="19">get(sline.NodeChildren)</command>
<command execution_time="17">get(sline.NodeChildren,'VertexData')</command>
<command execution_time="24">cmap</command>
<command execution_time="20">set(sline.NodeChildren,'ColorData', [uint8(cmap(1:32,:).*256)' ; ones(1,32,'uint8')])</command>
<command execution_time="18">sline.NodeChildren.ColorData</command>
<command execution_time="24">clc</command>
<command error="true" execution_time="374">f = @(t) exp(1-t); plot(0:.01:1, f(t))</command>
<command execution_time="33">f = @(t) exp(1-t); plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="22">f = @(t) 1-exp(t); plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="20">f = @(t) exp(t); plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="21">f = @(t) exp(t)-1; plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="16">log(1)</command>
<command execution_time="15">log(0)</command>
<command error="true" execution_time="23">f = @(t) 1/t; plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="89">f = @(t) 1-1.^t; plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="20">f = @(t) t.^2; plot(0:.01:1, f(0:.01:1))</command>
<command execution_time="17">min(1,0:.1:1.2)</command>
<command execution_time="114">help annotation</command>
<command execution_time="694">h.arrowDP = annotation('arrow')</command>
<command execution_time="28">h.arrowDP</command>
<command execution_time="34">set(h.arrowDP)</command>
<command execution_time="19">set(h.arrowDP,'HeadStyle')</command>
<command execution_time="19">hstyles = set(h.arrowDP,'HeadStyle')</command>
<command execution_time="3573">for k=1:16, set(h.arrowDP,'HeadStyle', hstyles{k}), pause, end</command>
<command error="true" execution_time="18">for k=1:16, set(h.arrowDP,'HeadStyle', hstyles{k}), disp(hstyles{k}) pause, end</command>
<command execution_time="15748" repeat="2">for k=1:16, set(h.arrowDP,'HeadStyle', hstyles{k}), disp(hstyles{k}), pause, end</command>
<command execution_time="29">get(h.arrowDP)</command>
<command execution_time="23">set(h.arrowDP,'Color', [0 0 1 .5])</command>
<command execution_time="17">set(h.arrowDP,'Color', [0 0 1 .1])</command>
<command execution_time="21">h.arrowDP.Position</command>
<command execution_time="32">h.arrowDP.Position = [.5 .5 0 .2]</command>
<command error="true" execution_time="30">h.arrowDP.Position = [.5 .5 0 0 .2 0]</command>
<command execution_time="19">h.arrowDP.Position</command>
<command execution_time="18">clear</command>
<command execution_time="31">clf</command>
<command execution_time="302">close all</command>
<command execution_time="18">load('movementdata.mat')</command>
<command execution_time="17">x = xvals(17:end);</command>
<command execution_time="17">y = yvals(17:end);</command>
<command execution_time="506">y</command>
<command execution_time="24">makeUnitVec</command>
<command execution_time="583">P</command>
<command execution_time="16">tailIdx</command>
<command execution_time="17">noseIdx</command>
<command execution_time="15">bodyIdx</command>
<command execution_time="16">alphaVec</command>
<command execution_time="16">akm1</command>
<command execution_time="18">alphaTailFcn</command>
<command execution_time="16">alphaAtInf</command>
<command execution_time="16">P(5,:)</command>
<command execution_time="22">getPriorMidPoint(5)</command>
<command execution_time="22">[getPriorMidPoint(5);P(5,:);getNextMidPoint(5)]</command>
<command execution_time="23">idx = @(k) min(max(k,1),N);</command>
<command execution_time="17">idx(5)</command>
<command execution_time="17">idx(-3:5)</command>
<command execution_time="14">dpb</command>
<command execution_time="16">alphaVec</command>
<command execution_time="28">plot(alphaVec)</command>
<command execution_time="16">alphaAtInf</command>
<command execution_time="19">[linspace(1/numTail,bodyAlpha*(1-1/numTail),numTail) , ones(1,numBody)*bodyAlpha , linspace(bodyAlpha*(1-1/numNose), 0, numNose)]</command>
<command execution_time="257">plot([linspace(1/numTail,bodyAlpha*(1-1/numTail),numTail) , ones(1,numBody)*bodyAlpha , linspace(bodyAlpha*(1-1/numNose), 0, numNose)])</command>
<command execution_time="16">bodyAlpha = .99;</command>
</session>
<session>
<command time_stamp="15d407b9c0d">%-- 7/14/2017 5:43 AM --%</command>
<command execution_time="77">load('movementdata.mat')</command>
<command execution_time="21">x = xvals(17:end);</command>
<command execution_time="20">y = yvals(17:end);</command>
<command batch="77">L.X = cell(1,N);</command>
<command batch="77">L.Y = cell(1,N);</command>
<command batch="77">L.Z = cell(1,N);</command>
<command batch="77">L.C = cell(1,N);</command>
<command batch="77">S.X = cell(1,N);</command>
<command batch="77">S.Y = cell(1,N);</command>
<command batch="77">S.Z = cell(1,N);</command>
<command batch="77">S.C = cell(1,N);</command>
<command batch="77">F.P = cell(1,N);</command>
<command batch="77">F.dP = cell(1,N);</command>
<command batch="77" execution_time="88">F.dPq = cell(1,N);</command>
<command execution_time="20">pk_prev</command>
<command execution_time="20">pk</command>
<command execution_time="28">pk_next</command>
<command execution_time="30">L</command>
<command execution_time="20">S</command>
<command execution_time="20">F</command>
<command execution_time="20">F.P{3}</command>
<command execution_time="22">F.P{6}</command>
<command execution_time="22">F.dP{5}</command>
<command batch="78">h.fig = gcf; clf</command>
<command batch="78">set(h.fig,...</command>
<command batch="78">'Colormap', cmap);</command>
<command batch="78">h.ax = gca;</command>
<command batch="78">surfProps = {...</command>
<command batch="78">'EdgeAlpha', 0.0,...</command>
<command batch="78">'FaceColor', 'interp',...</command>
<command batch="78">'FaceAlpha', 'interp'};</command>
<command batch="78">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="78">h.lineNose = line();</command>
<command batch="78">h.lineBody = line();</command>
<command batch="78">h.lineTail = line();</command>
<command batch="78">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="78" execution_time="974">h.mouseArrow = patch(h.ax);</command>
<command batch="79">h.fig = gcf; clf</command>
<command batch="79">set(h.fig,...</command>
<command batch="79">'Colormap', cmap);</command>
<command batch="79">h.ax = gca;</command>
<command batch="79">surfProps = {...</command>
<command batch="79">'EdgeAlpha', 0.0,...</command>
<command batch="79">'FaceColor', 'interp',...</command>
<command batch="79">'FaceAlpha', 'interp'};</command>
<command batch="79">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="79">h.lineNose = line();</command>
<command batch="79">h.lineBody = line();</command>
<command batch="79" execution_time="308">h.lineTail = line();</command>
<command execution_time="21">alphaVec</command>
<command execution_time="25">surfAlphaMask</command>
<command execution_time="20">alphaVec = @(nT,nN) alphaTailFcn([linspace(1/nTail,bodyAlpha*(1-1/nTail),nTail) , [1 1].*bodyAlpha , linspace(bodyAlpha*(1-1/nNose), 0, nNose)])</command>
<command error="true" execution_time="374">alphaVec(5,5)</command>
<command execution_time="22">alphaVec = @(nTail,nNose) alphaTailFcn([linspace(1/nTail,bodyAlpha*(1-1/nTail),nTail) , [1 1].*bodyAlpha , linspace(bodyAlpha*(1-1/nNose), 0, nNose)])</command>
<command execution_time="23">alphaVec(5,5)</command>
<command execution_time="16" repeat="2">alphaVec = @(nTail,nNose) repmat([alphaTailFcn(linspace(0,bodyAlpha*(1-1/nTail),nTail)) ; bodyAlpha ; alphaTailFcn(linspace(bodyAlpha*(1-1/nNose), 0, nNose))],1,2)</command>
<command error="true" execution_time="25">alphaVec(5,5)</command>
<command execution_time="23">alphaVec = @(nTail,nNose) repmat([alphaTailFcn(linspace(0,bodyAlpha*(1-1/nTail),nTail))' ; bodyAlpha ; alphaTailFcn(linspace(bodyAlpha*(1-1/nNose), 0, nNose))'],1,2)</command>
<command execution_time="21">alphaVec(5,5)</command>
<command error="true" execution_time="250">s.X{5}</command>
<command execution_time="22">S.X{5}</command>
<command execution_time="21">S.X{6}</command>
<command execution_time="20">S.X{1}</command>
<command execution_time="20">S.X{2}</command>
<command execution_time="19">L.X{1}</command>
<command execution_time="14" repeat="2">L.X{2}</command>
<command execution_time="20">L.X{1}</command>
<command execution_time="20">L.X{2}</command>
<command batch="80">alphaVec = @(nTail,nNose) repmat(...</command>
<command batch="80">[alphaTailFcn(linspace(0,bodyAlpha*(1-1/nTail),nTail*(numInterpPoints-1)))' ;...</command>
<command batch="80">bodyAlpha.*ones(numInterpPoints-1,1) ; ...</command>
<command batch="80" execution_time="26">alphaTailFcn(linspace(bodyAlpha*(1-1/nNose), 0, nNose*(numInterpPoints-1)))'],1,2)</command>
<command execution_time="20">alphaVec(3,3)</command>
<command execution_time="23">size(alphaVec(3,3))</command>
<command execution_time="36">size(cat(1,S.X{1:7}))</command>
<command execution_time="20">segVec = @(data,k,nTail,nNose) cat(1,data{idx((k-nTail):(k+nNose))})</command>
<command execution_time="20">segVec(S.X,5,3,3)</command>
<command execution_time="21">size(segVec(S.X,5,3,3))</command>
<command error="true" execution_time="18">size(alphaVec(S.X,5,3,3))</command>
<command execution_time="21">size(alphaVec(3,3))</command>
<command batch="81">setSurfData = @(hdl,s,k) set(hdl,...</command>
<command batch="81">'XData',segVec(s.X,k,numTail,numNose),...</command>
<command batch="81">'YData',segVec(s.Y,k,numTail,numNose),...</command>
<command batch="81">'ZData',segVec(s.Z,k,numTail,numNose),...</command>
<command batch="81">'CData',segVec(s.C,k,numTail,numNose),...</command>
<command batch="81" execution_time="23">'AlphaData',alphaVec(numTail,numNose));</command>
<command batch="82">h.fig = gcf; clf</command>
<command batch="82">set(h.fig,...</command>
<command batch="82">'Colormap', cmap);</command>
<command batch="82">h.ax = gca;</command>
<command batch="82">surfProps = {...</command>
<command batch="82">'EdgeAlpha', 0.0,...</command>
<command batch="82">'FaceColor', 'interp',...</command>
<command batch="82">'FaceAlpha', 'interp'};</command>
<command batch="82">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="82">h.lineNose = line();</command>
<command batch="82">h.lineBody = line();</command>
<command batch="82" execution_time="262">h.lineTail = line();</command>
<command batch="83">setLineData = @(hdl,s,k) set(hdl,...</command>
<command batch="83">'XData',segVec(s.X,k,numTail,numNose),...</command>
<command batch="83">'YData',segVec(s.Y,k,numTail,numNose),...</command>
<command batch="83" execution_time="30">'ZData',segVec(s.Z,k,numTail,numNose));</command>
<command execution_time="33">setSurfData(h.surfRoad,S,50)</command>
<command execution_time="21">S.C(50)</command>
<command execution_time="28">S.X(50)</command>
<command execution_time="21">dp_q</command>
<command execution_time="19">velocity_q</command>
<command batch="84" error="true">maxVelocity = 0;</command>
<command batch="84" error="true">k = 1;</command>
<command batch="84" error="true">while k &lt;= N</command>
<command batch="84" error="true">% Get Current Position and Local Derivative</command>
<command batch="84" error="true">pk = P(k);</command>
<command batch="84" error="true">pk_prev = getPriorMidPoint(k);</command>
<command batch="84" error="true">pk_next = getNextMidPoint(k);</command>
<command batch="84" error="true">dpk_prev = pk - pk_prev;</command>
<command batch="84" error="true">dpk_next = pk_next - pk;</command>
<command batch="84" error="true">dpk = .5 .* (dpk_prev + dpk_next);</command>
<command batch="84" error="true">p_left{1} = pk_prev + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="84" error="true">p_left{2} = pk + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="84" error="true">p_left{3} = pk_next + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="84" error="true">p_right{1} = pk_prev + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="84" error="true">p_right{2} = pk + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="84" error="true">p_right{3} = pk_next + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="84" error="true">% Interpolate using Bezier Curves</command>
<command batch="84" error="true">p_q = bezierInterp(pk_prev, pk, pk_next);</command>
<command batch="84" error="true">p_left_q = bezierInterp(p_left{:});</command>
<command batch="84" error="true">p_right_q = bezierInterp(p_right{:});</command>
<command batch="84" error="true">dp_q = bezierInterp(dpk_prev , dpk , dpk_next );</command>
<command batch="84" error="true">% Color from interpolated velocity</command>
<command batch="84" error="true">velocity_q = sqrt(sum(dp_q.^2,2));</command>
<command batch="84" error="true">maxVelocity = max(max(velocity_q),maxVelocity);</command>
<command batch="84" error="true">% Add to segmented Graphics Data</command>
<command batch="84" error="true">L.X{k} = p_q(1:end-1,1);</command>
<command batch="84" error="true">L.Y{k} = p_q(1:end-1,2);</command>
<command batch="84" error="true">L.Z{k} = p_q(1:end-1,3);</command>
<command batch="84" error="true">S.X{k} = [p_left_q(1:end-1,1) , p_right_q(1:end-1,1)];</command>
<command batch="84" error="true">S.Y{k} = [p_left_q(1:end-1,2) , p_right_q(1:end-1,2)];</command>
<command batch="84" error="true">S.Z{k} = [p_left_q(1:end-1,3) , p_right_q(1:end-1,3)];</command>
<command batch="84" error="true">S.C{k} = repmat(1/maxVelocity .* velocity_q(1:end-1), 1, 2) ;</command>
<command batch="84" error="true">F.P{k} = pk;</command>
<command batch="84" error="true">F.dP{k} = dpk;</command>
<command batch="84" error="true">F.dPq{k} = dp_q;</command>
<command batch="84" error="true">k = k + 1;</command>
<command batch="84" error="true">end</command>
<command batch="84" error="true" execution_time="7615">end</command>
<command batch="85">maxVelocity = 0;</command>
<command batch="85">k = 1;</command>
<command batch="85">while k &lt;= N</command>
<command batch="85">% Get Current Position and Local Derivative</command>
<command batch="85">pk = P(k);</command>
<command batch="85">pk_prev = getPriorMidPoint(k);</command>
<command batch="85">pk_next = getNextMidPoint(k);</command>
<command batch="85">dpk_prev = pk - pk_prev;</command>
<command batch="85">dpk_next = pk_next - pk;</command>
<command batch="85">dpk = .5 .* (dpk_prev + dpk_next);</command>
<command batch="85">p_left{1} = pk_prev + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="85">p_left{2} = pk + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="85">p_left{3} = pk_next + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="85">p_right{1} = pk_prev + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="85">p_right{2} = pk + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="85">p_right{3} = pk_next + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="85">% Interpolate using Bezier Curves</command>
<command batch="85">p_q = bezierInterp(pk_prev, pk, pk_next);</command>
<command batch="85">p_left_q = bezierInterp(p_left{:});</command>
<command batch="85">p_right_q = bezierInterp(p_right{:});</command>
<command batch="85">dp_q = bezierInterp(dpk_prev , dpk , dpk_next );</command>
<command batch="85">% Color from interpolated velocity</command>
<command batch="85">velocity_q = sqrt(sum(dp_q.^2,2));</command>
<command batch="85">maxVelocity = max(max(velocity_q),maxVelocity);</command>
<command batch="85">% Add to segmented Graphics Data</command>
<command batch="85">L.X{k} = p_q(1:end-1,1);</command>
<command batch="85">L.Y{k} = p_q(1:end-1,2);</command>
<command batch="85">L.Z{k} = p_q(1:end-1,3);</command>
<command batch="85">S.X{k} = [p_left_q(1:end-1,1) , p_right_q(1:end-1,1)];</command>
<command batch="85">S.Y{k} = [p_left_q(1:end-1,2) , p_right_q(1:end-1,2)];</command>
<command batch="85">S.Z{k} = [p_left_q(1:end-1,3) , p_right_q(1:end-1,3)];</command>
<command batch="85">S.C{k} = repmat(1/maxVelocity .* velocity_q(1:end-1), 1, 2) ;</command>
<command batch="85">F.P{k} = pk;</command>
<command batch="85">F.dP{k} = dpk;</command>
<command batch="85">F.dPq{k} = dp_q;</command>
<command batch="85">k = k + 1;</command>
<command batch="85" execution_time="7485">end</command>
<command execution_time="25">setSurfData(h.surfRoad,S,50)</command>
<command error="true" execution_time="28">axes off</command>
<command execution_time="63">axis off</command>
<command batch="86">h.fig = gcf; clf</command>
<command batch="86">set(h.fig,...</command>
<command batch="86">'Colormap', cmap);</command>
<command batch="86">h.ax = gca;</command>
<command batch="86">surfProps = {...</command>
<command batch="86">'EdgeAlpha', 0.0,...</command>
<command batch="86">'FaceColor', 'interp',...</command>
<command batch="86">'FaceAlpha', 'interp'};</command>
<command batch="86">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="86">%         h.lineNose = line();</command>
<command batch="86">%         h.lineBody = line();</command>
<command batch="86">%         h.lineTail = line();</command>
<command batch="86">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="86" execution_time="276">%         h.mouseArrow = patch(h.ax);</command>
<command execution_time="20">setSurfData(50)</command>
<command execution_time="37">get(h.surfRoad)</command>
<command execution_time="23">alphaVec()</command>
<command execution_time="15">size(alphaVec)</command>
<command execution_time="19">size(alphaVec())</command>
<command execution_time="21">size(segVec(S.X,50))</command>
<command execution_time="2564">doc surf</command>
<command execution_time="19">get(h.surfRoad)</command>
<command execution_time="20">setSurfData(50)</command>
<command execution_time="15">setSurfData(55)</command>
<command execution_time="25">setSurfData(56)</command>
<command execution_time="22">setSurfData(57)</command>
<command execution_time="20">setSurfData(58)</command>
<command execution_time="21">k=59;</command>
<command execution_time="14" repeat="141">setSurfData(k), k=k+1;</command>
<command batch="87" error="true">cmap = [...</command>
<command batch="87" error="true">[linspace(0,grayLevel,128)', linspace(0,grayLevel,128)', linspace(1,grayLevel,128)'] ;...</command>
<command batch="87" error="true" execution_time="995">[linspace(1,grayLevel,128)', linspace(grayLevel,0,128)', linspace(grayLevel,0,128)']];</command>
<command batch="88">set(h.fig,...</command>
<command batch="88" execution_time="25">'Colormap', cmap);</command>
<command batch="89">grayLevel = .75;</command>
<command batch="89">cmap = [...</command>
<command batch="89">[linspace(0,grayLevel,128)', linspace(0,grayLevel,128)', linspace(1,grayLevel,128)'] ;...</command>
<command batch="89">[linspace(1,grayLevel,128)', linspace(grayLevel,0,128)', linspace(grayLevel,0,128)']];</command>
<command batch="89" execution_time="31">bodyAlpha = .99;</command>
<command batch="90">set(h.fig,...</command>
<command batch="90" execution_time="25">'Colormap', cmap);</command>
<command execution_time="22">setSurfData(55)</command>
<command execution_time="17" repeat="3">setSurfData(k), k=k+1;</command>
<command execution_time="27661" repeat="2">while true, setSurfData(k), k=k+1; pause, end</command>
<command execution_time="29">h.mouseBody</command>
<command execution_time="23">F.P{k}</command>
<command execution_time="25">F.dP{k}</command>
<command execution_time="23">F.dPq{k}</command>
<command execution_time="20">L.X{k}</command>
<command execution_time="20">p_q</command>
<command execution_time="20">pk</command>
<command execution_time="18">dpk_next</command>
<command execution_time="20">dpk_prev</command>
<command execution_time="22">dpk</command>
<command batch="91">mw = roadWidth*2;</command>
<command batch="91" execution_time="25">mnl = roadWidth;</command>
<command batch="92">mw = roadWidth*2;</command>
<command batch="92">mnl = roadWidth;</command>
<command batch="92">mn = 5;</command>
<command batch="92">mzb = .1;</command>
<command batch="92">mzt = roadWidth/2;</command>
<command batch="92">mouseBodyL = [...</command>
<command batch="92">[linspace(0,-mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="92">[-mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command batch="92">mouseBodyC = [...</command>
<command batch="92">[zeros(mn,1) , linspace(mnl*2,mnl,mn)', linspace(mzb,mzt,mn)'];...</command>
<command batch="92">[zeros(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzt.*ones(mn,1)]];</command>
<command batch="92">mouseBodyR = [...</command>
<command batch="92">[linspace(0,mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="92" execution_time="80">[mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command execution_time="23">mouseBodyR</command>
<command execution_time="95">figure, s = surface(surfProps{:})</command>
<command execution_time="22">mouseBodyL</command>
<command execution_time="26">mouseBodyC</command>
<command execution_time="21">mouseBodyR</command>
<command error="true" execution_time="448">mouseBody = cat(3,mouseBodyL,mouseBOdyC,mouseBodyR);</command>
<command execution_time="20">mouseBody = cat(3,mouseBodyL,mouseBodyC,mouseBodyR);</command>
<command execution_time="24">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)))</command>
<command execution_time="27">S.C{k}</command>
<command execution_time="21">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3))</command>
<command error="true" execution_time="25">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3),'AlphaData','CData',.9.*ones(mn*2,3))</command>
<command execution_time="27">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3),'AlphaData',.9.*ones(mn*2,3))</command>
<command execution_time="21">roadWidth</command>
<command execution_time="20">mzb = roadWidth/20;</command>
<command batch="93">mouseBodyL = [...</command>
<command batch="93">[linspace(0,-mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="93">[-mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command batch="93">mouseBodyC = [...</command>
<command batch="93">[zeros(mn,1) , linspace(mnl*2,mnl,mn)', linspace(mzb,mzt,mn)'];...</command>
<command batch="93">[zeros(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzt.*ones(mn,1)]];</command>
<command batch="93">mouseBodyR = [...</command>
<command batch="93">[linspace(0,mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="93">[mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command batch="93" execution_time="48">mouseBody = cat(3,mouseBodyL,mouseBodyC,mouseBodyR);</command>
<command error="true" execution_time="25">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3),'AlphaData',.9.*ones(mn*2,3))</command>
<command execution_time="88">figure, s = surface(surfProps{:})</command>
<command execution_time="29">set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3),'AlphaData',.9.*ones(mn*2,3))</command>
<command execution_time="135418" repeat="2">while true, setSurfData(k), k=k+1; pause, end</command>
<command error="true" execution_time="26">set(gca, F.P{k})</command>
<command execution_time="18">F.P{k}</command>
<command execution_time="25">set(gca, 'CameraTarget', F.P{k})</command>
<command execution_time="14461">while true, setSurfData(k), set(gca, 'CameraTarget', F.P{k}), k=k+1; pause, end</command>
<command batch="94">h.fig = gcf; clf</command>
<command batch="94">set(h.fig,...</command>
<command batch="94">'Colormap', cmap);</command>
<command batch="94">h.ax = gca;</command>
<command batch="94">surfProps = {...</command>
<command batch="94">'EdgeAlpha', 0.0,...</command>
<command batch="94">'FaceColor', 'interp',...</command>
<command batch="94">'FaceAlpha', 'interp'};</command>
<command batch="94">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="94">%         h.lineNose = line();</command>
<command batch="94">%         h.lineBody = line();</command>
<command batch="94">%         h.lineTail = line();</command>
<command batch="94" execution_time="258">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command execution_time="22">k=50</command>
<command error="true" execution_time="27">setSurfData(k)</command>
<command batch="95">h.fig = gcf; clf</command>
<command batch="95">set(h.fig,...</command>
<command batch="95">'Colormap', cmap);</command>
<command batch="95">h.ax = gca;</command>
<command batch="95">surfProps = {...</command>
<command batch="95">'EdgeAlpha', 0.0,...</command>
<command batch="95">'FaceColor', 'interp',...</command>
<command batch="95">'FaceAlpha', 'interp'};</command>
<command batch="95">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="95">%         h.lineNose = line();</command>
<command batch="95">%         h.lineBody = line();</command>
<command batch="95">%         h.lineTail = line();</command>
<command batch="95">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="95" execution_time="275">%         h.mouseArrow = patch(h.ax);</command>
<command execution_time="24" repeat="21">setSurfData(k), set(gca, 'CameraTarget', F.P{k}), k=k+1;</command>
<command execution_time="30">cos(.1)</command>
<command execution_time="25">cos(-.25)</command>
<command execution_time="24">cos(-pi/10)</command>
<command execution_time="23">cos(-pi/4)</command>
<command execution_time="27">cos(-pi/8)</command>
<command error="true" execution_time="21">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8) , cos(-pi/8:.1:pi/8))</command>
<command execution_time="51">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8) , cos(-pi/8:.1:pi/8)])</command>
<command execution_time="78">figure</command>
<command batch="96">surf(X,Y,Z)</command>
<command batch="96" execution_time="443">axis square</command>
<command execution_time="52">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8)+.2 , cos(-pi/8:.02:pi/8)+.2, cos(pi/8:.1:pi/2)+.2])</command>
<command execution_time="50">surf(X,Y,Z)</command>
<command execution_time="54">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8)+.2 , cos(-pi/8:.02:pi/8), cos(pi/8:.1:pi/2)])</command>
<command execution_time="37">surf(X,Y,Z)</command>
<command execution_time="35">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8)+.2 , cos(-pi/8:.02:pi/8)]); surf(X,Y,Z);</command>
<command execution_time="91">[X,Y,Z] = cylinder( [0:.1:cos(-pi/8) , cos(-pi/8:.02:pi/8)]); surf(X,Y,Z);</command>
<command batch="97">[X,Y,Z] = cylinder( [linspace(0,cos(-pi/8),10) , cos(linspace(-pi/8,pi/8,10)); surf(X,Y,Z);</command>
<command execution_time="38">[X,Y,Z] = cylinder( [linspace(0,cos(-pi/8),10) , cos(linspace(-pi/8,pi/8,10))]); surf(X,Y,Z);</command>
<command execution_time="23">linspace(0,cos(-pi/8),10)</command>
<command execution_time="20">cos(linspace(-pi/8,pi/8,10))</command>
<command execution_time="35">[X,Y,Z] = cylinder( [linspace(0,cos(-pi/8),20) , cos(linspace(-pi/8,pi/8,30)), cos(linspace(pi/8,pi/2,5))]); surf(X,Y,Z);</command>
<command execution_time="28">[X,Y,Z] = cylinder( [linspace(0,cos(-pi/8),20) , cos(linspace(-pi/8,pi/8,30)), cos(linspace(pi/8,pi/2,10))]); surf(X,Y,Z);</command>
<command execution_time="26">surf(X,3.*Y,Z)</command>
<command execution_time="23">axis square</command>
<command execution_time="27">surf(X,Y,Z.*3)</command>
<command execution_time="822">help axis</command>
<command execution_time="20">axis equal</command>
<command execution_time="23">X</command>
<command execution_time="20">Y</command>
<command execution_time="22">Z</command>
<command execution_time="33">surf(X, Z.*3, Y)</command>
<command execution_time="21">pi/8</command>
<command batch="98" error="true">[X,Z,Y] = cylinder( ...</command>
<command batch="98" error="true">[linspace(0,headWidth,20),...</command>
<command batch="98" error="true">headWidth.*[1 1 1],...</command>
<command batch="98" error="true">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="98" error="true" execution_time="403">cos(linspace(pi/4,pi/2,10))]);</command>
<command batch="99">headWidth = .8;</command>
<command batch="99">tailWidth = .2;</command>
<command batch="99">[X,Z,Y] = cylinder( ...</command>
<command batch="99">[linspace(0,headWidth,20),...</command>
<command batch="99">headWidth.*[1 1 1],...</command>
<command batch="99">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="99" execution_time="40">cos(linspace(pi/4,pi/2,10))]);</command>
<command batch="100">headWidth = .8;</command>
<command batch="100">tailWidth = .2;</command>
<command batch="100">[X,Z,Y] = cylinder( ...</command>
<command batch="100">[linspace(0,headWidth,20),...</command>
<command batch="100">headWidth.*[1 1 1],...</command>
<command batch="100">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="100">cos(linspace(pi/4,pi/2,10))]);</command>
<command batch="100">surf(X,Y.*3,Z);</command>
<command batch="100" execution_time="77">axis equal</command>
<command batch="101">headWidth = .8;</command>
<command batch="101">tailWidth = .2;</command>
<command batch="101">[X,Z,Y] = cylinder( ...</command>
<command batch="101">[linspace(0,headWidth,20),...</command>
<command batch="101">headWidth.*[1 1 1],...</command>
<command batch="101">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="101">cos(linspace(pi/8+.2,pi/2-.8,5))]);</command>
<command batch="101">surf(X,Y.*3,Z);</command>
<command batch="101" execution_time="70">axis equal</command>
<command batch="102">surf(X,Y.*3,Z.*.5);</command>
<command batch="102" execution_time="46">axis equal</command>
<command batch="103">headWidth = .8;</command>
<command batch="103">tailWidth = .2;</command>
<command batch="103">[X,Z,Y] = cylinder( ...</command>
<command batch="103">[linspace(0,headWidth,20),...</command>
<command batch="103">headWidth.*[1 1 1],...</command>
<command batch="103">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="103">cos(linspace(pi/8+.2,pi/2-.2,5))]);</command>
<command batch="103">surf(X,Y.*3,Z.*.5);</command>
<command batch="103" execution_time="87">axis equal</command>
<command error="true" execution_time="104">log(.1</command>
<command execution_time="21">log(.1)</command>
<command execution_time="21">.1^2</command>
<command execution_time="21">.5^2</command>
<command execution_time="21">.8^2</command>
<command execution_time="21">.9^2</command>
<command execution_time="21">surf(X,Y.*3,(Z.*.5).^2);</command>
<command execution_time="25">surf(X,Y.*3,(Z.*.5 + 1).^2);</command>
<command execution_time="22">surf(X,Y.*3,(Z.*.5 + .5).^2);</command>
<command batch="104">surf(X,Y.*3,(Z.*.5 + .5).^2);</command>
<command batch="104" execution_time="41">axis equal</command>
<command execution_time="20">whos X</command>
<command execution_time="21">whos Y</command>
<command execution_time="241">help cylinder</command>
<command batch="105">[X,Z,Y] = cylinder( ...</command>
<command batch="105">[linspace(0,headWidth,20),...</command>
<command batch="105">headWidth.*[1 1 1],...</command>
<command batch="105">cos(linspace(-pi/8,pi/8,30)),...</command>
<command batch="105">cos(linspace(pi/8+.2,pi/2-.2,5))]);</command>
<command batch="105">Y = (Y-.5).*3;</command>
<command batch="105" execution_time="38">Z = (0.5 + Z.*0.5).^2;</command>
<command execution_time="35">surf(X,Y,Z); axis equal</command>
<command execution_time="22">X</command>
<command execution_time="18">size(X)</command>
<command execution_time="55">Rk = rotz(10)</command>
<command batch="106">M0(1,:,:) = X;</command>
<command batch="106">M0(2,:,:) = Y;</command>
<command batch="106" execution_time="32">M0(3,:,:) = Z;</command>
<command error="true" execution_time="19">Mk = Rk * M0;</command>
<command execution_time="23">clear M0</command>
<command batch="107">M0(1,:) = X(:)';</command>
<command batch="107">M0(2,:) = Y(:)';</command>
<command batch="107" execution_time="37">M0(3,:) = Z(:)';</command>
<command execution_time="22">Mk = Rk * M0;</command>
<command execution_time="31">surf(reshape(Mk(1,:),size(X)),reshape(Mk(2,:),size(Y)),reshape(Mk(3,:),size(Z)))</command>
<command execution_time="47">axis equal</command>
<command execution_time="320">help mat2cell</command>
<command execution_time="20">mouseSurfSize = size(X)</command>
<command batch="108">numVert = numel(X);</command>
<command batch="108">mouseSurfSize = size(X);</command>
<command batch="108" execution_time="34">applyRot = @(deg) num2cell( reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []), 3);</command>
<command execution_time="38">Mrk = applyRot(-10)</command>
<command execution_time="263">help num2cell</command>
<command execution_time="18">mouseSurfSize</command>
<command execution_time="27">applyRot = @(deg) num2cell( reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []), [mouseSurfSize 1]);</command>
<command execution_time="20">Mrk = applyRot(-10)</command>
<command execution_time="110">help mat2cell</command>
<command execution_time="21">applyRot = @(deg) reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []);</command>
<command execution_time="45">Mrk = applyRot(-10)</command>
<command execution_time="21">Mrk = applyRot(-10);</command>
<command execution_time="25">surf(Mrk(:,:,1),Mrk(:,:,2),Mrk(:,:,3))</command>
<command execution_time="20">axis equal</command>
<command execution_time="39">s= surf(Mrk(:,:,1),Mrk(:,:,2),Mrk(:,:,3))</command>
<command execution_time="19">axis equal</command>
<command execution_time="23">set(s, 'CData', .7.*ones(mouseSurfSize))</command>
<command execution_time="86">colormap gray</command>
<command execution_time="25">s.FaceLighting = 'gouraud'</command>
<command execution_time="28">s.EdgeColor = 'none'</command>
<command execution_time="76">set(s)</command>
<command execution_time="25">s.SpecularColorReflectance = .5</command>
<command execution_time="17">s.SpecularExponent = 3</command>
<command error="true" execution_time="35">s.SpecularStrength = 3</command>
<command execution_time="22">s.SpecularStrength = .7</command>
<command execution_time="233">help lighting</command>
<command execution_time="24">lighting gouraud</command>
<command execution_time="39">colormap hot</command>
<command error="true" execution_time="23">s.FaceColor = 'gouraud'</command>
<command execution_time="24">s.FaceAlpha = .7</command>
<command execution_time="27">material dull</command>
<command execution_time="20">material shiny</command>
<command execution_time="22">colormap(cmap)</command>
<command execution_time="25">material metal</command>
<command execution_time="22">light</command>
<command execution_time="20">set(s, 'CData', .2.*ones(mouseSurfSize))</command>
<command execution_time="23">set(s, 'CData', .1.*ones(mouseSurfSize))</command>
<command execution_time="28">material dull</command>
<command execution_time="20">material shiny</command>
<command execution_time="21">material metal</command>
<command execution_time="22">get(s)</command>
<command execution_time="20">s.FaceColor = 'Interp'</command>
<command execution_time="17">set(s, 'CData', .6 + .1.*rand(mouseSurfSize))</command>
<command error="true" execution_time="20">num2cell(Mrk,1,2)</command>
<command execution_time="20">num2cell(Mrk,[1,2])</command>
<command execution_time="15">cos(pi/2-.2)</command>
<command batch="109" error="true">headWidth = .8;</command>
<command batch="109" error="true">tailWidth = .2;</command>
<command batch="109" error="true">rMouse.head = [linspace(0,headWidth,20), headWidth.*[1 1 1]];</command>
<command batch="109" error="true">rMouse.body = cos(linspace(-pi/8,pi/8,30));</command>
<command batch="109" error="true">rMouse.butt = cos(linspace(pi/8+.2,pi/2-.2,5));</command>
<command batch="109" error="true">rMouse.tail = rMouse.butt(end) .* ones(50,1);</command>
<command batch="109" error="true">[X,Z,Y] = cylinder( ...</command>
<command batch="109" error="true">rMouse.head ,...</command>
<command batch="109" error="true">rMouse.body,...</command>
<command batch="109" error="true" execution_time="102">rMouse.butt);</command>
<command execution_time="23">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command execution_time="37">s = surf(X,Y,Z,.4 + .2.*rand(size(X)))</command>
<command execution_time="33">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="20">light</command>
<command execution_time="20">lighting gouraud</command>
<command batch="110">rMouse.body = cos(linspace(-3*pi/16,3*pi/16,30));</command>
<command batch="110" execution_time="25">rMouse.butt = cos(linspace(3*pi/16+.2,pi/2-.2,5));</command>
<command batch="111" error="true">[X,Z,Y] = cylinder( ...</command>
<command batch="111" error="true">rMouse.head ,...</command>
<command batch="111" error="true">rMouse.body,...</command>
<command batch="111" error="true" execution_time="29">rMouse.butt);</command>
<command execution_time="29">rMouse</command>
<command batch="112" error="true">[X,Z,Y] = cylinder( ...</command>
<command batch="112" error="true">rMouse.head ,...</command>
<command batch="112" error="true">rMouse.body,...</command>
<command batch="112" error="true" execution_time="29">rMouse.butt)</command>
<command execution_time="20">[X,Z,Y] = cylinder( [rMouse.head, rMouse.body,rMouse.butt]);</command>
<command execution_time="28">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="25">lighting gouraud, light</command>
<command execution_time="23">lighting gouraud, light, axis equal</command>
<command execution_time="21">axis xy</command>
<command execution_time="22">X</command>
<command batch="113">Y = (Y-.5).*3;</command>
<command batch="113" execution_time="23">Z = (0.5 + Z.*0.5).^2;</command>
<command execution_time="33">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="257">help axis</command>
<command execution_time="25">lighting gouraud, light, axis equal</command>
<command execution_time="23" repeat="2">[X,Z,Y] = cylinder( [rMouse.head, rMouse.body,rMouse.butt]);</command>
<command batch="114">Y =  2 .* (1-Y);%-(Y-.5).*3;</command>
<command batch="114" execution_time="25">Z = (0.5 + Z.*0.5).^2;</command>
<command execution_time="35">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="22">lighting gouraud, light, axis equal</command>
<command execution_time="14" repeat="2">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="115" error="true">ZTail = flattenZ(Ztail);</command>
<command batch="115" error="true">Ytail = 2 .* (Y-1);</command>
<command batch="115" error="true" execution_time="405">Xtail = bsxfun(@plus, Xtail, sin(linspace(0,6*pi,size(Xtail,1))'));</command>
<command execution_time="21">flattenZ = @(zmat) (0.5 + 0.5 .* zmat).^2;</command>
<command batch="116">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="116">ZTail = flattenZ(Ztail);</command>
<command batch="116">Ytail = 2 .* (Y-1);</command>
<command batch="116" execution_time="43">Xtail = bsxfun(@plus, Xtail, sin(linspace(0,6*pi,size(Xtail,1))'));</command>
<command error="true" execution_time="27">whos(Xtail)</command>
<command execution_time="20">whos Xtail</command>
<command execution_time="22">whos X</command>
<command batch="117">headWidth = .8;</command>
<command batch="117">tailWidth = .2;</command>
<command batch="117">rMouse.head = [linspace(0,headWidth,20), headWidth.*[1 1 1]];</command>
<command batch="117">rMouse.body = cos(linspace(-3*pi/16,3*pi/16,30));</command>
<command batch="117">rMouse.butt = cos(linspace(3*pi/16+.2,pi/2-.2,5));</command>
<command batch="117">rMouse.tail = rMouse.butt(end) .* ones(50,1);</command>
<command batch="117">[Xbody,Zbody,Ybody] = cylinder( [rMouse.head, rMouse.body,rMouse.butt]);</command>
<command batch="117">Ybody =  2 .* (1-Ybody);%-(Y-.5).*3;</command>
<command batch="117">flattenZ = @(zmat) (0.5 + 0.5 .* zmat).^2;</command>
<command batch="117">Zbody = flattenZ(Zbody);</command>
<command batch="117">%         s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command batch="117">% lighting gouraud, light, axis equal</command>
<command batch="117">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="117">Ztail = flattenZ(Ztail);</command>
<command batch="117">Ytail = 2 .* (Ytail-1);</command>
<command batch="117">Xtail = bsxfun(@plus, Xtail, sin(linspace(0,6*pi,size(Xtail,1))'));</command>
<command batch="117">X = cat(1,Xbody,Xtail);</command>
<command batch="117">Y = cat(1,Ybody,Ytail);</command>
<command batch="117" execution_time="266">Z = cat(1,Zbody,Ztail);</command>
<command execution_time="31">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="20">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command execution_time="23">Ytail</command>
<command batch="118">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="118">Xtail = Xtail + sin((6*pi) .* Ytail);</command>
<command batch="118">Ztail = flattenZ(Ztail);</command>
<command batch="118">Ytail = 2 .* (Ytail-1);</command>
<command batch="118">X = cat(1,Xbody,Xtail);</command>
<command batch="118">Y = cat(1,Ybody,Ytail);</command>
<command batch="118" execution_time="78">Z = cat(1,Zbody,Ztail);</command>
<command execution_time="25">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="23">Ytail</command>
<command execution_time="20">Xtail</command>
<command batch="119">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="119">Xtail = Xtail + .1.*sin((6*pi) .* Ytail);</command>
<command batch="119">Ztail = flattenZ(Ztail);</command>
<command batch="119">Ytail = 2 .* (Ytail-1);</command>
<command batch="119">X = cat(1,Xbody,Xtail);</command>
<command batch="119">Y = cat(1,Ybody,Ytail);</command>
<command batch="119" execution_time="71">Z = cat(1,Zbody,Ztail);</command>
<command execution_time="30">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="26">lighting gouraud, light, axis equal</command>
<command execution_time="23">Ztail</command>
<command execution_time="20">Ytail</command>
<command execution_time="24">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command execution_time="25">Ytail</command>
<command execution_time="18">Ytail = -2.*Ytail;</command>
<command batch="120">X = cat(1,Xbody,Xtail);</command>
<command batch="120">Y = cat(1,Ybody,Ytail);</command>
<command batch="120" execution_time="36">Z = cat(1,Zbody,Ztail);</command>
<command execution_time="28">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command batch="121">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="121">Xtail = Xtail + .1.*sin((6*pi) .* Ytail);</command>
<command batch="121">Ztail = flattenZ(Ztail);</command>
<command batch="121">Ytail = -2.*Ytail;</command>
<command batch="121">X = cat(1,Xbody,Xtail);</command>
<command batch="121">Y = cat(1,Ybody,Ytail);</command>
<command batch="121" execution_time="79">Z = cat(1,Zbody,Ztail);</command>
<command execution_time="30">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="19">lighting gouraud, light, axis equal</command>
<command execution_time="25">Ytail</command>
<command batch="122">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="122">Xtail = Xtail + 0.2.*sin((6*pi) .* Ytail);</command>
<command batch="122">Ztail = flattenZ(Ztail);</command>
<command batch="122">Ytail = -2.*Ytail;</command>
<command batch="122">X = cat(1,Xbody,Xtail);</command>
<command batch="122">Y = cat(1,Ybody,Ytail);</command>
<command batch="122">Z = cat(1,Zbody,Ztail);</command>
<command batch="122">s = surf(X,Y,Z,.4 + .2.*rand(size(X)),'EdgeColor','none','FaceColor','interp')</command>
<command batch="122" execution_time="257">lighting gouraud, light, axis equal</command>
<command execution_time="20">C = .2 + .2.*rand(size(X));</command>
<command execution_time="26">s = surf(X,Y,Z,C,'EdgeColor','none','FaceColor','interp')</command>
<command execution_time="19">lighting gouraud, light, axis equal</command>
<command execution_time="20">set(s,'CDataMapping')</command>
<command execution_time="37">s = surf(X,Y,Z,C,'EdgeColor','none','FaceColor','interp','CDataMapping','direct')</command>
<command execution_time="24">lighting gouraud, light, axis equal</command>
<command execution_time="21">C = .3 + .3.*rand(size(X));</command>
<command execution_time="20">set(s,'CData',C)</command>
<command execution_time="37">C</command>
<command execution_time="19">set(s,'CData',uint8(255.*C))</command>
<command execution_time="24">M0 = cat(1, X(:)', Y(:)', Z(:)');</command>
<command batch="123">numVert = numel(X);</command>
<command batch="123">mouseSurfSize = size(X);</command>
<command batch="123" execution_time="40">applyRot = @(deg) reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []);</command>
<command execution_time="63">applyRot(45)</command>
<command execution_time="20">size(applyRot(45))</command>
<command execution_time="18">roadWidth</command>
<command execution_time="17">M0 = roadWidth .* cat(1, X(:)', Y(:)', Z(:)');</command>
<command batch="124">numVert = numel(X);</command>
<command batch="124">mouseSurfSize = size(X);</command>
<command batch="124" execution_time="32">applyRot = @(deg) reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []);</command>
<command execution_time="21">pk</command>
<command execution_time="21">atan2d(pk(2),pk(1))</command>
<command execution_time="21">atan2d(1,0)</command>
<command execution_time="23">atan2d(0,1)</command>
<command execution_time="26">atan2d(1,1)</command>
<command execution_time="19">zrot_k = atan2d(pk(2),pk(1)) - 90</command>
<command execution_time="20">dpk</command>
<command execution_time="20">zrot_k = atan2d(dpk(2),dpk(1)) - 90</command>
<command execution_time="19">Mk = moveMouse(pk(1),pk(2),zrot_k);</command>
<command execution_time="20">C = uint8(255.* (.5 + .1.*randn(size(X))));</command>
<command execution_time="39">s = surf(X,Y,Z,C,'EdgeColor','none','FaceColor','interp','CDataMapping','direct')</command>
<command execution_time="20">lighting gouraud, light, axis equal</command>
<command execution_time="20">set(s,'CData',C+.1)</command>
<command execution_time="20">set(s,'CData',C+.4)</command>
<command execution_time="22">C</command>
<command execution_time="20">set(s,'CData',C+40)</command>
<command execution_time="19">dpk</command>
<command execution_time="20">velocity_k = sqrt(sum(dpk.^2))</command>
<command execution_time="26">maxVelocity</command>
<command batch="125">L.X = cell(1,N);</command>
<command batch="125">L.Y = cell(1,N);</command>
<command batch="125">L.Z = cell(1,N);</command>
<command batch="125">L.C = cell(1,N);</command>
<command batch="125">S.X = cell(1,N);</command>
<command batch="125">S.Y = cell(1,N);</command>
<command batch="125">S.Z = cell(1,N);</command>
<command batch="125">S.C = cell(1,N);</command>
<command batch="125">F.P = cell(1,N);</command>
<command batch="125">F.dP = cell(1,N);</command>
<command batch="125">F.dPq = cell(1,N);</command>
<command batch="125">M.X = cell(1,N);</command>
<command batch="125">M.Y = cell(1,N);</command>
<command batch="125">M.Z = cell(1,N);</command>
<command batch="125">M.C = cell(1,N);</command>
<command batch="125">maxVelocity = 0;</command>
<command batch="125">k = 1;</command>
<command batch="125">%         mw = roadWidth*2;</command>
<command batch="125">%         mnl = roadWidth;</command>
<command batch="125">%         mn = 5;</command>
<command batch="125">%         mzb = roadWidth/20;</command>
<command batch="125">%         mzt = roadWidth/2;</command>
<command batch="125">%         mouseBodyL = [...</command>
<command batch="125">%             [linspace(0,-mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="125">%             [-mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command batch="125">%         mouseBodyC = [...</command>
<command batch="125">%             [zeros(mn,1) , linspace(mnl*2,mnl,mn)', linspace(mzb,mzt,mn)'];...</command>
<command batch="125">%             [zeros(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzt.*ones(mn,1)]];</command>
<command batch="125">%         mouseBodyR = [...</command>
<command batch="125">%             [linspace(0,mw, mn)' , linspace(mnl*2,mnl,mn)', mzb.*ones(mn,1)];...</command>
<command batch="125">%             [mw.*ones(mn,1), linspace(mnl-.1, -mnl+.1, mn)', mzb.*ones(mn,1)]];</command>
<command batch="125">%         mouseBody = cat(3,mouseBodyL,mouseBodyC,mouseBodyR);</command>
<command batch="125">%         set(s,'XData',squeeze(mouseBody(:,1,:)),'YData',squeeze(mouseBody(:,2,:)),'ZData',squeeze(mouseBody(:,3,:)),'CData',.3.*ones(mn*2,3),'AlphaData',.9.*ones(mn*2,3))</command>
<command batch="125">%%</command>
<command batch="125">headWidth = .8;</command>
<command batch="125">tailWidth = .2;</command>
<command batch="125">rMouse.head = [linspace(0,headWidth,20), headWidth.*[1 1 1]];</command>
<command batch="125">rMouse.body = cos(linspace(-3*pi/16,3*pi/16,30));</command>
<command batch="125">rMouse.butt = cos(linspace(3*pi/16+.2,pi/2-.2,5));</command>
<command batch="125">rMouse.tail = rMouse.butt(end) .* ones(50,1);</command>
<command batch="125">%%</command>
<command batch="125">[Xbody,Zbody,Ybody] = cylinder( [rMouse.head, rMouse.body,rMouse.butt]);</command>
<command batch="125">Ybody =  2 .* (1-Ybody);%-(Y-.5).*3;</command>
<command batch="125">flattenZ = @(zmat) (0.5 + 0.5 .* zmat).^2;</command>
<command batch="125">Zbody = flattenZ(Zbody);</command>
<command batch="125">[Xtail,Ztail,Ytail] = cylinder( rMouse.tail);</command>
<command batch="125">Xtail = Xtail + 0.2.*sin((4*pi) .* Ytail);</command>
<command batch="125">Ztail = flattenZ(Ztail);</command>
<command batch="125">Ytail = -2.*Ytail;</command>
<command batch="125">X = cat(1,Xbody,Xtail);</command>
<command batch="125">Y = cat(1,Ybody,Ytail);</command>
<command batch="125">Z = cat(1,Zbody,Ztail);</command>
<command batch="125">C = uint8(255.* (.5 + .1.*randn(size(X))));</command>
<command batch="125">% s = surf(X,Y,Z,C,'EdgeColor','none','FaceColor','interp','CDataMapping','direct')</command>
<command batch="125">% lighting gouraud, light, axis equal</command>
<command batch="125">%%</command>
<command batch="125">R0 = [0 1 0];</command>
<command batch="125">M0 = roadWidth .* cat(1, X(:)', Y(:)', Z(:)');</command>
<command batch="125">%         M0(1,:) = X(:)';</command>
<command batch="125">%         M0(2,:) = Y(:)';</command>
<command batch="125">%         M0(3,:) = Z(:)';</command>
<command batch="125">numVert = numel(X);</command>
<command batch="125">mouseSurfSize = size(X);</command>
<command batch="125">applyRot = @(deg) reshape( (rotz(deg) * M0)', mouseSurfSize(1), mouseSurfSize(2), []);</command>
<command batch="125">moveMouse = @(x,y,deg) bsxfun(@plus, cat(3, x, y, 0), applyRot(deg));</command>
<command batch="125">%%</command>
<command batch="125">while k &lt;= N</command>
<command batch="125">% Get Current Position and Local Derivative</command>
<command batch="125">pk = P(k);</command>
<command batch="125">pk_prev = getPriorMidPoint(k);</command>
<command batch="125">pk_next = getNextMidPoint(k);</command>
<command batch="125">dpk_prev = pk - pk_prev;</command>
<command batch="125">dpk_next = pk_next - pk;</command>
<command batch="125">dpk = .5 .* (dpk_prev + dpk_next);</command>
<command batch="125">p_left{1} = pk_prev + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="125">p_left{2} = pk + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="125">p_left{3} = pk_next + roadWidth .* (([0 -1 0; 1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="125">p_right{1} = pk_prev + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_prev)')');</command>
<command batch="125">p_right{2} = pk + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk)')');</command>
<command batch="125">p_right{3} = pk_next + roadWidth .* (([0 1 0; -1 0 0 ; 0 0 1] * makeUnitVec(dpk_next)')');</command>
<command batch="125">% Interpolate using Bezier Curves</command>
<command batch="125">p_q = bezierInterp(pk_prev, pk, pk_next);</command>
<command batch="125">p_left_q = bezierInterp(p_left{:});</command>
<command batch="125">p_right_q = bezierInterp(p_right{:});</command>
<command batch="125">dp_q = bezierInterp(dpk_prev , dpk , dpk_next );</command>
<command batch="125">% Color from interpolated velocity</command>
<command batch="125">velocity_q = sqrt(sum(dp_q.^2,2));</command>
<command batch="125">maxVelocity = max(max(velocity_q),maxVelocity);</command>
<command batch="125">% Add to segmented Graphics Data</command>
<command batch="125">L.X{k} = p_q(1:end-1,1);</command>
<command batch="125">L.Y{k} = p_q(1:end-1,2);</command>
<command batch="125">L.Z{k} = p_q(1:end-1,3);</command>
<command batch="125">S.X{k} = [p_left_q(1:end-1,1) , p_right_q(1:end-1,1)];</command>
<command batch="125">S.Y{k} = [p_left_q(1:end-1,2) , p_right_q(1:end-1,2)];</command>
<command batch="125">S.Z{k} = [p_left_q(1:end-1,3) , p_right_q(1:end-1,3)];</command>
<command batch="125">S.C{k} = repmat(1/maxVelocity .* velocity_q(1:end-1), 1, 2) ;</command>
<command batch="125">F.P{k} = pk;</command>
<command batch="125">F.dP{k} = dpk;</command>
<command batch="125">F.dPq{k} = dp_q;</command>
<command batch="125">% Mouse at Current Position</command>
<command batch="125">zrot_k = atan2d(dpk(2),dpk(1)) - 90;</command>
<command batch="125">velocity_k = sqrt(sum(dpk.^2)) ./ maxVelocity;</command>
<command batch="125">Mk = moveMouse(pk(1),pk(2),zrot_k);</command>
<command batch="125">M.X{k} = Mk(:,:,1);</command>
<command batch="125">M.Y{k} = Mk(:,:,2);</command>
<command batch="125">M.Z{k} = Mk(:,:,3);</command>
<command batch="125">M.C{k} = C + uint8(50 * (velocity_k-0.5));</command>
<command batch="125">k = k + 1;</command>
<command batch="125" execution_time="126053">end</command>
<command batch="126">h.fig = gcf; clf</command>
<command batch="126">set(h.fig,...</command>
<command batch="126">'Colormap', cmap);</command>
<command batch="126">h.ax = gca;</command>
<command batch="126">surfProps = {...</command>
<command batch="126">'EdgeAlpha', 0.0,...</command>
<command batch="126">'FaceColor', 'interp',...</command>
<command batch="126">'FaceAlpha', 'interp',...</command>
<command batch="126">'CDataMapping','direct'};</command>
<command batch="126">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="126">%         h.lineNose = line();</command>
<command batch="126">%         h.lineBody = line();</command>
<command batch="126">%         h.lineTail = line();</command>
<command batch="126">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="126">%         h.mouseArrow = patch(h.ax);</command>
<command batch="126">lighting gouraud</command>
<command batch="126">h.light = light;</command>
<command batch="126" execution_time="652">axis equal</command>
<command execution_time="75">msize = size(M.X{1})</command>
<command execution_time="51">setSurfData(50)</command>
<command execution_time="55">setSurfData(70)</command>
<command execution_time="53">setMouseData(70)</command>
<command execution_time="56">setMouseData(71)</command>
<command execution_time="54">setSurfData(71)</command>
<command execution_time="53">k=73;</command>
<command execution_time="50" repeat="10">setSurfData(k), setMouseData(k), k=k+1;</command>
<command execution_time="57">axis off</command>
<command execution_time="91">get(gca)</command>
<command execution_time="53">set(gca,'Clipping','off')</command>
<command execution_time="49" repeat="2">setSurfData(k), setMouseData(k), k=k+1;</command>
<command execution_time="62">pk = F.P{k}</command>
<command execution_time="54">set(h.ax,'CameraTarget', pk)</command>
<command execution_time="64">dpk = F.dP{k}</command>
<command execution_time="55">set(h.ax,'CameraPosition', pk - dpk*10 + [0 0 5])</command>
<command execution_time="58">set(h.ax,'CameraPosition', pk - dpk*10 + [0 0 1])</command>
<command execution_time="53">set(h.ax,'CameraTarget', pk)</command>
<command execution_time="56">set(h.ax,'CameraPosition', pk - dpk*5 + [0 0 1])</command>
<command execution_time="51">set(h.ax,'CameraTarget', pk)</command>
<command batch="127">setCamPosition = @(k) set(h.ax,...</command>
<command batch="127">'CameraPosition', F.P{k} - F.dP{k}*2 + [0 0 1],...</command>
<command batch="127" execution_time="78">'CameraTarget', F.P{k});</command>
<command execution_time="290" repeat="14">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command execution_time="69">get(h.ax)</command>
<command execution_time="53">set(h.ax,'CameraViewAngle',50)</command>
<command execution_time="54">set(h.ax,'CameraViewAngle',60)</command>
<command batch="128">setCamPosition = @(k) set(h.ax,...</command>
<command batch="128">'CameraPosition', F.P{k} - F.dP{k}*4 + [0 0 1],...</command>
<command batch="128" execution_time="76">'CameraTarget', F.P{k});</command>
<command execution_time="54">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="129">setCamPosition = @(k) set(h.ax,...</command>
<command batch="129">'CameraPosition', F.P{k} - F.dP{k}*10 + [0 0 1],...</command>
<command batch="129" execution_time="78">'CameraTarget', F.P{k});</command>
<command execution_time="56">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command execution_time="53">set(h.ax,'CameraViewAngle',50)</command>
<command execution_time="64">set(h.ax,'CameraViewAngle',80)</command>
<command execution_time="56">set(h.ax,'CameraViewAngle',90)</command>
<command execution_time="55">set(h.ax,'CameraViewAngle',30)</command>
<command batch="130">setCamPosition = @(k) set(h.ax,...</command>
<command batch="130">'CameraPosition', F.P{k} - F.dP{k}*10 + [0 0 1],...</command>
<command batch="130">'CameraTarget', F.P{k},...</command>
<command batch="130" execution_time="96">'CameraViewAngle',60);</command>
<command batch="131" execution_time="230" repeat="7">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="131" execution_time="1103">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="132">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="132">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="132">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="132" execution_time="633">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133" execution_time="242" repeat="2">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="133" execution_time="1343">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="134" execution_time="72" repeat="2">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="134">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="134">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="134" execution_time="448">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="135" execution_time="1664">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="136" execution_time="1273">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="137">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="137" execution_time="334">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="138" execution_time="1050">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="139" execution_time="1277">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140" execution_time="440" repeat="2">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command batch="140" execution_time="1866">setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1;</command>
<command error="true" execution_time="23929">while k&lt;N, setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1; pause(.05), end</command>
<command execution_time="66">k=1;</command>
<command error="true" execution_time="82247">while k&lt;N, setSurfData(k), setMouseData(k), setCamPosition(k), k=k+1; pause(.05), end</command>
<command execution_time="686">S.C</command>
<command execution_time="61">S.C{4}</command>
<command execution_time="59">S.C{40}</command>
<command execution_time="63">S.C{406}</command>
<command execution_time="51">maxVelocity = 0;</command>
<command execution_time="51">k = 1;</command>
<command execution_time="69">get(h.ax)</command>
<command execution_time="52">set(h.ax,'Projection','perspective')</command>
<command batch="141">setCamPosition = @(k) set(h.ax,...</command>
<command batch="141">'CameraPosition', F.P{k} - makeUnitVec(F.dP{k})*4 + [0 0 2],...</command>
<command batch="141">'CameraTarget', F.P{k},...</command>
<command batch="141" execution_time="88">'CameraViewAngle',60);</command>
<command execution_time="62">S.Z{k}</command>
<command execution_time="63">size(S.Z{k})</command>
<command execution_time="55">set(h.ax,'CameraViewAngle',40)</command>
<command execution_time="48">set(h.ax,'CameraViewAngle',30)</command>
<command execution_time="52">set(h.ax,'CameraViewAngle',20)</command>
<command execution_time="51">k=1;</command>
<command execution_time="61">setCamPosition(k)</command>
<command batch="142">setSurfData(k)</command>
<command batch="142" execution_time="89">setMouseData(k)</command>
<command execution_time="49">setCamPosition(k)</command>
<command execution_time="63">cam.p = h.ax.CameraPosition</command>
<command batch="143">cam.v = [0 0 0];</command>
<command batch="143">targ.p = h.ax.CameraTarget;</command>
<command batch="143" execution_time="244">targ.v = [0 0 0]</command>
<command execution_time="59">cam</command>
<command execution_time="78">camva</command>
<command execution_time="95">camlight</command>
<command execution_time="53">h.light</command>
<command execution_time="70">h.light = camlight</command>
<command execution_time="49">h.light</command>
<command error="true" execution_time="334">tpk</command>
<command execution_time="58">F.P{k}</command>
<command execution_time="60">cam.p = F.P{k}</command>
<command execution_time="58">Pcam = h.ax.CameraPosition</command>
<command execution_time="60">Pmouse = F.P{k}</command>
<command execution_time="60">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2))</command>
<command execution_time="366">help axis</command>
<command batch="144">h.fig = gcf; clf</command>
<command batch="144">set(h.fig,...</command>
<command batch="144">'Colormap', cmap);</command>
<command batch="144">h.ax = gca;</command>
<command batch="144">set(h.ax,...</command>
<command batch="144">'Clipping', 'off',...</command>
<command batch="144">'Projection', 'perspective');</command>
<command batch="144">surfProps = {...</command>
<command batch="144">'EdgeAlpha', 0.0,...</command>
<command batch="144">'FaceColor', 'interp',...</command>
<command batch="144">'FaceAlpha', 'interp',...</command>
<command batch="144">'CDataMapping','direct'};</command>
<command batch="144">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="144">%         h.lineNose = line();</command>
<command batch="144">%         h.lineBody = line();</command>
<command batch="144">%         h.lineTail = line();</command>
<command batch="144">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="144">%         h.mouseArrow = patch(h.ax);</command>
<command batch="144">lighting gouraud</command>
<command batch="144">h.light = camlight;</command>
<command batch="144" execution_time="699">axis vis3d off</command>
<command execution_time="59">Pmouse = F.P{k}</command>
<command execution_time="56">Pcam = h.ax.CameraPosition</command>
<command execution_time="56">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2))</command>
<command execution_time="67">makeUnitVec(Pmouse(1:2)-Pcam(1:2))</command>
<command execution_time="53">k=k+1;</command>
<command execution_time="49">setSurfData(k)</command>
<command execution_time="64">setMouseData(k)</command>
<command execution_time="56">Pmouse = F.P{k}</command>
<command execution_time="55">Pcam = h.ax.CameraPosition</command>
<command execution_time="51">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2))</command>
<command execution_time="60">v = makeUnitVec(Pmouse(1:2)-Pcam(1:2))</command>
<command batch="145" execution_time="305" repeat="3">k=k+1;</command>
<command batch="145" execution_time="287">k=k+1;</command>
<command batch="146">k=k+1;</command>
<command batch="146" execution_time="293">k=k+1;</command>
<command batch="147">setSurfData(k)</command>
<command batch="147">setMouseData(k)</command>
<command batch="147">%         setCamPosition(k)</command>
<command batch="147">Pmouse = F.P{k};</command>
<command batch="147" execution_time="269">Pcam = h.ax.CameraPosition;</command>
<command execution_time="58">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2))</command>
<command batch="148" execution_time="252" repeat="3">k=k+1;</command>
<command batch="148" execution_time="295">k=k+1;</command>
<command batch="149">k=k+1;</command>
<command batch="149" execution_time="240">k=k+1;</command>
<command batch="150">k=k+1;</command>
<command batch="150">k=k+1;</command>
<command batch="150">k=k+1;</command>
<command batch="150" execution_time="456">k=k+1;</command>
<command execution_time="231" repeat="2">k=k+1;</command>
<command batch="151">setSurfData(k)</command>
<command batch="151">setMouseData(k)</command>
<command batch="151">%         setCamPosition(k)</command>
<command batch="151">Pmouse = F.P{k};</command>
<command batch="151">Pcam = h.ax.CameraPosition;</command>
<command batch="151">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2));</command>
<command batch="151" execution_time="312">v = makeUnitVec(Pmouse(1:2)-Pcam(1:2));</command>
<command execution_time="58">d</command>
<command execution_time="59">v</command>
<command execution_time="56">setCamPosition(k)</command>
<command execution_time="50">k=k+1;</command>
<command batch="152">setSurfData(k)</command>
<command batch="152">setMouseData(k)</command>
<command batch="152">%         setCamPosition(k)</command>
<command batch="152">Pmouse = F.P{k};</command>
<command batch="152">Pcam = h.ax.CameraPosition;</command>
<command batch="152">d = sqrt(sum((Pmouse(1:2)-Pcam(1:2)).^2));</command>
<command batch="152" execution_time="319">v = makeUnitVec(Pmouse(1:2)-Pcam(1:2));</command>
<command execution_time="57">d</command>
<command execution_time="57">v</command>
<command error="true" execution_time="73">Pcm = (Pmouse(1:2)-Pcam(1:2)</command>
<command execution_time="62">Pcm = Pmouse(1:2)-Pcam(1:2)</command>
<command execution_time="59">d = sqrt(sum(Pcm).^2)</command>
<command execution_time="62">d = sqrt(sum(Pcm.^2))</command>
<command execution_time="58">v = makeUnitVec(Pcm)</command>
<command error="true" execution_time="322">camDist - sqrt(sum(Vcm.^2))</command>
<command batch="153">Pmouse = F.P{k};</command>
<command batch="153">Pcam = h.ax.CameraPosition;</command>
<command batch="153" execution_time="248">Vcm = Pmouse(1:2)-Pcam(1:2)</command>
<command execution_time="59">d = camDist - sqrt(sum(Vcm.^2))</command>
<command execution_time="59">sqrt(sum(Vcm.^2))</command>
<command execution_time="62">ek = d * makeUnitVec(Vcm)</command>
<command execution_time="62">Vcm</command>
<command execution_time="59">Pcam</command>
<command execution_time="60">Pmouse</command>
<command execution_time="59">d = sqrt(sum(Vcm.^2)) - camDist</command>
<command execution_time="56">ek = d * makeUnitVec(Vcm)</command>
<command error="true" execution_time="67">Pmouse + ek</command>
<command execution_time="58">Pmouse</command>
<command execution_time="58">Pcam</command>
<command execution_time="55">d</command>
<command execution_time="59">ek = [d * makeUnitVec(Vcm) 0]</command>
<command execution_time="66">Pmouse = Pmouse + ek</command>
<command execution_time="52">setMouseData(k)</command>
<command execution_time="67">Pmouse = F.P{k}</command>
<command execution_time="58">Pcam = h.ax.CameraPosition</command>
<command execution_time="70">Vcm = Pmouse(1:2)-Pcam(1:2)</command>
<command execution_time="56">d = sqrt(sum(Vcm.^2)) - camDist</command>
<command execution_time="58">ek = [d * makeUnitVec(Vcm) 0]</command>
<command execution_time="70">Pcam + ek</command>
<command execution_time="58">Pcam = Pcam + ek</command>
<command execution_time="55">Vcm = Pmouse(1:2)-Pcam(1:2)</command>
<command execution_time="54">d = sqrt(sum(Vcm.^2)) - camDist</command>
<command execution_time="59">Ek = [d * makeUnitVec(Vcm) 0]</command>
<command execution_time="49" repeat="2">k=1;</command>
<command execution_time="58">setCamPosition(k)</command>
<command batch="154">Esum = [0 0 0];</command>
<command batch="154">Eprev = [0 0 0];</command>
<command batch="154">K.p = .25;</command>
<command batch="154">K.i = .01;</command>
<command batch="154" execution_time="289">K.d = .01;</command>
<command batch="155">setSurfData(k)</command>
<command batch="155" execution_time="87">setMouseData(k)</command>
<command execution_time="61">Eprev = h.ax.CameraPosition</command>
<command batch="156">Pmouse = F.P{k};</command>
<command batch="156">Pcam = h.ax.CameraPosition;</command>
<command batch="156">Vcm = Pmouse(1:2)-Pcam(1:2);</command>
<command batch="156">d = sqrt(sum(Vcm.^2)) - camDist;</command>
<command batch="156">Ek = [d * makeUnitVec(Vcm) 0];</command>
<command batch="156">Esum = Esum + K.i*Ek;</command>
<command batch="156">Uk = K.p*Ek + Esum + K.d*(Ek-Eprev);</command>
<command batch="156" execution_time="393">Eprev = Ek;</command>
<command execution_time="60">Pcam + Uk</command>
<command execution_time="52">campos(Pcam + Uk)</command>
<command execution_time="60">camtarget(Pmouse)</command>
<command execution_time="63">Uk</command>
<command execution_time="57">Pcam</command>
<command execution_time="67">Pmouse</command>
<command execution_time="55">Uk</command>
<command execution_time="64">Ek</command>
<command execution_time="58">Eprev</command>
<command execution_time="55">Ek</command>
<command execution_time="58">Esum</command>
<command batch="157">setSurfData(k)</command>
<command batch="157" execution_time="89">setMouseData(k)</command>
<command execution_time="48">setCamPosition(k)</command>
<command execution_time="54">Ek</command>
<command batch="158">Pmouse = F.P{k};</command>
<command batch="158">Pcam = h.ax.CameraPosition;</command>
<command batch="158">Vcm = Pmouse(1:2)-Pcam(1:2);</command>
<command batch="158">d = sqrt(sum(Vcm.^2)) - camDist;</command>
<command batch="158">Ek = [d * makeUnitVec(Vcm) 0];</command>
<command batch="158">Esum = Esum + K.i*Ek;</command>
<command batch="158">Uk = K.p*Ek + Esum + K.d*(Ek-Eprev);</command>
<command batch="158" execution_time="350">Eprev = Ek;</command>
<command execution_time="48">campos(Pcam + Uk)</command>
<command execution_time="48">camtarget(Pmouse)</command>
<command execution_time="48">k=k+1;</command>
<command batch="159">setSurfData(k)</command>
<command batch="159">setMouseData(k)</command>
<command batch="159">%         setCamPosition(k)</command>
<command batch="159">Pmouse = F.P{k};</command>
<command batch="159">Pcam = h.ax.CameraPosition;</command>
<command batch="159">Vcm = Pmouse(1:2)-Pcam(1:2);</command>
<command batch="159">d = sqrt(sum(Vcm.^2)) - camDist;</command>
<command batch="159">Ek = [d * makeUnitVec(Vcm) 0];</command>
<command batch="159">Esum = Esum + K.i*Ek;</command>
<command batch="159">Uk = K.p*Ek + Esum + K.d*(Ek-Eprev);</command>
<command batch="159" execution_time="464">Eprev = Ek;</command>
<command execution_time="57">Uk</command>
<command execution_time="60">Ek</command>
<command execution_time="58">d</command>
<command execution_time="57">Vcm</command>
<command execution_time="49">campos(Pcam + Uk)</command>
<command execution_time="53">camtarget(Pmouse);</command>
<command execution_time="48">k=k+1;</command>
<command batch="160" repeat="59">setSurfData(k)</command>
<command batch="160">setMouseData(k)</command>
<command batch="160">%         setCamPosition(k)</command>
<command batch="160">Pmouse = F.P{k};</command>
<command batch="160">Pcam = h.ax.CameraPosition;</command>
<command batch="160">Vcm = Pmouse(1:2)-Pcam(1:2);</command>
<command batch="160">d = sqrt(sum(Vcm.^2)) - camDist;</command>
<command batch="160">Ek = [d * makeUnitVec(Vcm) 0];</command>
<command batch="160">Esum = Esum + K.i*Ek;</command>
<command batch="160">Uk = K.p*Ek + Esum + K.d*(Ek-Eprev);</command>
<command batch="160">Eprev = Ek;</command>
<command batch="160">campos(Pcam + Uk);</command>
<command batch="160">camtarget(Pmouse);</command>
<command batch="160" execution_time="554">k=k+1;</command>
<command execution_time="57">camlight(h.light)</command>
<command execution_time="85">h.ax.CameraViewAngle</command>
<command execution_time="69">get(h.fig)</command>
<command execution_time="62">get(h.fig,'KeyPressFcn')</command>
<command execution_time="90">which localModeKeyPressFcn</command>
<command execution_time="57">which locKeyPressFcn</command>
<command execution_time="59">which matlab.uitools.internal.uimode</command>
<command error="true" execution_time="74">type matlab.uitools.internal.uimode</command>
<command error="true" execution_time="63">dbtype matlab.uitools.internal.uimode</command>
<command execution_time="4547">print matlab.uitools.internal.uimode</command>
<command execution_time="387">help print</command>
<command execution_time="677">help disp</command>
<command execution_time="611">help type</command>
<command execution_time="217">type(which('matlab.uitools.internal.uimode'))</command>
<command execution_time="251">help webfigurecache</command>
<command error="true" execution_time="92">webfigurecache</command>
<command execution_time="230">help webfigure</command>
</session>
<session>
<command time_stamp="15d46147eeb">%-- 7/15/2017 7:48 AM --%</command>
<command execution_time="7618">movementDataFile = uigetfile('*.mat')</command>
<command execution_time="3723">[movementdata.filepath, movementdata.filename] = uigetfile('*.mat')</command>
<command execution_time="2959">[movementdata.fileName, movementdata.fileDirectory] = uigetfile('*.mat')</command>
<command execution_time="20">movementdata.contents = load(fullfile(movementdata.fileDirectory,movementdata.fileName))</command>
<command execution_time="25">movementdata.contents</command>
<command execution_time="26">exist('movementdata.mat','file')</command>
<command execution_time="25">5:1:5</command>
<command execution_time="25">5:-1:5</command>
<command execution_time="28">alphaTailFcn = @(a) min(1,a).^2</command>
<command batch="161">bezT = @(t,p1,p2,p3) [ones(numel(t),1) t(:) t(:).^2] * [1 0 0 ; -2 2 0 ; 1 -2 1] * [p1(:)' ; p2(:)' ; p3(:)'];</command>
<command batch="161" execution_time="30">bezierInterp = @(p1,p2,p3) bezT(linspace(0,1,numInterpPoints), p1, p2, p3);</command>
<command execution_time="23">numInterpPoints = 10;</command>
<command batch="162">bezT = @(t,p1,p2,p3) [ones(numel(t),1) t(:) t(:).^2] * [1 0 0 ; -2 2 0 ; 1 -2 1] * [p1(:)' ; p2(:)' ; p3(:)'];</command>
<command batch="162" execution_time="30">bezierInterp = @(p1,p2,p3) bezT(linspace(0,1,numInterpPoints), p1, p2, p3);</command>
<command execution_time="63">bezierInterp( 5, 6, 7)</command>
<command execution_time="20">size(bezierInterp( 5, 6, 7))</command>
<command execution_time="22">size(bezierInterp( 0, 5, 10))</command>
<command execution_time="28">bezierInterp( 0, 5, 10)</command>
<command execution_time="25">bezierInterp( 1, 5, 10)</command>
<command execution_time="25">bezierInterp( 1, 5, 9)</command>
<command execution_time="22">bezierInterp( 1, 5, 11)</command>
<command execution_time="25">bezierInterp( 0, 5, 11)</command>
<command execution_time="25">bezierInterp( 0, 5, 10)</command>
<command execution_time="26">bezierInterp( 0, 5, 9)</command>
<command execution_time="733">plot(bezierInterp( 0, 5, 9))</command>
<command execution_time="35">plot(bezierInterp( 0, 9, 9))</command>
<command execution_time="27">plot(bezierInterp( 0, 2, 9))</command>
<command execution_time="25">plot(bezierInterp( 0, 1, 9))</command>
<command execution_time="35">plot(bezierInterp( 0, 5, 9))</command>
<command execution_time="28">plot(bezierInterp( 0, 5, 6))</command>
<command execution_time="27">plot(bezierInterp( 0, 5, 5.5))</command>
<command execution_time="25">bezT(0,5,6,7)</command>
<command execution_time="26">bezT(0.5,5,6,7)</command>
<command execution_time="25">bezT(0.6,5,6,7)</command>
<command execution_time="25">bezT(1,5,6,7)</command>
<command batch="163">grayLevel = .35;</command>
<command batch="163">blue2gray = [linspace(0,grayLevel,128)', linspace(0,grayLevel,128)', linspace(1,grayLevel,128)'];</command>
<command batch="163" execution_time="34">gray2red = [linspace(1,grayLevel,128)', linspace(grayLevel,0,128)', linspace(grayLevel,0,128)'];</command>
<command batch="164">cmap = [...</command>
<command batch="164">blue2gray ;...</command>
<command batch="164" execution_time="25">gray2red];</command>
<command execution_time="32">image(cmap)</command>
<command execution_time="25">image(reshape(cmap,256,1,3))</command>
<command execution_time="27">gray2red = [linspace(grayLevel,1,128)', linspace(grayLevel,0,128)', linspace(grayLevel,0,128)'];</command>
<command batch="165">cmap = [...</command>
<command batch="165">blue2gray ;...</command>
<command batch="165" execution_time="25">gray2red];</command>
<command execution_time="20">image(reshape(cmap,256,1,3))</command>
<command execution_time="22">clear</command>
<command execution_time="26">clc</command>
<command execution_time="78">profile on</command>
<command error="true" execution_time="1891416">h = showMouseMovement()</command>
<command execution_time="788">profile viewer</command>
<command execution_time="18">%rotmat = [cosd(gamma) -sind(gamma) 0; sind(gamma) cosd(gamma) 0; 0 0 1];</command>
<command execution_time="15">rotz(45)</command>
<command execution_time="20">rotmat = @(gamma) [cosd(gamma) -sind(gamma) 0; sind(gamma) cosd(gamma) 0; 0 0 1]</command>
<command execution_time="20">rotmat(45)</command>
<command execution_time="20">getRotMat = @(deg) [cosd(deg) -sind(deg) 0; sind(deg) cosd(deg) 0; 0 0 1]; % faster alternative to rotz(deg)</command>
<command execution_time="24">getRotMat(180)</command>
<command execution_time="25">rotz(180)</command>
<command execution_time="20">getRotMat(181)</command>
<command execution_time="20">rotz(181)</command>
<command execution_time="30">rotz(360)</command>
<command execution_time="30">getRotMat(360)</command>
<command execution_time="25">getRotMat(361)</command>
<command execution_time="27">rotz(361)</command>
<command execution_time="20">movementdata.contents = load('movementdata.mat');</command>
<command batch="166">x = movementdata.contents.xvals;</command>
<command batch="166" execution_time="25">y = movementdata.contents.yvals;</command>
<command execution_time="60">L</command>
<command execution_time="56">S</command>
<command execution_time="54">F</command>
<command execution_time="59">F.P(1)</command>
<command execution_time="54">F.dP(1)</command>
<command execution_time="59">F.dPq(1)</command>
<command execution_time="55">F.dPq{12}</command>
<command execution_time="60">F.dPq{11}</command>
<command execution_time="55">F.dPq{10}</command>
<command execution_time="48">F.dPq{11}</command>
<command execution_time="55">F.dPq{12}</command>
<command execution_time="721">F.dPq</command>
<command execution_time="51">L</command>
<command execution_time="56">L.X(3)</command>
<command execution_time="52">dp_q</command>
<command batch="167">camHeight = 1.5;</command>
<command batch="167" execution_time="69">camTargetDist = 1.5;</command>
<command execution_time="50">h.fig.Pointer</command>
<command execution_time="48">h.fig.WindowKeyPressFcn</command>
<command execution_time="35">camTargetDist = 2;</command>
<command execution_time="55">h.fig</command>
<command execution_time="61">get(h.fig)</command>
<command execution_time="43" repeat="10">h.fig.CurrentPoint</command>
<command execution_time="4282">help pid</command>
<command batch="168">K.p = .15;</command>
<command batch="168">K.i = .01;</command>
<command batch="168" execution_time="262">K.d = .01;</command>
<command execution_time="45">h.light</command>
<command execution_time="45">Pcam</command>
<command execution_time="49">Pmouse</command>
<command execution_time="48">get(h.light)</command>
<command execution_time="105">set(h.light)</command>
<command execution_time="432">help camlight</command>
<command execution_time="55">camlight headlight</command>
<command execution_time="52">get(h.light)</command>
<command execution_time="59">axis equal</command>
<command execution_time="52">h.ax</command>
<command execution_time="55">h.ax.Position = [0 0 1 1]</command>
<command execution_time="58">zSlope</command>
<command execution_time="286">figure</command>
<command error="true" execution_time="513">plot(zslope)</command>
<command execution_time="61">plot(zSlope)</command>
<command execution_time="53">plot(cos(zSlope))</command>
<command execution_time="47">zSlope = cos( linspace(-0.2, 0.2, (numExtendPast + numExtendFuture + 1)*numInterp)') - 1;</command>
<command execution_time="238" repeat="2">plot(zSlope)</command>
<command execution_time="50">cos(1)</command>
<command execution_time="64">cos(.5)</command>
<command execution_time="55">cos(.2)</command>
<command execution_time="58">cos(.4)</command>
<command execution_time="58">cos(.5)</command>
<command execution_time="63">cos(.8)</command>
<command execution_time="43">pathCurvature = 1; % radians</command>
<command execution_time="60">pi/4</command>
<command execution_time="67">pi/2</command>
<command execution_time="50">pi/3</command>
<command execution_time="43">pathCurvature = pi/4; % radians</command>
<command execution_time="60">s = struct('X',cell(1,10),'Y',cell(1,10))</command>
<command execution_time="55">s(1)</command>
<command execution_time="60">s(2)</command>
<command execution_time="558">surf(Xbody,Ybody,Zbody); axis equal</command>
<command error="true" execution_time="638">[Xhead,Zhead,Yhead] = cylinder( mouseProfile.head );</command>
<command execution_time="47">mouseProfile.torso = cos(linspace(-3*pi/16, 3*pi/16,numTorsoPts));</command>
<command execution_time="284">surf(Xhead,Yhead,Zhead); axis equal</command>
<command execution_time="75">clearvars X Y Z</command>
<command batch="169" repeat="3">for ksection = 1:numel(sectionNameList)</command>
<command batch="169">section = sectionNameList{ksection};</command>
<command batch="169">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="169">pause;</command>
<command batch="169" execution_time="26688">end</command>
<command execution_time="57">Y.(section)</command>
<command error="true" execution_time="263">(1/numPts.(section))</command>
<command execution_time="62">sectionNameList</command>
<command execution_time="51">clearvars mouseProfile numPts</command>
<command batch="170" repeat="2">for ksection = 1:numel(sectionNameList)</command>
<command batch="170">section = sectionNameList{ksection};</command>
<command batch="170">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="170">pause;</command>
<command batch="170" execution_time="18635">end</command>
<command execution_time="50">sumBodyPtsY = numPts.head + numPts.torso + numPts.butt + numPts.tail</command>
<command batch="171">for ksection = 1:numel(sectionNameList)</command>
<command batch="171">section = sectionNameList{ksection};</command>
<command batch="171">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="171">pause;</command>
<command batch="171" execution_time="12443">end</command>
<command execution_time="244">ylim([0,1])</command>
<command batch="172">for ksection = 1:numel(sectionNameList)</command>
<command batch="172">section = sectionNameList{ksection};</command>
<command batch="172">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="172">xlim([-1 1]); ylim([0,1]);</command>
<command batch="172">pause;</command>
<command batch="172" execution_time="4061">end</command>
<command batch="173">for ksection = 1:numel(sectionNameList)</command>
<command batch="173">section = sectionNameList{ksection};</command>
<command batch="173">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="173">xlim([-1 1]); ylim([0,1]); zlim([-1 1])</command>
<command batch="173">axis equal</command>
<command batch="173">pause;</command>
<command batch="173" execution_time="8889">end</command>
<command batch="174" repeat="4">for ksection = 1:numel(sectionNameList)</command>
<command batch="174">section = sectionNameList{ksection};</command>
<command batch="174">surf(X.(section),Y.(section),Z.(section));</command>
<command batch="174">xlim([-1 1]); ylim([0,1]); zlim([-1 1]);</command>
<command batch="174">pause;</command>
<command batch="174" execution_time="6772">end</command>
<command execution_time="50">Y</command>
<command execution_time="52">Y.head</command>
<command execution_time="48">Y.body</command>
<command execution_time="50">Y.torso</command>
<command execution_time="45">rostroCaudalStretch = 6;</command>
<command execution_time="46">clearvars mouseProfile numPts</command>
<command execution_time="40">size(Xmouse)</command>
<command execution_time="55">uint8(255.* (.5 + .1.*randn(size(Xmouse))))</command>
<command batch="175">Xmouse = cat(1, X.head, X.torso, X.butt, X.tail);</command>
<command batch="175">Ymouse = cat(1, Y.head, Y.torso, Y.butt, Y.tail);</command>
<command batch="175" execution_time="258">Zmouse = cat(1, Z.head, Z.torso, Z.butt, Z.tail);</command>
<command error="true" execution_time="252">moveMouse(0,0,0)</command>
<command execution_time="48">size(mouseSurfVertices)</command>
<command execution_time="45">size(X)</command>
<command execution_time="96">moveMouse(0,0,0)</command>
<command execution_time="50">Mk = moveMouse(0,0,35);</command>
<command execution_time="67">size(Mk)</command>
<command execution_time="79">Mk = num2cell( moveMouse(0,0,35), 3);</command>
<command execution_time="48">size(Mk)</command>
<command execution_time="55">Mk = num2cell( moveMouse(0,0,35), [1 2]);</command>
<command execution_time="46">size(Mk)</command>
<command execution_time="53">Mk</command>
<command execution_time="70">Mk = num2cell( moveMouse(0,0,46), [1 2])</command>
<command execution_time="56">Mk(1)</command>
<command batch="176">clear</command>
</session>
<session>
<command time_stamp="15d47e998b5">%-- 7/15/2017 4:21 PM --%</command>
<command execution_time="21657">h = showMouseMovement()</command>
<command execution_time="28">h.ax.CameraTarget</command>
<command error="true" execution_time="30">h.setMouseData(45)</command>
<command execution_time="1154">help surface</command>
<command batch="177" error="true">h.fig = gcf; clf</command>
<command batch="177" error="true">set(h.fig,...</command>
<command batch="177" error="true">'Colormap', cmap);</command>
<command batch="177" error="true">h.ax = gca;</command>
<command batch="177" error="true">set(h.ax,...</command>
<command batch="177" error="true">'Clipping', 'off',...</command>
<command batch="177" error="true">'Projection', 'perspective');</command>
<command batch="177" error="true">surfProps = {...</command>
<command batch="177" error="true">'EdgeAlpha', 0.0,...</command>
<command batch="177" error="true">'FaceColor', 'interp',...</command>
<command batch="177" error="true">'FaceAlpha', 'interp',...</command>
<command batch="177" error="true">'CDataMapping','direct'};</command>
<command batch="177" error="true">h.surfRoad = surface(h.ax, surfProps{:});</command>
<command batch="177" error="true">h.mouseBody = surface(h.ax,surfProps{:});</command>
<command batch="177" error="true">lighting gouraud</command>
<command batch="177" error="true">h.light = camlight('headlight');</command>
<command batch="177" error="true" execution_time="571">axis vis3d off</command>
<command execution_time="103">cmap = colormap(gray);</command>
<command execution_time="20">h.ax.CameraTarget</command>
<command execution_time="45550">clear</command>
<command execution_time="20">clc</command>
<command execution_time="36">close</command>
<command execution_time="20">clc</command>
<command execution_time="21423">h = showMouseMovement()</command>
<command error="true" execution_time="298">h.ax.camViewAngle</command>
<command execution_time="22">h</command>
<command execution_time="25">h.ax.CameraViewAngle</command>
<command execution_time="30">h.ax.CameraViewAngle = 45</command>
<command execution_time="33">h.ax.CameraViewAngle = 70</command>
<command execution_time="23">mouseSize = 2;</command>
<command batch="178">while (kframe&lt;N) &amp;&amp; all(h.fig.CurrentPoint == figClickPt)</command>
<command batch="178">% Update Surfaces</command>
<command batch="178">h.setSurfData(kframe)</command>
<command batch="178">h.setMouseData(kframe)</command>
<command batch="178">% Get New Mouse Position</command>
<command batch="178">Pmouse = F.P{kframe};</command>
<command batch="178">Pcam = h.ax.CameraPosition;</command>
<command batch="178">Ptarg  = h.ax.CameraTarget;</command>
<command batch="178">% Update Camera Position -&gt; PID</command>
<command batch="178">Vcm = Pmouse(1:2)-Pcam(1:2);</command>
<command batch="178">d = sqrt(sum(Vcm.^2)) - camTargetDist;</command>
<command batch="178">Ek_campos = [d * makeUnitVec(Vcm) 0];</command>
<command batch="178">Esum_campos = Esum_campos + K_campos.i*Ek_campos;</command>
<command batch="178">Uk_campos = K_campos.p*Ek_campos + Esum_campos + K_campos.d*(Ek_campos-Eprev_campos);</command>
<command batch="178">Eprev_campos = Ek_campos;</command>
<command batch="178">h.ax.CameraPosition = Pcam + Uk_campos;</command>
<command batch="178">% Update Camera Target -&gt; PID</command>
<command batch="178">Ek_camtarg = [Pmouse(1:2) - Ptarg(1:2), 0];</command>
<command batch="178">Esum_camtarg = Esum_camtarg + K_camtarg.i*Ek_camtarg;</command>
<command batch="178">Uk_camtarg = K_camtarg.p*Ek_camtarg + Esum_camtarg + K_camtarg.d*(Ek_camtarg-Eprev_camtarg);</command>
<command batch="178">Eprev_camtarg = Ek_camtarg;</command>
<command batch="178">h.ax.CameraTarget = Ptarg + Uk_camtarg;</command>
<command batch="178">%     h.ax.CameraTarget = Pmouse;</command>
<command batch="178">camlight(h.light,'headlight')</command>
<command batch="178">kframe=kframe+1;</command>
<command batch="178">drawnow</command>
<command batch="178">pause(0.050)</command>
<command batch="178" execution_time="32">end</command>
<command execution_time="416">help liveeditor</command>
<command execution_time="20">movementdata.contents = load('movementdata.mat');</command>
<command batch="179">x = movementdata.contents.xvals;</command>
<command batch="179" execution_time="23">y = movementdata.contents.yvals;</command>
<command batch="180">x = x(:);</command>
<command batch="180">y = y(:);</command>
<command batch="180">z = zeros(size(x));</command>
<command batch="180" execution_time="36">N = length(x);</command>
<command batch="181">set(h.ax,...</command>
<command batch="181">'Clipping', 'off',...</command>
<command batch="181">'Projection', 'perspective',...</command>
<command batch="181" execution_time="23">'Position',[0 0 1 1])</command>
<command execution_time="25">K_camtarg.d = .015;</command>
<command execution_time="21">camTargetDist = 3;</command>
<command execution_time="291">help getframe</command>
<command error="true" execution_time="298">f</command>
<command execution_time="20">kframe</command>
<command execution_time="517">f = getframe(h.ax);</command>
<command execution_time="21">f</command>
<command execution_time="30">get(h.fig)</command>
<command execution_time="25">h.fig.InnerPosition</command>
<command execution_time="20">int32(h.fig.InnerPosition)</command>
<command execution_time="20">h.fig.InnerPosition = [100 100 0 0] + [0 0 1024 1024];</command>
<command execution_time="15">figSize = [1920 1280];</command>
<command execution_time="25">set(h.fig,'InnerPosition', [100 100 0 0] + [0 0 figSize]);</command>
<command execution_time="460">f = getframe(h.ax);</command>
<command execution_time="20">f</command>
<command error="true" execution_time="25">get(h.ax</command>
<command execution_time="45">get(h.ax)</command>
<command execution_time="17">getpixelposition(h.ax)</command>
<command execution_time="18">getpixelposition(h.fig)</command>
<command execution_time="16">set(h.fig,'OuterPosition', [100 100 0 0] + [0 0 figSize]);</command>
<command execution_time="420">f = getframe(h.ax);</command>
<command execution_time="22">f</command>
<command execution_time="91441">clear all</command>
<command execution_time="54979">[h,f] = showMouseMovement</command>
<command error="true" execution_time="46" repeat="2">showMouseMovement</command>
<command batch="182">x = x(:);</command>
<command batch="182">y = y(:);</command>
<command batch="182">z = zeros(size(x));</command>
<command batch="182" execution_time="29">N = length(x);</command>
<command execution_time="18">Uk_camtarg</command>
<command execution_time="30">Ek_camtarg</command>
<command execution_time="20">Ek_camtarg-Eprev_camtarg</command>
<command execution_time="20">Eprev_camtarg</command>
<command execution_time="23">K_camtarg.d = .025;</command>
<command execution_time="20">Ek_camtarg</command>
<command execution_time="15">Pmouse</command>
<command execution_time="16">Ek_camtarg</command>
<command execution_time="15">Ptarg</command>
<command execution_time="18">Ek_camtarg</command>
<command execution_time="19">Esum_camtarg</command>
<command execution_time="20">Uk_camtarg</command>
<command execution_time="19">Eprev_camtarg</command>
<command execution_time="20">Ptarg</command>
<command execution_time="15">Uk_camtarg</command>
<command batch="183">K_camtarg.i = .025;</command>
<command batch="183" execution_time="21">K_camtarg.d = .015;</command>
<command batch="184" error="true">set(h.fig,...</command>
<command batch="184" error="true">'Colormap', cmap,...</command>
<command batch="184" error="true" execution_time="25">'Position', [100 100 0 0] + [0 0 figSize])</command>
<command execution_time="12" repeat="2">get(h.fig,'Position')</command>
<command execution_time="20">int32(get(h.fig,'Position'))</command>
<command execution_time="95" repeat="4">getframe(h.ax)</command>
<command execution_time="488">help getframe</command>
<command execution_time="18">get(h.ax,'Position')</command>
<command execution_time="21">getpixelposition(h.ax)</command>
<command execution_time="21">int32(getpixelposition(h.ax))</command>
<command execution_time="100" repeat="4">getframe(h.ax)</command>
<command execution_time="20">int32(getpixelposition(h.ax))</command>
<command execution_time="697">getframe(h.ax)</command>
<command error="true" execution_time="15">getframe(h.ax,[0 0 640 480]))</command>
<command execution_time="243">getframe(h.ax,[0 0 640 480])</command>
<command execution_time="242">help getframe</command>
<command execution_time="237">f(kframe) = getframe(h.ax);</command>
<command execution_time="20">f(kframe)</command>
<command execution_time="108">getframe(h.ax,[0 0 640 480])</command>
<command execution_time="242">figure, image(ans.cdata)</command>
<command error="true" execution_time="110">figure, image(f.cdata)</command>
<command execution_time="94">figure, image(f(kframe).cdata)</command>
<command execution_time="20">f</command>
<command execution_time="18">f(2)</command>
<command execution_time="18">f(300)</command>
<command execution_time="20">f(301)</command>
<command execution_time="18">f(302)</command>
<command execution_time="42">get(h.ax)</command>
<command execution_time="79">getframe(h.fig)</command>
<command execution_time="19">h.fig.Position</command>
<command execution_time="17">int32(h.fig.Position)</command>
<command execution_time="17">getpixelposition(h.fig)</command>
<command execution_time="19">int32(getpixelposition(h.fig))</command>
<command execution_time="87">getframe</command>
<command execution_time="85">getframe(h.fig)</command>
<command execution_time="20">h.fig.Position</command>
<command error="true" execution_time="20">h.fig.Position = h.fig.Position + [0 0 -1 ];</command>
<command execution_time="20">h.fig.Position = h.fig.Position + [0 0 -1 0];</command>
<command execution_time="89">getframe(h.fig)</command>
<command execution_time="850">figure, imshow(ans.cdata)</command>
<command execution_time="18">figSize = [512 512];</command>
<command execution_time="18">imageSize = [512 512]</command>
<command error="true" execution_time="317">frameTest = getFrame(h.fig)</command>
<command execution_time="72">frameTest = getframe(h.fig);</command>
<command execution_time="15">frameTest</command>
<command execution_time="18">testSize = size(frameTest.cdata)</command>
<command execution_time="15">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])]</command>
<command execution_time="20">h.fig.Position</command>
<command execution_time="14">int32(h.fig.Position)</command>
<command execution_time="83">frameTest = getframe(h.fig)</command>
<command execution_time="15">getpixelposition(h.fig)</command>
<command execution_time="20">int32(getpixelposition(h.fig))</command>
<command execution_time="15">sizeFix</command>
<command execution_time="17">imageSize</command>
<command execution_time="20">testSize</command>
<command execution_time="416">figure, imshow(frameTest.cdata)</command>
<command execution_time="21">h.fig</command>
<command execution_time="18">frameTest</command>
<command execution_time="16">testSize</command>
<command execution_time="17">sizeFix</command>
<command execution_time="17">h.fig.Position = h.fig.Position + sizeFix;</command>
<command batch="185">frameTest = getframe(h.fig);</command>
<command batch="185">testSize = size(frameTest.cdata);</command>
<command batch="185" execution_time="40">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])];</command>
<command execution_time="22">sizeFix</command>
<command execution_time="20">testSize</command>
<command execution_time="17">frameTest</command>
<command execution_time="18">get(h.fig)</command>
<command execution_time="20">frameTest</command>
<command batch="186" repeat="2">frameTest = getframe(h.fig);</command>
<command batch="186">testSize = size(frameTest.cdata);</command>
<command batch="186">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])];</command>
<command batch="186" execution_time="58">h.fig.Position = h.fig.Position + sizeFix;</command>
<command execution_time="15">frameTest</command>
<command execution_time="15">testSize</command>
<command execution_time="20">sizeFix</command>
<command batch="187" repeat="14">frameTest = getframe(h.fig)</command>
<command batch="187">testSize = size(frameTest.cdata);</command>
<command batch="187">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])]</command>
<command batch="187" execution_time="87">h.fig.Position = h.fig.Position + sizeFix;</command>
<command execution_time="38">frameTest = getframe(h.fig)</command>
<command execution_time="15">testSize = size(frameTest.cdata)</command>
<command execution_time="18">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])]</command>
<command execution_time="16">h.fig.Position = round(h.fig.Position) + sizeFix</command>
<command execution_time="40">frameTest = getframe(h.fig)</command>
<command batch="188" repeat="5">frameTest = getframe(h.fig)</command>
<command batch="188">testSize = size(frameTest.cdata);</command>
<command batch="188">sizeFix = [0 0 imageSize([2 1])-testSize([2 1])]</command>
<command batch="188" execution_time="58">h.fig.Position = round(h.fig.Position) + sizeFix;</command>
<command execution_time="32">tFix = tic;</command>
<command execution_time="25">toc(tFix)</command>
<command execution_time="38">frameTest = getframe(h.fig)</command>
<command execution_time="15">all(abs(testSize) &lt; 1)</command>
<command execution_time="19">testSize</command>
<command execution_time="19">h</command>
<command execution_time="15">h.ax = gca</command>
<command execution_time="30">axes(h.ax)</command>
<command execution_time="269">help axes</command>
<command execution_time="19">get(h.ax,'tag')</command>
<command batch="189" error="true">surfProps = {...</command>
<command batch="189" error="true">'EdgeAlpha', 0.0,...</command>
<command batch="189" error="true">'FaceColor', 'interp',...</command>
<command batch="189" error="true">'FaceAlpha', 'interp',...</command>
<command batch="189" error="true">'CDataMapping','direct'};</command>
<command batch="189" error="true">hsurf = surface(hax, surfProps{:},'tag','road');</command>
<command batch="189" error="true" execution_time="367">hmouse = surface(hax,surfProps{:},'tag','mouse');</command>
<command execution_time="24">hax = gca</command>
<command batch="190">surfProps = {...</command>
<command batch="190">'EdgeAlpha', 0.0,...</command>
<command batch="190">'FaceColor', 'interp',...</command>
<command batch="190">'FaceAlpha', 'interp',...</command>
<command batch="190">'CDataMapping','direct'};</command>
<command batch="190">hsurf = surface(hax, surfProps{:},'tag','road');</command>
<command batch="190" execution_time="28">hmouse = surface(hax,surfProps{:},'tag','mouse');</command>
<command execution_time="25">findobj(hax.Children,'tag','road')</command>
<command execution_time="22">hax</command>
<command execution_time="17">isvalid(hax)</command>
</session>
<session>
<command time_stamp="15d48ead5dd">%-- 7/15/2017 9:02 PM --%</command>
<command execution_time="522481">[h,f] = showMouseMovement</command>
<command execution_time="27">f(1)</command>
<command execution_time="27">f(2)</command>
<command execution_time="28">f(5)</command>
<command execution_time="44095">figure, movie(f)</command>
<command execution_time="945">figure, imshow(f(200).cdata)</command>
<command execution_time="281">im = imshow(f(200).cdata)</command>
<command execution_time="60200">k=1; while k&lt;1000, im.CData = f(k).cdata; drawnow, pause(.05), k=k+1; end</command>
<command execution_time="3537">amd = load('Z:\Data\HowardMattStriatum\Construct\fromMike\allmousedata.mat')</command>
<command execution_time="23">amd.allMouseData</command>
<command execution_time="23">amd = amd.allMouseData</command>
<command execution_time="23">amd(1)</command>
<command execution_time="27">amd(2)</command>
<command execution_time="35">strvcat(amd.suffix)</command>
<command execution_time="22">amd(1)</command>
<command execution_time="110">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="24">md.info</command>
<command execution_time="249">figure, plot(md.info.Dt)</command>
<command execution_time="18">md.info.ForwardVelocity(1:30)</command>
<command execution_time="17">md.info.ForwardVelocity(1:30)./md.info.Dt(1:30)</command>
<command execution_time="27">plot(md.info.ForwardVelocity)</command>
<command execution_time="37">hold on</command>
<command execution_time="19">plot(md.info.Dt .*1000)</command>
<command execution_time="22">plot(md.info.RotationalVelocity .*1000)</command>
<command execution_time="16">md.info</command>
<command execution_time="85">plot(md.info.Xpos, md.info.Ypos)</command>
<command error="true" execution_time="35">plot3(md.info.Xpos, md.info.Ypos)</command>
<command execution_time="86">plot3(md.info.Xpos, md.info.Ypos,md.info.Zpos)</command>
<command execution_time="24">hl = plot3(md.info.Xpos, md.info.Ypos,md.info.Zpos)</command>
<command execution_time="18">hl.LineWidth = 4</command>
<command execution_time="25">hl = plot3(md.info.Xpos(1:1000), md.info.Ypos(1:1000),md.info.Zpos(1:1000))</command>
<command execution_time="24">md.info.Xpos(1:1000)</command>
<command execution_time="19">md</command>
<command execution_time="15">md.info</command>
<command execution_time="20">md</command>
<command execution_time="21">md.data(1,:,1:5)</command>
<command execution_time="24">md.data(1,:,10:20)</command>
<command execution_time="19">clc</command>
<command execution_time="16">md.data(1,:,10:20)</command>
<command execution_time="19">m1m2 = squeeze(md.data(1,:,:));</command>
<command execution_time="18">size(m1m2)</command>
<command execution_time="17">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="90">figure, plot(m1m2(:,1))</command>
<command execution_time="17">hold on</command>
<command execution_time="21">plot(m1m2(:,3))</command>
<command execution_time="43">axrot.z = mean(m1m2(:,[1 3]),2);</command>
<command execution_time="85">plot(axrot.z)</command>
<command error="true" execution_time="31">plot(mean(m1m2(:,[2 4],2)))</command>
<command execution_time="38">whos</command>
<command execution_time="88">plot(m1m2(1:10000,[1 3]))</command>
<command execution_time="43">info</command>
<command execution_time="35">whos</command>
<command execution_time="17">md</command>
<command execution_time="17">md.info</command>
<command execution_time="20">md.info.ViewAngle(1:10)</command>
<command execution_time="359">md.info.RotationalVelocity</command>
<command execution_time="84">plot(md.info.RotationalVelocity)</command>
<command execution_time="17">hold on</command>
<command error="true" execution_time="22">plot(mean(m1m2(:,[2 4],2)))</command>
<command execution_time="18">plot(m1m2(:,[2 4]))</command>
<command execution_time="17">plot(m1m2(:,[1 3]))</command>
<command execution_time="21">cla</command>
<command execution_time="18">plot(md.info.RotationalVelocity)</command>
<command execution_time="22">hold on</command>
<command execution_time="17">plot(m1m2(:,[1 3]))</command>
<command execution_time="2556">load('movementdata.mat')</command>
<command execution_time="17">xvals(1:100)</command>
<command execution_time="17">plot(xvals)</command>
<command batch="191">cla</command>
<command batch="191">plot(md.info.RotationalVelocity)</command>
<command batch="191">hold on</command>
<command batch="191" execution_time="60">plot(m1m2(:,[1 3]))</command>
<command error="true" execution_time="63">plot(xvals)*100</command>
<command batch="192">cla</command>
<command batch="192">plot(md.info.RotationalVelocity)</command>
<command batch="192">hold on</command>
<command batch="192" execution_time="46">plot(m1m2(:,[1 3]))</command>
<command execution_time="17">plot(xvals*100)</command>
<command execution_time="16">plot(xvals*10)</command>
<command execution_time="41">plot(gradient(xvals)*10)</command>
<command execution_time="20">plot(gradient(xvals)*100)</command>
<command execution_time="20">plot(gradient(xvals)*200)</command>
<command batch="193">cla</command>
<command batch="193">plot(md.info.RotationalVelocity)</command>
<command batch="193">hold on</command>
<command batch="193" execution_time="47">plot(m1m2(:,[1 3]))</command>
<command execution_time="18">plot(gradient(xvals)*250)</command>
<command execution_time="24">plot(gradient(yvals)*250)</command>
<command execution_time="17">clc</command>
<command batch="194">plot(md.info.Dt.* mean(m1m2(:,[1 3]),2))</command>
<command batch="194">hold on</command>
<command batch="194">plot(gradient(xvals)*25)</command>
<command batch="194" execution_time="254">plot(gradient(yvals)*25)</command>
<command execution_time="17">clc</command>
<command batch="195" error="true">plot(md.info.Dt.* mean(m1m2(:,[1 3]),2) - 30)</command>
<command batch="195" error="true">hold on</command>
<command batch="195" error="true">plot(gradient(xvals)*25)+30</command>
<command batch="195" error="true" execution_time="55">plot(gradient(yvals)*25)+30</command>
<command batch="196">clc</command>
<command batch="196">cla</command>
<command batch="196">plot(md.info.Dt.* mean(m1m2(:,[1 3]),2) - 30)</command>
<command batch="196">hold on</command>
<command batch="196">plot(gradient(xvals)*25 + 30)</command>
<command batch="196" execution_time="78">plot(gradient(yvals)*25 + 30)</command>
<command error="true" execution_time="1069">Dt</command>
<command batch="197">plot(mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command batch="197">hold on</command>
<command batch="197">plot(gradient(xvals)*25 + 30)</command>
<command batch="197" execution_time="52">plot(gradient(yvals)*25 + 30)</command>
<command execution_time="15">cla</command>
<command execution_time="16">plot(mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command execution_time="18">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command execution_time="15">cla</command>
<command execution_time="16">hold off</command>
<command execution_time="22">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command batch="198" error="true">cla</command>
<command batch="198" error="true">cls</command>
<command batch="198" error="true">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command batch="198" error="true">hold on</command>
<command batch="198" error="true">plot(gradient(xvals)*25 + 30)</command>
<command batch="198" error="true" execution_time="263">plot(gradient(yvals)*25 + 30)</command>
<command batch="199">cla</command>
<command batch="199">clc</command>
<command batch="199">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2) - 30)</command>
<command batch="199">hold on</command>
<command batch="199">plot(gradient(xvals)*25 + 30)</command>
<command batch="199" execution_time="71">plot(gradient(yvals)*25 + 30)</command>
<command batch="200">cla</command>
<command batch="200">clc</command>
<command batch="200">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2))</command>
<command batch="200">hold on</command>
<command batch="200">plot(gradient(xvals)*25 - 50)</command>
<command batch="200" execution_time="73">plot(gradient(yvals)*25 + 50)</command>
<command batch="201">cla</command>
<command batch="201">clc</command>
<command batch="201">plot(.001 * mean(m1m2(:,[1 3]) ./ md.info.Dt, 2))</command>
<command batch="201">hold on</command>
<command batch="201">plot(gradient(xvals)*25 - 100)</command>
<command batch="201" execution_time="81">plot(gradient(yvals)*25 + 100)</command>
<command execution_time="17">m1m2(6633:6663,1)</command>
<command execution_time="21">sum(m1m2(6633:6663,1))</command>
<command execution_time="17">sum(m1m2(6633:6663,1))/180</command>
<command execution_time="18">sum(m1m2(6633:6663,1))/90</command>
<command execution_time="18">dtheta_ctspersec = mean(m1m2(:,[1 3]),2) ./ md.info.Dt;</command>
<command execution_time="17">sum(dtheta_ctspersec(6633:6663))</command>
<command execution_time="18">int32(sum(dtheta_ctspersec(6633:6663)) / 90 )</command>
<command execution_time="17">int32(sum(dtheta_ctspersec(6633:6663)) / 45 )</command>
<command execution_time="18">int32(sum(dtheta_ctspersec(6633:6663)) / 180 )</command>
<command execution_time="18">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/2000);</command>
<command execution_time="21">cla</command>
<command execution_time="17">plot(dtheta)</command>
<command execution_time="17">plot(cumsum(dtheta))</command>
<command execution_time="36">clf</command>
<command execution_time="25">plot(cumsum(dtheta))</command>
<command execution_time="17">dtheta(1:100)</command>
<command execution_time="17">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/2000);</command>
<command execution_time="18">dtheta(isnan(dtheta)) = 0;</command>
<command execution_time="20">dtheta(500)</command>
<command execution_time="20">dtheta(5000)</command>
<command execution_time="21">dtheta(50:300)</command>
<command execution_time="20">tan(dtheta(280))</command>
<command execution_time="20">tand(dtheta(280))</command>
<command execution_time="21">tand(40)</command>
<command execution_time="18">tand(-40)</command>
<command error="true" execution_time="483">mouseOrientation - mouseTrajectory</command>
<command execution_time="18">tand(40)</command>
<command execution_time="16">tand(-40)</command>
<command execution_time="21">atand(tand(-40))</command>
<command execution_time="19">atand(tand(40))</command>
<command execution_time="20">clc</command>
<command execution_time="16">hlast = h;</command>
<command execution_time="16">flast = f;</command>
<command execution_time="43261">[h,f] = showMouseMovement(xvals,yvals,dtheta);</command>
<command error="true" execution_time="257">Mk</command>
<command execution_time="342">dtheta</command>
<command execution_time="190">[h,f] = showMouseMovement(xvals,yvals,dtheta);</command>
<command execution_time="25">mouseOrientation</command>
<command execution_time="25">mouseTrajectory</command>
<command execution_time="20" repeat="2">dpk</command>
<command execution_time="27">dtheta(kseg)</command>
<command execution_time="20" repeat="2">mouseOrientation</command>
<command execution_time="20">Etk</command>
<command execution_time="27">tand(mouseTrajectory - mouseOrientation)</command>
<command execution_time="25">mouseTrajectory</command>
<command execution_time="19">mouseOrientation</command>
<command execution_time="23">tand(mouseTrajectory - mouseOrientation)</command>
<command execution_time="144">[h,f] = showMouseMovement(xvals,yvals,dtheta);</command>
<command execution_time="28">mouseTrajectory</command>
<command execution_time="27">mouseOrientation</command>
<command execution_time="26">Etk</command>
<command execution_time="36">Itk</command>
<command execution_time="26">Utk</command>
<command execution_time="24">Etkm1</command>
<command execution_time="25">mouseOrientation</command>
<command execution_time="27">M</command>
<command execution_time="25">M.X(1)</command>
<command execution_time="29">M.X{1}</command>
<command execution_time="25">Etkm1</command>
<command execution_time="23">Utk</command>
<command execution_time="25">mouseOrientation</command>
<command execution_time="24">mouseTrajectory</command>
<command execution_time="27">dtheta(kseg)</command>
<command execution_time="26">mouseOrientation</command>
<command execution_time="19">Etk</command>
<command execution_time="19">Itk</command>
<command execution_time="24">Utk</command>
<command execution_time="18">Etkm1</command>
<command execution_time="27">Mk</command>
<command execution_time="19">Etk</command>
<command execution_time="19">Utk</command>
<command execution_time="23">mouseOrientation</command>
<command execution_time="266" repeat="2">mouseTrajectory</command>
<command execution_time="26">mouseOrientation</command>
<command execution_time="25">dtheta(kseg)</command>
<command execution_time="26">Utk</command>
<command execution_time="18">Etkm1</command>
<command execution_time="22">atand(Utk)</command>
<command execution_time="408278">[h,f] = showMouseMovement(xvals,yvals,-dtheta);</command>
<command execution_time="20">tand(600)</command>
<command execution_time="19">atand(tand(600))</command>
<command execution_time="70718">[h,f] = showMouseMovement(xvals(1:5000),yvals(1:5000),dtheta(1:5000));</command>
<command execution_time="136" repeat="2">[h,f] = showMouseMovement(xvals(1:5000),yvals(1:5000),-dtheta(1:5000));</command>
<command execution_time="59">whos</command>
<command execution_time="56">whos mouseSurfVertices</command>
<command execution_time="37" repeat="2">Mk = reshape(mouseSurfVertices,mouseSurfSize(1),mouseSurfSize(2),[]);</command>
<command error="true" execution_time="267">h</command>
<command execution_time="28">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3))</command>
<command execution_time="30">cla</command>
<command error="true" execution_time="22">axes on</command>
<command execution_time="27">axis on</command>
<command execution_time="23">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3))</command>
<command execution_time="44">clf</command>
<command execution_time="24">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3))</command>
<command execution_time="275">close</command>
<command execution_time="255">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3))</command>
<command execution_time="23">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3),'CData',uint8(0.*Mk + 50))</command>
<command execution_time="20">Mk = reshape(mouseSurfVertices',mouseSurfSize(1),mouseSurfSize(2),[]);</command>
<command execution_time="261" repeat="2">surface('Xdata',Mk(:,:,1),'YData',Mk(:,:,2),'ZData',Mk(:,:,3),'CData',uint8(0.*Mk + 50))</command>
<command execution_time="1059">help axis</command>
<command error="true" execution_time="36">axis vis32 fill equal</command>
<command execution_time="61">axis vis3d fill equal</command>
<command execution_time="40">camlight('headlight')</command>
<command execution_time="99">grid on</command>
<command execution_time="19">mouseOrientation = [0 1 0];%-90;</command>
<command execution_time="34">getRotMat(0)</command>
<command execution_time="32">getRotMat(90)</command>
<command execution_time="33">mouseOrientation</command>
<command execution_time="32">dpk</command>
<command execution_time="31">dtheta(kseg)</command>
<command execution_time="31">atan2d(dpk(2),dpk(1))</command>
<command execution_time="31">size(Xmouse)</command>
<command execution_time="21">Cmouse = uint8(255.* (.5 + .1.*randn([size(Xmouse),3])));</command>
<command execution_time="30">size(Cmouse)</command>
<command execution_time="32">F</command>
<command execution_time="29">F.dP{4}</command>
<command batch="202" error="true">idx=200:1000;</command>
<command batch="202" error="true" execution_time="2208">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="265">close all</command>
<command execution_time="1907">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="33">Pmouse</command>
<command execution_time="29">Vmouse</command>
<command execution_time="32">rotZmouse</command>
<command execution_time="32">dtheta(kframe)</command>
<command execution_time="31">Pmouse</command>
<command execution_time="32">F</command>
<command execution_time="31">Vmouse</command>
<command execution_time="29">round(Vmouse)</command>
<command execution_time="30">Etk</command>
<command execution_time="30">Vmouse</command>
<command execution_time="29" repeat="2">rotZmouse</command>
<command execution_time="34">acosd(rotZmouse)</command>
<command execution_time="30">cosd(rotZmouse)</command>
<command execution_time="28">sind(rotZmouse)</command>
<command execution_time="29">Vmouse</command>
<command execution_time="29">F.dP{3}</command>
<command execution_time="29">F</command>
<command execution_time="31">F.dPq{3}</command>
<command execution_time="28">atand([.1 0])</command>
<command error="true" execution_time="31">atan2d</command>
<command execution_time="29">atan2d(.1,0)</command>
<command execution_time="2192">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="56">rotZmouse</command>
<command execution_time="32">Vmouse</command>
<command execution_time="17">rotZmouse</command>
<command execution_time="38">uvRot</command>
<command execution_time="31">uvLin</command>
<command execution_time="18" repeat="2">Vmouse_prev</command>
<command execution_time="25">uvRot</command>
<command execution_time="30">uvLin</command>
<command execution_time="31">Vmouse</command>
<command execution_time="29">uvLin</command>
<command execution_time="29">uvRot</command>
<command execution_time="30">uvFuse</command>
<command execution_time="29">Vmouse</command>
<command execution_time="29">makeUnitVec(Vmouse)</command>
<command execution_time="29">makeUnitVec(uvFuse)</command>
<command execution_time="29">atan2d( uvFuse(2), uvFuse(1))</command>
<command execution_time="29">rotZmouse</command>
<command execution_time="29">uvFuse</command>
<command batch="203">uvRot = [cosd(rotZmouse+90) sind(rotZmouse+90)];</command>
<command batch="203">uvLin = .2*makeUnitVec(Vmouse(1:2)) + .1*makeUnitVec(Vmouse_prev(1:2));</command>
<command batch="203" execution_time="45">Vmouse_prev = Vmouse_prev*.6 + .2*Vmouse;</command>
<command execution_time="29">uvFuse = uvRot + uvLin</command>
<command execution_time="30">uvFuse = makeUnitVec( uvRot + uvLin)</command>
<command execution_time="29">atan2d( uvFuse(2), uvFuse(1))</command>
<command execution_time="30">rotZmouse</command>
<command execution_time="2118">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="57">uvFuse</command>
<command execution_time="32">rotZmouse</command>
<command execution_time="51">whos Mk</command>
<command execution_time="32">Mk(1)</command>
<command execution_time="2163">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="17">clc</command>
<command execution_time="2286">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="19">clc</command>
<command execution_time="2007">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command batch="204">set(findobj(h.ax.Children,'tag','mouse'),...</command>
<command batch="204">'Xdata',Mk{1},...</command>
<command batch="204">'YData',Mk{2},...</command>
<command batch="204">'ZData',Mk{3},...</command>
<command batch="204">'CData',Cmouse,....</command>
<command batch="204" execution_time="22">'AlphaData', ones(msize))</command>
<command execution_time="97">close</command>
<command execution_time="1910">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="60">uvLin</command>
<command execution_time="235">Vmouse</command>
<command execution_time="34">Vmouse_prev</command>
<command execution_time="34">F.dP{kframe}</command>
<command execution_time="33">Vmouse_prev</command>
<command execution_time="33">uvLin = makeUnitVec( 0.2*Vmouse(1:2) + 0.01*Vmouse_prev(1:2))</command>
<command execution_time="32">Vmouse_prev</command>
<command execution_time="34">uvRot</command>
<command execution_time="36">uvLin</command>
<command error="true" execution_time="54070">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="18">clc</command>
<command execution_time="14">idx = 1:4096;</command>
<command execution_time="490602">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="20">f</command>
<command execution_time="77">figure</command>
<command execution_time="319">imshow(f(100).cdata)</command>
<command execution_time="16">whos f</command>
<command error="true" execution_time="36">save('mouseFrames4096technicolor.mat',f,'-nocompression')</command>
<command error="true" execution_time="29">save('mouseFrames4096technicolor.mat','f','-nocompression')</command>
<command execution_time="75078">save('mouseFrames4096technicolor.mat','f','-v7.3','-nocompression')</command>
<command batch="205">clear</command>
<command batch="205">fclose all</command>
<command batch="205">clear all</command>
<command batch="205" execution_time="49375">close all</command>
<command execution_time="14">%[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="21">load movementdata.mat</command>
<command execution_time="2471">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="25">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="26">axrot.z = mean(m1m2(:,[1 3]),2);</command>
<command execution_time="16">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/2000);</command>
<command execution_time="23">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/1000);</command>
<command execution_time="15">dtheta(isnan(dtheta)) = 0;</command>
<command execution_time="15">whos</command>
<command execution_time="23">idx = 1:12280;</command>
<command execution_time="23">clc</command>
<command execution_time="1572922">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="22">f</command>
<command execution_time="20">f(1)</command>
<command execution_time="21">f</command>
<command execution_time="2102631">writeUncompressedAvi(cat(4,f.cdata))</command>
<command execution_time="21">xvals(1:10)</command>
<command execution_time="30">xvals(1:100)</command>
<command execution_time="32">xvals(1:100)'</command>
<command execution_time="34889">reader = VideoReader(uigetfile())</command>
<command execution_time="20">brainAVI = reader;</command>
<command execution_time="49">mouseAVI = VideoReader('mouseoverlay1.avi')</command>
<command error="true" execution_time="88">mouseFrame = mouseAVI.readFrame(1);</command>
<command execution_time="49">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="38">brainFrame = brainAVI.readFrame();</command>
<command execution_time="21">clc</command>
<command execution_time="66">close</command>
<command execution_time="252">imshow(brainFrame)</command>
<command execution_time="264">imshow(mouseFrame)</command>
<command batch="206" repeat="44">mouseFrame = mouseAVI.readFrame();</command>
<command batch="206">brainFrame = brainAVI.readFrame();</command>
<command batch="206" execution_time="257">imshow(brainFrame)</command>
<command error="true" execution_time="2627">v</command>
<command batch="207" repeat="18">mouseFrame = mouseAVI.readFrame();</command>
<command batch="207">brainFrame = brainAVI.readFrame();</command>
<command batch="207" execution_time="251">imshow(brainFrame)</command>
<command execution_time="43" repeat="8">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="96">imshow(mouseFrame)</command>
<command execution_time="43">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="97">imshow(mouseFrame)</command>
<command execution_time="48">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="97">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="99">imshow(mouseFrame)</command>
<command execution_time="43">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="95">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="97">imshow(mouseFrame)</command>
<command execution_time="43">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="97">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="98">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="95">imshow(mouseFrame)</command>
<command batch="208">mouseFrame = mouseAVI.readFrame();</command>
<command batch="208" execution_time="986">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="95">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="95">imshow(mouseFrame)</command>
<command execution_time="42">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="95">imshow(mouseFrame)</command>
<command execution_time="43">mouseFrame = mouseAVI.readFrame();</command>
<command execution_time="97">imshow(mouseFrame)</command>
<command execution_time="39">mouseFrame(1:10,1:10,:)</command>
<command execution_time="38">a = 0.8 * all(mouseFrame == 240, 3);</command>
<command execution_time="36">a = 0.8 * ~all(mouseFrame == 240, 3);</command>
<command execution_time="253">imshow(a)</command>
<command error="true" execution_time="36">im = a .* mouseFrame + (1-a) .* brainFrame;</command>
<command error="true" execution_time="43">im = bsxfun(@times, a, mouseFrame) + bsxfun(@times, (1-a), brainFrame);</command>
<command execution_time="58">im = uint8(bsxfun(@times, a, double(mouseFrame)) + bsxfun(@times, (1-a), double(brainFrame)));</command>
<command execution_time="95">imshow(im)</command>
<command execution_time="33">methods(mouseAVI)</command>
<command execution_time="735">help VideoReader</command>
<command execution_time="22">mouseAVI.CurrentTime = 0;</command>
<command execution_time="21">brainAVI.CurrentTime = 0;</command>
<command execution_time="228" repeat="9">imshow(brainAVI.readFrame())</command>
<command error="true" execution_time="13">mouseWriter = VideoWriter('direct overlay.avi', 'Uncompressed AVI','FrameRate',60);</command>
<command execution_time="37">brainAVI.CurrentTime = 0;</command>
<command execution_time="885">for k=1:8, imshow(brainAVI.readFrame()); end</command>
<command batch="209">mouseWriter = VideoWriter('direct overlay.avi', 'Uncompressed AVI');</command>
<command batch="209" execution_time="301">set(mouseWriter,'FrameRate',60);</command>
<command execution_time="31">1024-1080</command>
<command execution_time="38">rowStart = (1080-1024)/2</command>
<command execution_time="31">mouseColumnStart = (1920-1024)</command>
<command execution_time="25">blankFrame = @() zeros(outputFrameSize,'uint8');</command>
<command execution_time="34">brainIdx{:}</command>
<command execution_time="21">mouseAVI</command>
<command execution_time="233">overlayAVI = mouseWriter</command>
<command execution_time="29">mouseIdx</command>
<command execution_time="17">outputFrame = blankFrame();</command>
<command execution_time="32">size(outputFrame(brainIdx{:}))</command>
<command execution_time="29">size(outputFrame)</command>
<command execution_time="18">methods(overlayAVI)</command>
<command execution_time="294">help VideoWriter</command>
<command execution_time="21">open(overlayAVI);</command>
<command execution_time="18">k=0;</command>
<command execution_time="35">whos'</command>
<command execution_time="25">whos</command>
<command execution_time="48">hIm = imshow(outputFrame)</command>
<command execution_time="45">hIm = handle(imshow(outputFrame))</command>
<command execution_time="19">hIm.CData = outputFrame;</command>
<command execution_time="17">~exist('hIm')</command>
<command execution_time="18">exist('hIm','var')</command>
<command error="true" execution_time="28">close(mouseAVI)</command>
<command error="true" execution_time="249">imshow(f.cdata)</command>
<command execution_time="268">imshow(f(4).cdata)</command>
<command execution_time="238">whitebg</command>
<command execution_time="261">help whitebg</command>
<command execution_time="31">whitebg(gcf,'k')</command>
<command execution_time="28">whitebg(gcf,'g')</command>
<command execution_time="35">whitebg(gcf,'k')</command>
<command execution_time="258">f = getframe(gcf)</command>
<command execution_time="31">f.cdata(1:50,300,:)</command>
<command execution_time="33">whitebg(gcf,[0 0 0])</command>
<command execution_time="115">help whitebg</command>
<command execution_time="38">whitebg([0 0 0])</command>
<command execution_time="58">colordef black</command>
<command execution_time="30">get(groot,'Default')</command>
<command execution_time="20">set(groot,'defaultFigureColor', [0 0 0])</command>
<command execution_time="440">imshow(f.cdata)</command>
<command execution_time="28">which runScicadelicVidGen</command>
<command execution_time="110">pathtool</command>
<command execution_time="32">which imcomplement.m</command>
<command execution_time="35">pathtool</command>
<command execution_time="3831">clear</command>
<command execution_time="246">load movementdata.mat</command>
<command execution_time="30">xvals(1:10)</command>
<command execution_time="28">yvals(1:10)</command>
<command execution_time="28">nnz(isnan(xvals))</command>
<command execution_time="253">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="18">m1m2 = squeeze(md.data(1,:,:))';</command>
<command error="true" execution_time="819">nnz(isnan(dtheta))</command>
<command execution_time="17">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/1000);</command>
<command execution_time="33">nnz(isnan(dtheta))</command>
<command execution_time="15">dtheta(isnan(dtheta)) = 0;</command>
<command execution_time="27">2048*4</command>
<command batch="210">xvals = xvals(1:8192)';</command>
<command batch="210">yvals = yvals(1:8192)';</command>
<command batch="210" execution_time="38">dtheta = dtheta(1:8192)';</command>
<command execution_time="17">idx = 1:8192;</command>
<command execution_time="4371">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="30">h</command>
<command execution_time="35">h.ax</command>
<command execution_time="29">h.ax.Visible = 'off'</command>
<command execution_time="28">h.ax.Visible = 'on'</command>
<command execution_time="36">h.ax.Visible = 'off'</command>
<command execution_time="35">h.light</command>
<command execution_time="28">h.light.Visible = 'off'</command>
<command execution_time="31">h.light.Visible = 'on'</command>
<command execution_time="35">h.fig</command>
<command execution_time="30">h.fig.Color = [0 0 0]</command>
<command execution_time="30">h.ax.Color = [0 0 0]</command>
<command execution_time="36">h.road</command>
<command execution_time="52">set(h.road)</command>
<command execution_time="19">set(h.road,'BackFaceLighting','unlit')</command>
<command execution_time="20">set(h.road,'BackFaceLighting','lit')</command>
<command execution_time="34">h.road</command>
<command execution_time="33">h.ax</command>
<command execution_time="29" repeat="2">h.fig</command>
<command execution_time="34">h.fig.Children</command>
<command execution_time="29">h.fig.Children.ColorOrder</command>
<command execution_time="34">h.ax.Children</command>
<command execution_time="38">h.ax.Children(1)</command>
<command execution_time="35">h.ax.Children(2)</command>
<command execution_time="36">h.ax.Children(3)</command>
<command execution_time="35">h.ax.Children(4)</command>
<command execution_time="30">h.ax.Children(4).Visible = 'off'</command>
<command execution_time="458">f(kframe) = getframe(h.fig);</command>
<command execution_time="34">h.ax.Children(4).Children</command>
<command execution_time="2759">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="37">hfig.Children</command>
<command execution_time="29">hfig.Children.Color</command>
<command execution_time="28">hfig.Children.Visible</command>
<command execution_time="29">hax.Children.Visible</command>
<command execution_time="37">hax.Children</command>
<command execution_time="36">hax.Visible = 'off'</command>
<command execution_time="34">hax.Children</command>
<command execution_time="36">hax.Children(1)</command>
<command execution_time="38">hax.Children(2)</command>
<command execution_time="36">hax.Children(3)</command>
<command execution_time="35">h.ax</command>
<command execution_time="34">h.ax.Children</command>
<command execution_time="34">h.ax</command>
<command execution_time="33">h.ax.Children</command>
<command execution_time="34">h.ax.Children(1)</command>
<command execution_time="28">h.ax.Children(1).Visible = 'off'</command>
<command execution_time="28">h.ax.Children(1).Visible = 'on'</command>
<command execution_time="35">h.ax.Children(2).Visible = 'on'</command>
<command execution_time="28">h.ax.Children(2).Visible = 'off'</command>
<command execution_time="32">h.ax.Children(2).Visible = 'on'</command>
<command execution_time="34">h.ax.Children(3).Visible = 'on'</command>
<command execution_time="28">h.ax.Children(3).Visible = 'off'</command>
<command execution_time="32">h.ax.Children(3).Visible = 'on'</command>
<command execution_time="28">f(1)</command>
<command execution_time="30">f(1).cdata(1:10,1000,:)</command>
<command execution_time="113">dbquit</command>
<command error="true" execution_time="240">h.fig</command>
<command execution_time="4527">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="35">h.fig</command>
<command execution_time="32">h.fig.Color = [0 0 0]</command>
<command execution_time="30">md</command>
<command execution_time="32">md.info</command>
<command execution_time="30">md.info.Time(1:100)</command>
<command execution_time="29">diff(md.info.Time(1:100))</command>
<command execution_time="30">1./diff(md.info.Time(1:100))</command>
<command execution_time="29">mean(1./diff(md.info.Time(1:100)))</command>
<command execution_time="26">f(1)</command>
<command execution_time="362">imshow(f(1).cdata)</command>
<command execution_time="417">help imshow</command>
<command execution_time="283">imshow(f(1).cdata, 'InitialMagnification','fit')</command>
<command execution_time="18426">makeOverlayCompositeVideo</command>
<command execution_time="32">a = 0.8 * ~all(mouseFrame == 0, 3);</command>
<command execution_time="16">outputFrame = blankFrame();</command>
<command batch="211">outputFrame(brainIdx{:}) = outputFrame(brainIdx{:}) + brainFrame;</command>
<command batch="211" execution_time="82">outputFrame(mouseIdx{:}) = uint8(bsxfun(@times, a, double(mouseFrame)) + bsxfun(@times, (1-a), double(outputFrame(mouseIdx{:}))));</command>
<command execution_time="24">~exist('hIm','var')</command>
<command execution_time="16">hIm.CData = outputFrame;</command>
</session>
<session>
<command time_stamp="15d568be642">%-- 7/18/2017 12:33 PM --%</command>
<command execution_time="23">load movementdata.mat</command>
<command execution_time="78">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="32">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="59">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/1000);</command>
<command execution_time="19">dtheta(isnan(dtheta)) = 0;</command>
<command execution_time="19">idx = 1:8192;</command>
<command execution_time="7570">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="46">h.light</command>
<command execution_time="20">Pcam</command>
<command execution_time="1001">help drawnow</command>
<command execution_time="29">light</command>
<command execution_time="49">get(gca)</command>
<command execution_time="32">hax = gca</command>
<command execution_time="24">hax.Children</command>
<command execution_time="24">hax.Children(1)</command>
<command execution_time="466">help light</command>
<command execution_time="22">lighting none</command>
<command execution_time="23">lighting flat</command>
<command execution_time="23">lighting phong</command>
<command execution_time="25">lighting gouraud</command>
<command execution_time="22">hax.Children(2)</command>
<command execution_time="24">hax.Children(2).Visible = 'off'</command>
<command execution_time="21">hax.Children</command>
<command execution_time="483">hax.Children(1)</command>
<command execution_time="23">clc</command>
<command execution_time="4621">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="26">Pmouse</command>
<command execution_time="27">h.light</command>
<command execution_time="132" repeat="8">h.light.Position = Pmouse + [0 0 1]</command>
<command execution_time="24">h.light.Position = Pmouse + [0 0 5]</command>
<command execution_time="26">h.light.Position = Pmouse + [0 0 10]</command>
<command execution_time="23">h.light.Position = Pmouse + [0 0 1]</command>
<command execution_time="27">h.light.Position = Pmouse + [0 0 2]</command>
<command execution_time="24">h.light.Position = Pmouse + [0 0 3]</command>
<command execution_time="23">h.light.Position = Pmouse + [0 0 4]</command>
<command execution_time="23">h.light.Position = Pmouse + [0 0 5]</command>
<command execution_time="693241">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="22">whos</command>
<command execution_time="55">overlayAVI</command>
<command execution_time="1645">close(overlayAVI)</command>
<command execution_time="22">h</command>
<command execution_time="22">h.gdata</command>
<command execution_time="23">h.gdata.S</command>
<command execution_time="97">hax = gca</command>
<command execution_time="22">h.setRoadData(hax,100)</command>
<command error="true" execution_time="305">h.setRoadData([],100)</command>
<command execution_time="16">idx = 1:8192;</command>
<command execution_time="558423" repeat="3">[h,f] = showMouseMovement(xvals(idx),yvals(idx),-dtheta(idx));</command>
<command execution_time="9326">makeOverlayCompositeVideo</command>
<command execution_time="71">hIm = handle(imshow(outputFrame, 'InitialMagnification','fit'));</command>
<command execution_time="20" repeat="7">hIm.CData = outputFrame;</command>
<command execution_time="27">close(overlayAVI)</command>
<command execution_time="100">plot(cumsum(dtheta))</command>
<command execution_time="27">plot(cumsum(dtheta)./360)</command>
<command execution_time="28">plot(md.info.Time(idx), cumsum(dtheta)./360)</command>
<command execution_time="27">plot(md.info.Time(idx)-md.info.Time(idx(1)), cumsum(dtheta)./360)</command>
<command execution_time="27">x = xvals;</command>
<command execution_time="27">y = yvals;</command>
<command execution_time="86">x</command>
<command execution_time="29">x = xvals(:);</command>
<command execution_time="29">y = yvals(:);</command>
<command execution_time="29">x(1)</command>
<command execution_time="29">uvLin = atan2d(yvals,xvals);</command>
<command execution_time="101">plot(uvLin)</command>
<command execution_time="31">uvLin = atan2d(gradient(yvals),gradient(xvals));</command>
<command execution_time="269">plot(uvLin)</command>
<command execution_time="389">help unwrap</command>
<command execution_time="56">plot(unwrap(uvLin))</command>
<command execution_time="29">plot(unwrap(uvLin*(pi/180)))</command>
<command execution_time="28">plot(unwrap(uvLin*(pi/180))./(2*pi))</command>
<command execution_time="28">t = md.info.Time(idx)-md.info.Time(idx(1));</command>
<command execution_time="29">plot(t, unwrap(uvLin*(pi/180))./(2*pi))</command>
<command execution_time="28">hold on</command>
<command execution_time="36">plot(t, cumsum(dtheta)/360)</command>
<command execution_time="28">dx = gradient(x);</command>
<command execution_time="29">dy = gradient(y);</command>
<command execution_time="28">plot(t, sqrt(dx.^2 + dy.^2))</command>
<command execution_time="21">maxVelocity = mean( sqrt(diff(x).^2 + diff(y).^2))</command>
<command execution_time="29">maxVelocity = max( sqrt(diff(x).^2 + diff(y).^2))</command>
<command execution_time="28">maxVelocity = max( sqrt(diff(x).^2 + diff(y).^2));</command>
<command execution_time="361">md.info.Dt</command>
<command execution_time="28">md.info.Dt(1:10)</command>
<command execution_time="29">md.info</command>
<command execution_time="28">md.info.Time(1:10)</command>
<command execution_time="27">md.info.Time(end-10:end)</command>
<command execution_time="28">md.info.Time(end-10:end)-md.info.Time(1)</command>
<command error="true" execution_time="2175">md.info.Time(FrameNumber(1:10))</command>
<command execution_time="29">md.info</command>
<command execution_time="28">md.info.FrameNumber(1:10)</command>
<command execution_time="28">md.info.Dt(1:10)</command>
<command execution_time="30">md.info.Xpos(1:10)</command>
<command execution_time="28">md.info.ViewAngle(1:10)</command>
<command execution_time="23">md.info.ForwardVelocity(1:10)</command>
<command execution_time="21">md.info.RotationalVelocity(1:10)</command>
<command execution_time="21">md.info.RotationalVelocity(1:20)'</command>
<command execution_time="28">md.info.RotationalVelocity(1:60)'</command>
<command execution_time="22">md.info</command>
<command execution_time="23">md.info.Time(1:20)'</command>
<command execution_time="21">md.info.Time(1:20)-md.info.Time(1)</command>
<command execution_time="21">gradient(md.info.Time(1:20)-md.info.Time(1))</command>
<command execution_time="22">gradient(0:1:10)</command>
<command execution_time="23">md.info.Dt(1:20)</command>
<command execution_time="22">[ gradient(md.info.Time(1:20)-md.info.Time(1)) , md.info.Dt(1:20)]</command>
<command execution_time="88">load movementdata.mat</command>
<command execution_time="383">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="29">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="20">dtheta = mean(m1m2(:,[1 3]),2) ./ md.info.Dt .* (1/1000);</command>
<command execution_time="17">dtheta(isnan(dtheta)) = 0;</command>
<command execution_time="17">idx = 2 + (1:8192);</command>
<command batch="212">idx = 2 + (1:8192);</command>
<command batch="212">x = xvals(idx);</command>
<command batch="212">y = yvals(idx);</command>
<command batch="212">dtheta = mean(m1m2(idx, [1 3]),2) .* .001;</command>
<command batch="212" execution_time="61">dt = md.info.Dt(idx);</command>
<command execution_time="94">plot(dtheta)</command>
<command execution_time="101">plot(dt)</command>
<command execution_time="29">plot(x())</command>
<command batch="213">x = x(:);</command>
<command batch="213" execution_time="33">y = y(:);</command>
<command batch="214">dt = dt(:);</command>
<command batch="214" execution_time="28">t = cumsum(dt) - dt(1);</command>
<command batch="215">dx = gradient(x(:));</command>
<command batch="215" execution_time="35">dy = gradient(y(:));</command>
<command batch="216">dxdt = dx./dt;</command>
<command batch="216" execution_time="29">dydt = dy./dt;</command>
<command execution_time="94">plot(dxdt)</command>
<command execution_time="23">min(dt)</command>
<command execution_time="18">dtheta = dtheta(:);</command>
<command batch="217">dx = gradient(x(:));</command>
<command batch="217">dy = gradient(y(:));</command>
<command batch="217">dx_dt = dx./dt;</command>
<command batch="217">dy_dt = dy./dt;</command>
<command batch="217">dtheta_dt = dtheta./dt;</command>
<command batch="217" execution_time="71">N = length(x);</command>
<command execution_time="95">plot(dtheta_dt)</command>
<command execution_time="24">plot(cumsum(dtheta_dt))</command>
<command execution_time="26">plot(cumsum(dtheta_dt)./360)</command>
<command execution_time="98">plot(dx_dt)</command>
<command execution_time="22">md.info</command>
<command execution_time="43">clearvars dx_dt dy_dt dtheta_dt</command>
<command batch="218">dxdt = dx./dt;</command>
<command batch="218">dydt = dy./dt;</command>
<command batch="218">dthetadt = dtheta./dt;</command>
<command batch="218">N = length(x);</command>
<command batch="218" execution_time="61">speed = sqrt(dxdt.^2 + dydt.^2);</command>
<command execution_time="96">plot(speed)</command>
<command execution_time="24">max(speed)</command>
<command execution_time="62">prctile(speed,[90:99])</command>
<command execution_time="23">normalizedSpeed = min(1, speed./prctile(speed,99));</command>
<command execution_time="407" repeat="2">plot(normalizedSpeed)</command>
<command execution_time="22">hold on</command>
<command execution_time="29">plot(dthetadt./360)</command>
<command execution_time="27">prctile(speed,99)</command>
<command execution_time="27">plot(dxdt./prctile(speed,99))</command>
<command execution_time="27">plot(dydt./prctile(speed,99))</command>
<command execution_time="28">Vxy = [0 0];</command>
<command execution_time="23">Vxy = zeros(numel(idx),2);</command>
<command execution_time="23">Vxy(1,:) = [dx(1) dy(1)];</command>
<command execution_time="22">Vxy(1,:) = [dxdt(1) dydt(1)];</command>
<command execution_time="23">clc</command>
<command execution_time="24">Vxy = zeros(numel(idx),2); vxy=[0 0]; for k=1:numel(idx), alpha = normalizedSpeed(k); vxy = alpha*[dxdt(k) dydt(k)] + (1-alpha)*vxy; Vxy(k,:) = vxy; end</command>
<command execution_time="90">plot(Vxy)</command>
<command execution_time="90">plot(cumsum(Vxy,1))</command>
<command execution_time="378">plot(Vxy)</command>
<command execution_time="90">plot(atan2d(Vxy(:,2),Vxy(:,1)))</command>
<command execution_time="39">plot(unwrap(atan2(Vxy(:,2),Vxy(:,1)))./(2*pi))</command>
<command execution_time="17">hold on</command>
</session>
<session>
<command time_stamp="15d58dbb46b">%-- 7/18/2017 11:19 PM --%</command>
<command execution_time="30">load movementdata.mat</command>
<command execution_time="68">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="23">md.info</command>
<command execution_time="30">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="20">idx = (1:8192);</command>
<command execution_time="15">x = xvals(idx);</command>
<command execution_time="17">y = yvals(idx);</command>
<command execution_time="42">dtheta = mean(m1m2(idx, [1 3]),2) .* .001;</command>
<command execution_time="20">x(1:10)</command>
<command execution_time="17">idx = 2 + (1:8192);</command>
<command execution_time="15">x = xvals(idx);</command>
<command execution_time="17">y = yvals(idx);</command>
<command execution_time="15">dtheta = mean(m1m2(idx, [1 3]),2) .* .001;</command>
<command execution_time="14">dt = md.info.Dt(idx);</command>
<command execution_time="50">x(1:10)</command>
<command execution_time="63">gradient(x(1:10))</command>
<command execution_time="28">diff(x(1:10))</command>
<command error="true" execution_time="68">[gradient(x(1:10)), diff(x(1:10))]</command>
<command error="true" execution_time="29">[gradient(x(1:10)), 0 ; diff(x(1:10))]</command>
<command execution_time="32">[gradient(x(1:10)), [0 ; diff(x(1:10))]]</command>
<command error="true" execution_time="35">plot([gradient(x)), [0 ; diff(x))]])</command>
<command error="true" execution_time="25">plot([gradient(x)), [0 ; diff(x)]])</command>
<command execution_time="505">plot([gradient(x), [0 ; diff(x)]])</command>
<command execution_time="36">md.info.Dt(1:10)</command>
<command execution_time="24">idx = 1 + (1:8192);</command>
<command execution_time="20">x = xvals(idx);</command>
<command execution_time="22">y = yvals(idx);</command>
<command execution_time="25">dtheta = mean(m1m2(idx, [1 3]),2) .* .001;</command>
<command execution_time="31">dt = md.info.Dt(idx);</command>
<command batch="219" error="true">dt(1:10</command>
<command batch="219" error="true" execution_time="37">)</command>
<command execution_time="30">dt(1:10)</command>
<command execution_time="33">clc</command>
<command execution_time="20">x(1:10)</command>
<command execution_time="18">y(1:10)</command>
<command execution_time="15">y(1:100)</command>
<command execution_time="27">clc</command>
<command execution_time="50">y(1:10)</command>
<command execution_time="23">dtheta(1:10)</command>
<command execution_time="17">idx = 2 + (1:8192);</command>
<command execution_time="18">x = xvals(idx);</command>
<command execution_time="15">y = yvals(idx);</command>
<command execution_time="20">dtheta = mean(m1m2(idx, [1 3]),2) .* .001;</command>
<command execution_time="20">dt = md.info.Dt(idx);</command>
<command execution_time="19">dtheta(1:10)</command>
<command execution_time="15">y(1:10)</command>
<command execution_time="18">N = numel(idx);</command>
<command execution_time="779">help zrot</command>
<command execution_time="646">help rotz</command>
<command execution_time="31">z = dx + i*dy;</command>
<command execution_time="101">plot(z)</command>
<command execution_time="41">plot(z(1:10))</command>
<command execution_time="347">help polar</command>
<command execution_time="294">polarplot(z(1:20))</command>
<command execution_time="47">polarplot(z(1:40))</command>
<command execution_time="31">polarplot(z(1:60))</command>
<command execution_time="21">angle(z(2:11)-z(1:10))</command>
<command execution_time="19">z(2:11)-z(1:10)</command>
<command execution_time="19">z(1:10)</command>
<command execution_time="251">help angle</command>
<command batch="220">% dy = diff([y(1) ; y(:)]);</command>
<command batch="220" execution_time="19">% dx = diff([x(1) ; x(:)]);</command>
<command batch="221">dy = diff([y(1) ; y(:)]);</command>
<command batch="221">dx = diff([x(1) ; x(:)]);</command>
<command batch="221" execution_time="31">dz = dx + i*dy;</command>
<command execution_time="41">polarplot(z(1:60))</command>
<command execution_time="45">polarplot(dz(1:60))</command>
<command execution_time="26">polarplot(dz(1:30))</command>
<command execution_time="23">polarplot(dz(1:3))</command>
<command execution_time="32">polarplot(dz(1:3),'.')</command>
<command execution_time="24">polarplot(dz(1:5),'.')</command>
<command execution_time="23">polarplot(dz(1:100),'.')</command>
<command error="true" execution_time="216">angle(0+o*i)</command>
<command execution_time="19">angle(0+0*i)</command>
<command execution_time="26">dz(1:10)</command>
<command execution_time="19">z = dx + i*dy;</command>
<command execution_time="20">dz = diff([z ; z(end)]);</command>
<command execution_time="20">angle(dz(1:10))</command>
<command execution_time="49">unwrap(angle(dz(1:10)))</command>
<command execution_time="23">polarplot(dz(1:20))</command>
<command execution_time="29">polarplot(dz(1:20),'.')</command>
<command execution_time="25">polarplot(dz(1:50),'.')</command>
<command execution_time="30">plot([180/pi*angle(dz) , dtheta])</command>
<command execution_time="32">plot([angle(dz) , dtheta])</command>
<command execution_time="20">z(1:10)</command>
<command execution_time="34">plot([angle(dz) , dtheta])</command>
<command execution_time="19">dtheta(1:10)</command>
<command error="true" execution_time="17">plot(smooth([angle(dz)) , dtheta])</command>
<command execution_time="197">plot([smooth(angle(dz)) , dtheta])</command>
<command execution_time="20">dthetaz = diff(angle([z ; z(end)]));</command>
<command execution_time="33" repeat="2">plot(dthetaz)</command>
<command execution_time="20">dthetaz = diff(unwrap(angle([z ; z(end)])));</command>
<command execution_time="33">plot(dthetaz)</command>
<command execution_time="20">plot(angle(dz))</command>
<command execution_time="20">plot(cumsum(angle(dz)))</command>
<command execution_time="15">dz = dx + i*dy;</command>
<command execution_time="33">plot(cumsum(angle(dz)))</command>
<command execution_time="33">dz = diff([z ; z(end)]);</command>
<command execution_time="37">plot(cumsum(angle(dz)))</command>
<command execution_time="21">plot(cumsum(dtheta))</command>
<command execution_time="20">plot(cumsum(-dtheta))</command>
<command execution_time="43">hold on</command>
<command execution_time="20">plot(cumsum(unwrap(angle(dz))))</command>
<command execution_time="22">cla</command>
<command execution_time="33">plot(cumsum(-dtheta))</command>
<command execution_time="19">plot(cumsum(angle(z)))</command>
<command execution_time="210">z</command>
<command execution_time="17">plot(cumsum(angle(diff(z))))</command>
<command error="true" execution_time="15">plot(cumsum(diff(angle(z)))</command>
<command execution_time="18">plot(cumsum(diff(angle(z))))</command>
<command execution_time="82">angle(z)</command>
<command execution_time="26">clearvars dthetaz dz z xvals yvals</command>
<command execution_time="13">dz = dx + i*dy;</command>
<command execution_time="18">cla</command>
<command execution_time="18">dz(1:100)</command>
<command error="true" execution_time="35">polarplot(dz)</command>
<command execution_time="58">clf</command>
<command execution_time="37">polarplot(dz)</command>
<command execution_time="17">dz(1:10)</command>
<command execution_time="19">angle(dz(1))</command>
<command execution_time="17">angle(dz(2))</command>
<command execution_time="14" repeat="2">dxy = dx + i*dy;</command>
<command error="true" execution_time="14">dzk = 0 i*0</command>
<command execution_time="17">dzk = 0 + i*0</command>
<command execution_time="7926">for k = 1:N, dzk = .9*dzk + .1*dxy(k); theta(k) = angle(dzk); polarplot(dzk); drawnow nocallbacks, end</command>
<command execution_time="31">dzk = 0 + i*0</command>
<command execution_time="274295">for k = 1:N, dzk = .9*dzk + .1*dxy(k); theta(k) = angle(dzk); polarplot(dzk,'.'); drawnow nocallbacks, end</command>
<command execution_time="17">hold off</command>
<command execution_time="24">plot(theta)</command>
<command execution_time="27">plot(gradient(unwrap(theta)))</command>
<command execution_time="18">hold on</command>
<command execution_time="17">plot( gradient(abs(dz)))</command>
<command execution_time="21">for k = 1:N, dzkm1=dzk; dzk = .9*dzk + .1*dxy(k); dthetak = angle(dzk-dzkm1); dz(k)=dzk; end</command>
<command execution_time="26">plot(angle(gradient(dz)))</command>
<command execution_time="32">dzk = 0 + i*0</command>
<command execution_time="20">for k = 1:N, dzkm1=dzk; dzk = .9*dzk + .1*dxy(k); ddz(k) = dzk-dzkm1; dz(k)=dzk; end</command>
<command error="true" execution_time="30">polarplot(ddz)</command>
<command execution_time="17">hold off</command>
<command execution_time="41">polarplot(ddz)</command>
<command execution_time="29">polarplot(ddz(30:300))</command>
</session>
<session>
<command time_stamp="15d5ace6015">%-- 7/19/2017 8:24 AM --%</command>
<command execution_time="194">savepath</command>
<command error="true" execution_time="2004">getAudioDevices</command>
<command execution_time="1585">a = arduino</command>
<command execution_time="7098">help propinfo</command>
</session>
<session>
<command time_stamp="15d5b67379a">%-- 7/19/2017 11:11 AM --%</command>
<command execution_time="9780">avi = VideoReader(uigetfile('*.avi'))</command>
<command execution_time="19">60*137</command>
<command execution_time="20">1024*8</command>
<command execution_time="25">F = zeros(1024,1024,3,8192,'uint8');</command>
<command execution_time="163907">k=0; while(avi.hasFrame()), k=k+1; F(:,:,:,k) = avi.readFrame(); end</command>
<command execution_time="3944">imrgbplay(F)</command>
<command execution_time="3092">a = arduino()</command>
<command execution_time="29">load movementdata.mat</command>
<command execution_time="77">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="24">m1m2 = squeeze(md.data(1,:,:))';</command>
<command execution_time="21">idx = 2 + (1:8192);</command>
<command execution_time="23">idx = (1:8192);</command>
<command execution_time="25">x = xvals(idx);</command>
<command execution_time="20">y = yvals(idx);</command>
<command execution_time="22">dt = md.info.Dt(idx);</command>
<command execution_time="22">dy = diff([y(1) ; y(:)]);</command>
<command execution_time="17">dx = diff([x(1) ; x(:)]);</command>
<command execution_time="41">dxy = dx + i*dy;</command>
<command execution_time="28">%writePWMDutyCycle(a,</command>
<command execution_time="90">figure</command>
<command execution_time="27">dzk = 0 + i*0</command>
<command error="true" execution_time="200">for k = 1:N, dzk = .9*dzk + .1*dxy(k); theta(k) = angle(dzk); polarplot(dzk,'.'); drawnow nocallbacks, end</command>
<command execution_time="58">N = numel(idx);</command>
<command error="true" execution_time="17744">for k = 1:N, dzk = .9*dzk + .1*dxy(k); theta(k) = angle(dzk); polarplot(dzk,'.'); drawnow nocallbacks, end</command>
<command execution_time="33">hax = gca</command>
<command execution_time="33">hax.Children</command>
<command execution_time="30">dot= polarplot(dzk,'.');</command>
<command execution_time="32">dot</command>
<command error="true" execution_time="63">dot.Marker = 500</command>
<command execution_time="31">dot.Marker = 'o'</command>
<command error="true" execution_time="55">dot.MarkFaceColor = 'r'</command>
<command execution_time="30">dot.MarkerFaceColor = 'r'</command>
<command error="true" execution_time="30">dot.Marker = 50</command>
<command execution_time="30">dot.MarkerSize = 50</command>
<command execution_time="31">dot.Color = [dot.Color .6]</command>
<command execution_time="25">dot.MarkerSize = 25</command>
<command error="true" execution_time="52">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(2:end)]; theta(k) = angle(dzk); dot.ZData = dztrail; drawnow nocallbacks, end</command>
<command execution_time="6551">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(2:end)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, end</command>
<command error="true" execution_time="30">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.ZData = dztrail; drawnow nocallbacks, end</command>
<command execution_time="14279">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, end</command>
<command execution_time="30">dot</command>
<command execution_time="78">struct(dot)</command>
<command execution_time="30565">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, end</command>
<command error="true" execution_time="27">dot.</command>
<command execution_time="25">dot</command>
<command execution_time="30">dot.Parent</command>
<command execution_time="28">dot.Parent.RLim = [0 10]</command>
<command execution_time="50824">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, end</command>
<command execution_time="32">dot.Parent.RLim = [0 3]</command>
<command execution_time="383023">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, end</command>
<command batch="222">dot= polarplot(dzk,'.');</command>
<command batch="222">dot.Marker = 'o'</command>
<command batch="222">dot.MarkerFaceColor = 'r'</command>
<command batch="222">dot.MarkerSize = 25</command>
<command batch="222">dot.Parent.RLim = [0 3]</command>
<command batch="222" execution_time="6782">dztrail = zeros(10,1); for k = 1:N, dzk = .9*dzk + .1*dxy(k); dztrail = [dzk ; dztrail(1:end-1)]; theta(k) = angle(dzk); dot.RData = abs(dztrail);dot.ThetaData = angle(dztrail); drawnow nocallbacks, endclc</command>
<command execution_time="30">clc</command>
<command error="true" execution_time="50">writePWMDutyCycle(a,7,.2)</command>
<command error="true" execution_time="69">writePWMDutyCycle(a,'D7',.2)</command>
<command execution_time="91">writePWMDutyCycle(a,'D6',.2)</command>
<command execution_time="55">writePWMDutyCycle(a,'D6',0)</command>
<command execution_time="67">writePWMDutyCycle(a,'D6',.1)</command>
<command execution_time="53">writePWMDutyCycle(a,'D6',.2)</command>
<command execution_time="54">writePWMDutyCycle(a,'D6',.3)</command>
<command execution_time="45">writePWMDutyCycle(a,'D6',.5)</command>
<command execution_time="52">writePWMDutyCycle(a,'D6',.2)</command>
<command execution_time="43">writePWMDutyCycle(a,'D6',0)</command>
<command execution_time="41">playTone(a,'D6',1200,.5)</command>
<command execution_time="37">playTone(a,'D6',1200,0)</command>
<command execution_time="42">playTone(a,'D6',1200,.1)</command>
<command execution_time="36">playTone(a,'D6',1000,.1)</command>
<command execution_time="40">logspace(20,20000,50)</command>
<command execution_time="32">logspace(10,50)</command>
<command execution_time="50">freq = 10*2.^linspace(1,10,50)</command>
<command execution_time="35">int32(freq)</command>
<command execution_time="708">for tfreq = freq, playTone(a,'D6',tfreq,.1), end</command>
<command execution_time="671">for tfreq = freq, playTone(a,'D6',tfreq,.2), end</command>
<command execution_time="651">for tfreq = freq, playTone(a,'D6',tfreq,.5), end</command>
<command execution_time="653">for tfreq = freq, playTone(a,'D6',tfreq,1), end</command>
<command execution_time="33">a.AvailablePins</command>
<command execution_time="34">a.Board</command>
<command execution_time="32">a.Libraries</command>
<command execution_time="35">clc</command>
<command execution_time="217">dev = spidev(a,'D4', 'Mode', 3, 'BitOrder', 'msbfirst', 'Bitrate', 2000000)</command>
<command batch="223" error="true">readMask = hex2dec('7f');</command>
<command batch="223" error="true">motRegAddr = hex2dec('02');</command>
<command batch="223" error="true">motRegOut = writeRead(dev,readMask &amp; motRegAddr)</command>
<command batch="223" error="true">for k=1:4,</command>
<command batch="223" error="true">deltaXYOut(k) = writeRead(dev, readMask &amp; (motRegAddr+1)),</command>
<command batch="223" error="true" execution_time="121">end</command>
<command execution_time="35">hex2dec('7f')</command>
<command execution_time="30">hex2dec('0f')</command>
<command execution_time="35">class(hex2dec('0f'))</command>
<command batch="224" repeat="3">readMask = uint8(hex2dec('7f'));</command>
<command batch="224">motRegAddr = uint8(hex2dec('02'));</command>
<command batch="224">motRegOut = writeRead(dev, bitand(readMask, motRegAddr))</command>
<command batch="224">for k=1:4,</command>
<command batch="224">deltaXYOut(k) = writeRead(dev, bitand(readMask, (motRegAddr+1))),</command>
<command batch="224" execution_time="215">end</command>
<command execution_time="39">dev</command>
<command execution_time="23">dev.Pins</command>
<command error="true" execution_time="40">dev.Pins{1} = 'D4'</command>
<command execution_time="30">methods(dev)</command>
<command execution_time="24">struct(dev)</command>
<command execution_time="49">sa = struct(a)</command>
<command execution_time="22">sa.ResourceManager</command>
<command execution_time="39">struct(sa.ResourceManager)</command>
<command error="true" execution_time="37">get(sa.ResourceManager)</command>
<command execution_time="67">sa.Connection</command>
<command execution_time="22">sa.Protocol</command>
<command execution_time="22">sa.Utility</command>
<command execution_time="38">ssc = struct(sa.Connection)</command>
<command error="true" execution_time="68">ssc.icinterface</command>
<command execution_time="41">ssc</command>
<command execution_time="46">ssc.jobject</command>
<command execution_time="38">ssc.jobject.get()</command>
<command execution_time="265">methodsview(ssc.jobject)</command>
<command execution_time="35">ssc.jobject.supportsAsynchronousOperations()</command>
<command error="true" execution_time="183">ssc.jobject.matlabEvent</command>
<command error="true" execution_time="168">ssc.jobject.matlabEvent()</command>
<command execution_time="23" repeat="4">ssc.jobject.currentNanoTicTime</command>
<command execution_time="36">t = ssc.jobject.currentNanoTicTime</command>
<command execution_time="41">ssc.jobject.currentNanoTicTime -t</command>
<command execution_time="25" repeat="17">t = ssc.jobject.currentNanoTicTime; ssc.jobject.currentNanoTicTime-t</command>
<command execution_time="494">clear</command>
<command execution_time="43">close all</command>
</session>
<session>
<command time_stamp="15d5d41f645">%-- 7/19/2017 7:49 PM --%</command>
<command execution_time="18330">[a,name] = midiid</command>
<command execution_time="167">mc = midicontrols()</command>
<command execution_time="179">cb = midicallback(mc, @(x) disp(midiread(x)))</command>
<command execution_time="30">methods(mc)</command>
<command error="true" execution_time="232">methodsview(md)</command>
<command execution_time="219">methodsview(mc)</command>
<command execution_time="30">events(mc)</command>
<command execution_time="22">?mc</command>
<command execution_time="30">metaclass(mc)</command>
<command execution_time="30">mmc = metaclass(mc)</command>
<command execution_time="20">mmc.MethodList.Name</command>
<command execution_time="596">help midicontrols\sync</command>
<command execution_time="90">help midicontrols/sync</command>
<command execution_time="633">help sync</command>
<command execution_time="20">which midicontrols\sync</command>
<command execution_time="20">which midicontrols/sync</command>
<command execution_time="30">which midicontrols.sync</command>
<command execution_time="20">which sync@midicontrols</command>
<command execution_time="23">which midicontrols\midimexif</command>
<command execution_time="20">which midicontrols</command>
<command execution_time="707">edit midicontrols</command>
<command execution_time="50" repeat="26">[vals, lastctl] = read(mc)</command>
<command execution_time="33">midicallback(mc, @(x) fprintf('%4.4f\n',midiread(x)))</command>
<command execution_time="20">clc</command>
<command execution_time="55" repeat="7">[vals, lastctl] = read(mc)</command>
<command execution_time="50" repeat="4">{read(mc)}</command>
<command execution_time="99">help midicontrols\read</command>
<command execution_time="20">clc</command>
<command execution_time="2097">[controlNumber,deviceName] = midiid</command>
<command execution_time="20">clc</command>
<command error="true" execution_time="8815">while true, [controlNumber,deviceName] = midiid; fprintf('%s:\t%d\n',deviceName,controlNumber);end</command>
<command execution_time="30">cb = midicallback(mc, @(~) [])</command>
<command execution_time="26">clc</command>
<command error="true" execution_time="82377">while true, [controlNumber,deviceName] = midiid; fprintf('%s:\t%d\n',deviceName,controlNumber);end</command>
<command error="true" execution_time="113">MIDIInterface</command>
<command execution_time="182">help MIDIInterface</command>
<command execution_time="231">hfig = figure</command>
<command execution_time="30">get(hfig)</command>
<command execution_time="309">help KeyReleaseFcn</command>
<command execution_time="21">fcn = @(src,evnt) disp(evnt)</command>
<command execution_time="17">hfig.KeyPressFcn = fcn;</command>
<command execution_time="20">hfig</command>
<command execution_time="14">hfig.ButtonDownFcn = fcn;</command>
<command execution_time="160">txt = text</command>
<command execution_time="20">set(gca,'Visible','off')</command>
<command execution_time="20">txt.String = 'idle'</command>
<command execution_time="19">txt.FontSize = 36</command>
<command execution_time="20">txt.Position = [.5 .5 0]</command>
<command execution_time="20">txt.Position = [.1 .5 0]</command>
<command execution_time="20">txt.Position = [0 .5 0]</command>
<command execution_time="20">hfig</command>
<command execution_time="20">fcn = @(src,evnt) set(txt, 'String',sprintf('EventName: %s',evnt.EventName))</command>
<command execution_time="19">hfig.ButtonDownFcn = fcn</command>
<command execution_time="20">hfig.KeyPressFcn = fcn</command>
<command execution_time="15">hfig</command>
<command execution_time="24">fcn = @(src,evnt) set(txt, 'String',sprintf('Event: %s\nCharacter: %s',evnt.EventName,src.CurrentCharacter))</command>
<command batch="225">hfig.ButtonDownFcn = fcn</command>
<command batch="225" execution_time="50">hfig.KeyPressFcn = fcn</command>
<command error="true" execution_time="341">fcn = @(src,evnt) disp(evnt))</command>
<command execution_time="20">fcn = @(src,evnt) disp(evnt)</command>
<command batch="226">hfig.ButtonDownFcn = fcn</command>
<command batch="226" execution_time="50">hfig.KeyPressFcn = fcn</command>
</session>
<session>
<command time_stamp="15d809508aa">%-- 7/26/2017 4:27 PM --%</command>
<command execution_time="1166">edit edit genbw.m</command>
<command execution_time="549">edit gen2par.m</command>
<command execution_time="572">edit genbitpack.m</command>
<command execution_time="690">edit geneentropyfilter.m</command>
<command execution_time="1334">edit generatemsgid.m</command>
<command error="true" execution_time="597">file2char file2char.m</command>
<command error="true" execution_time="303">file2char getMovement</command>
<command error="true" execution_time="528">edit matlab.internal.getOpenPort</command>
<command execution_time="3534">help matlab.internal.getOpenPort</command>
<command execution_time="43">matlab.internal.getOpenPort</command>
<command execution_time="18">matlab.internal.alias.isAliasOn</command>
<command execution_time="19">matlab.internal.alias.dispPackageAlias</command>
<command execution_time="19">matlab.internal.alias.dispClassAlias</command>
<command execution_time="436">help matlab.internal.datatypes.coloncat</command>
<command execution_time="302">help matlab.internal.datatypes.parseArgs</command>
<command execution_time="21">which matlab.internal.datatypes.parseArgs</command>
<command execution_time="22">clc</command>
<command execution_time="1183">edit scicadelicROIgeneration.m</command>
<command execution_time="47" repeat="2">pathtool</command>
<command execution_time="53753">gcp</command>
<command execution_time="23">1000/40</command>
<command batch="227">TL = scicadelic.TiffStackLoader;</command>
<command batch="227">TL.FramesPerStep = 8;</command>
<command batch="227">TL.FrameInfoOutputPort = true;</command>
<command batch="227" execution_time="144801">setup(TL)</command>
<command execution_time="25">outputFormat = 'bin'</command>
<command execution_time="16">writeRawFrgb = strncmpi(outputFormat,'binary',2);</command>
<command batch="228">dev = gpuDevice;</command>
<command batch="228">reset(dev);</command>
<command batch="228">parallel.gpu.rng(7301986,'Philox4x32-10');</command>
<command batch="228" execution_time="2631">pool = gcp;</command>
<command execution_time="20">numVideoFrames = TL.NumFrames;</command>
<command execution_time="24">numVideoFrames</command>
<command batch="229">% FILE NAME</command>
<command batch="229">try</command>
<command batch="229">videoFile = scicadelic.FileWrapper('FileName',TL.FileName, 'FileDirectory', TL.FileDirectory);</command>
<command batch="229">defaultDataSetName = videoFile.DataSetName;</command>
<command batch="229">catch</command>
<command batch="229">defaultDataSetName = TL.DataSetName;</command>
<command batch="229">end</command>
<command batch="229">if isempty(defaultDataSetName)</command>
<command batch="229">defaultDataSetName = 'defaultdatasetname';</command>
<command batch="229">end</command>
<command batch="229">defaultExportPath = [TL.FileDirectory, 'export'];</command>
<command batch="229">if ~isdir(defaultExportPath)</command>
<command batch="229">mkdir(defaultExportPath)</command>
<command batch="229">end</command>
<command batch="229">dateStamp = datestr(now,'(yyyymmmdd_HHMMPM)');</command>
<command batch="229" execution_time="371">videoFileNameRoot = [defaultExportPath,filesep, defaultDataSetName, dateStamp];</command>
<command batch="230">vidOutFPS = 24;</command>
<command batch="230">writeVidOut = true;</command>
<command batch="230">if strncmpi(outputFormat,'mp4', 2)</command>
<command batch="230">vidOutFileName = [videoFileNameRoot, '.mp4'];</command>
<command batch="230">vidOutProfile = 'MPEG-4';</command>
<command batch="230">vidOutSetting = {'Quality',98};</command>
<command batch="230">elseif strncmpi(outputFormat,'avi', 2)</command>
<command batch="230">vidOutFileName = [videoFileNameRoot, '.avi'];</command>
<command batch="230">vidOutProfile = 'Uncompressed AVI';</command>
<command batch="230">vidOutSetting = {};</command>
<command batch="230">else</command>
<command batch="230">writeVidOut = false;</command>
<command batch="230" execution_time="49">end</command>
<command execution_time="27">whos</command>
<command execution_time="37">~isempty(idx) &amp;&amp; (idx(end) &lt; stopIdx)</command>
<command execution_time="21">bt.loadtic = tic;</command>
<command batch="231">[frameData, frameInfo, frameIdx] = step(TL);</command>
<command batch="231">frameTime = frameInfo.t;</command>
<command batch="231" execution_time="601">allInfo{m} = frameInfo;</command>
<command batch="232">F = single(squeeze(gpuArray(frameData)));</command>
<command batch="232">idx = frameIdx;</command>
<command batch="232" execution_time="66">bt.loadtoc = toc(bt.loadtic);</command>
<command execution_time="51">pathtool</command>
<command execution_time="1342">gdstat = step(proc.tgsc, F, frameTime);</command>
<command execution_time="496">dstat = step(proc.sc, F);</command>
<command execution_time="20">bt.proctoc = toc(bt.proctic);</command>
<command execution_time="22">clc</command>
<command execution_time="2558">imrgbplay(fRGB)</command>
<command execution_time="25">idx</command>
<command execution_time="26">gmcRstat</command>
<command batch="233">fRGB = gather( cat(3, ...</command>
<command batch="233">uint8(reshape(fRed.*255, numRows, numCols, 1, numFrames)) ,...</command>
<command batch="233">uint8(reshape(fGreen.*255, numRows, numCols, 1, numFrames)) ,...</command>
<command batch="233" execution_time="80">uint8(reshape(fBlue.*255, numRows, numCols, 1, numFrames))) );</command>
<command execution_time="630">imrgbplay(fRGB)</command>
<command execution_time="24">fRGB = zeros(numRows,numCols,3,numFrames,'uint8');</command>
<command execution_time="1047">imscplay(F)</command>
<command execution_time="20130">pool = gcp</command>
<command execution_time="37">pp = struct('hw',[],'sys',[],'fcn',[])</command>
<command execution_time="38">pp.hw.dev = gpuDevice</command>
<command execution_time="22">pp = struct('env',[],'sys',[],'fcn',[]);</command>
<command execution_time="29">videoFile</command>
<command execution_time="35">defaultDataSetName</command>
<command execution_time="33">videoFile.DataSetName</command>
<command execution_time="36">videoFileNameRoot</command>
<command execution_time="34">proc</command>
<command execution_time="34">struct.empty()</command>
<command execution_time="34">motionInfo</command>
<command execution_time="37">motinf = struct.empty()</command>
<command error="true" execution_time="35">motinf(1) = motionInfo</command>
<command execution_time="34">motinf = []</command>
<command error="true" execution_time="44">motinf(1) = motionInfo</command>
<command execution_time="19125">gcp</command>
<command execution_time="72">reset(TL)</command>
<command error="true" execution_time="58">TL.FramesPerStep = 16</command>
<command execution_time="38">release(TL)</command>
<command execution_time="651">TL.FramesPerStep = 16</command>
<command execution_time="25">reset(TL)</command>
<command execution_time="25">try, fg = ball, catch me, end</command>
<command execution_time="24">me</command>
<command execution_time="49">which displayStruct</command>
<command execution_time="38">which showError</command>
<command execution_time="29">type showError</command>
<command execution_time="40">showError(me)</command>
<command execution_time="22">release(TL)</command>
<command execution_time="1261">clear all</command>
<command execution_time="18">clc</command>
<command error="true" execution_time="541">pp = getScicadelicProcessor()</command>
<command error="true" execution_time="492" repeat="2">pp = getScicadelicPreProcessor()</command>
<command execution_time="44">pathtool</command>
<command error="true" execution_time="26009">pp = getScicadelicPreProcessor()</command>
<command execution_time="15">dbstop if error</command>
<command error="true" execution_time="26824">pp = getScicadelicPreProcessor()</command>
<command execution_time="14">pp.env.defaultExportPath = [TL.FileDirectory, 'export'];</command>
<command execution_time="15">~isdir(pp.env.defaultExportPath)</command>
<command error="true" execution_time="350">pp</command>
<command execution_time="13">clc</command>
<command error="true" execution_time="16933">pp = getScicadelicPreProcessor()</command>
<command execution_time="16">pp.env.videoFileNameRoot = [pp.env.defaultExportPath,filesep, pp.env.defaultDataSetName, dateStamp];</command>
<command execution_time="44">type(which('scicadelic.TiffStackLoader'))</command>
<command execution_time="20">clc</command>
<command execution_time="24238">pp = getScicadelicPreProcessor()</command>
<command execution_time="23">pp.fcn</command>
<command execution_time="13475">[F,info] = pp.fcn.processchunk();</command>
<command execution_time="19">info</command>
<command execution_time="762">imscplay(F)</command>
<command execution_time="24758">gcp</command>
<command execution_time="16">whos</command>
<command execution_time="4516">questdlg('Release and delete all systems?')</command>
<command execution_time="21">pp.env</command>
<command execution_time="38">which oncpu</command>
<command execution_time="1067">help exists</command>
<command execution_time="346">help assignin</command>
<command execution_time="20">isPPinBaseWS = evalin('base','exist(''pp'',''var'')')</command>
<command execution_time="35">which next</command>
<command execution_time="19">whos</command>
<command execution_time="930">clear all</command>
<command execution_time="20">fclose('all')</command>
<command execution_time="48">close all</command>
<command execution_time="19">clc</command>
<command error="true" execution_time="13">fopen</command>
<command execution_time="11">fopen('all')</command>
<command execution_time="12">clc</command>
<command execution_time="53117">[nextFcn, pp] = getScicadelicPreProcessor()</command>
<command execution_time="24">pp.env</command>
<command error="true" execution_time="351">pp.dev</command>
<command execution_time="19">pp.env.dev</command>
<command execution_time="20">struct(pp.env.dev)</command>
<command execution_time="19">z = ans</command>
<command error="true" execution_time="19">get(pp.env.dev)</command>
<command execution_time="443">methodsview(pp.env.dev)</command>
<command execution_time="23">events(pp.env.dev)</command>
<command execution_time="20">clc</command>
<command execution_time="16699">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="15">whos</command>
<command execution_time="1493">imscplay(f)</command>
<command execution_time="841">imrgbplay(frgb)</command>
<command execution_time="23">info</command>
<command execution_time="21">info.idx</command>
<command execution_time="29">info.motion</command>
<command execution_time="20">info.timestamp</command>
<command execution_time="21">mstat</command>
<command execution_time="19">mstat.marginalintensity</command>
<command execution_time="822">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="813" repeat="2">imscplay( mstat.marginalintensity.M2)</command>
<command execution_time="786">imscplay( mstat.marginalintensity.M3)</command>
<command execution_time="20">clc</command>
<command execution_time="15">whos</command>
<command error="true" execution_time="774">imscplay( mstat.marginalintensitychange)</command>
<command execution_time="149">dbquit</command>
<command execution_time="1018">imscplay( mstat.marginalintensitychange.M1)</command>
<command execution_time="19">clc</command>
<command execution_time="16">whos</command>
<command execution_time="21">srgb</command>
<command execution_time="777">imscplay(srgb.marginalKurtosisOfIntensity)</command>
<command execution_time="96">srgbcpu = oncpu(srgb)</command>
<command execution_time="22">z</command>
<command execution_time="30">mstat</command>
<command execution_time="21">clc</command>
<command execution_time="16">whos</command>
<command execution_time="20">srgb</command>
<command execution_time="22">srgbcpu</command>
<command execution_time="16">Fbw{1} = f;</command>
<command execution_time="21">srgbcpu</command>
<command execution_time="22">mstat</command>
<command execution_time="91">Srgb(1) = oncpu(srgb);</command>
<command execution_time="22">info</command>
<command execution_time="23">T{1} = info.timestamp</command>
<command execution_time="18">clc</command>
<command execution_time="15">whos</command>
<command batch="234" repeat="3">k=1;</command>
<command batch="234">while k &lt; 40,</command>
<command batch="234">k = k+1;</command>
<command batch="234">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="234" execution_time="6205">Fbw{k} = f;</command>
<command batch="233">T{k} = info.timestamp;</command>
<command execution_time="17">clc</command>
<command batch="234">k=1;</command>
<command batch="234">while k &lt; 40,</command>
<command batch="234">k = k+1;</command>
<command batch="234">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="234">Fbw{k} = f;</command>
<command batch="234">T{k} = info.timestamp;</command>
<command batch="234">Srgb(k) = oncpu(srgb);</command>
<command batch="234">disp(k);</command>
<command batch="234" execution_time="37742">end</command>
<command execution_time="31">k</command>
<command execution_time="31">clc</command>
<command execution_time="25">whos</command>
<command execution_time="26">Fbw</command>
<command execution_time="1652">imscplay(cat(3,Fbw{:}))</command>
<command execution_time="27">k</command>
<command execution_time="25">clc</command>
<command batch="235">while k &lt; 300,</command>
<command batch="235">k = k+1;</command>
<command batch="235">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="235">Fbw{k} = f;</command>
<command batch="235">T{k} = info.timestamp;</command>
<command batch="235">Srgb(k) = oncpu(srgb);</command>
<command batch="235">disp(k);</command>
<command batch="235" execution_time="253695">end</command>
<command execution_time="8348">imscplay(cat(3,Fbw{:}))</command>
<command execution_time="361">colormap gray</command>
<command execution_time="32">whos</command>
<command execution_time="32">hImsc</command>
<command execution_time="35">hImsc.fig</command>
<command execution_time="30">size(hImsc.fig.Colormap)</command>
<command execution_time="28">scicMap = hImsc.fig.Colormap;</command>
<command execution_time="32">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="721">help log1p</command>
<command execution_time="4857">imscplay(log1p( cat(3,Fbw{1:100}) ) )</command>
<command execution_time="32">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="30">Srgb</command>
<command execution_time="31">Srgb(1)</command>
<command execution_time="29">Srgb(2)</command>
<command error="true" execution_time="33">imscplay(log1p( cat(3,Srgb(1:100).marginalKurtosisOfInensity) + .1 ) )</command>
<command execution_time="5195">imscplay(log1p( cat(3,Srgb(1:100).marginalKurtosisOfIntensity) + .1 ) )</command>
<command execution_time="32">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="6960">imscplay(cat(3,Fbw{:}))</command>
<command execution_time="35">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="5890">bw = cat(3,Fbw{:});</command>
<command execution_time="444">bwMin = min(bw,[],3);</command>
<command execution_time="472">bwMean = mean(bw,3);</command>
<command execution_time="1041">help pctile</command>
<command execution_time="36635">bwPerc = prctile(bw,1:100,3);</command>
<command execution_time="30">size(bwPerc)</command>
<command execution_time="1156">imscplay(bwPerc)</command>
<command execution_time="12696">imscplay(uint16(65535 .* bsxfun(@minus, bw, mean(bwPerc(:,:,1:50),3)) + 1));</command>
<command execution_time="34">cgray = @() eval('set(hImsc.fig, ''Colormap'', gray(4096)')</command>
<command error="true" execution_time="36">cgray()</command>
<command execution_time="32">dbquit</command>
<command execution_time="33">cgray = @() evalin('base','hImsc.fig.Colormap = gray(4096)')</command>
<command execution_time="30">cgray()</command>
<command execution_time="999">imscplay(bwPerc)</command>
<command execution_time="7350">imscplay(cat(3,Fbw{:}))</command>
<command execution_time="1217">imscplay(bw)</command>
<command execution_time="33">cgray()</command>
<command execution_time="30">whos</command>
<command execution_time="30">clc</command>
<command execution_time="24">whos</command>
<command execution_time="23">Srgb</command>
<command execution_time="23">Srgb(4)</command>
<command execution_time="55">bwLow = mean(bwPerc(:,:,1:10),3);</command>
<command execution_time="27608">bwPerc98Tenths = prctile(bw,98:.1:99.9, 3);</command>
<command execution_time="923" repeat="2">imscplay(bwPerc98Tenths)</command>
<command execution_time="90">bwHigh = mean(bwPerc98Tenths,3) + 10.*mean(diff(bwPerc98Tenths,[],3),3);</command>
<command execution_time="2123">imcompare(bw(:,:,500),bwHigh)</command>
<command execution_time="1091">imcompare(max(bw,[],3),bwHigh)</command>
<command execution_time="25">max(bwHigh(:))</command>
<command execution_time="25">bwscale.low = mean(bwLow(:))</command>
<command execution_time="35">bwscale.high = max(bwHigh(:))</command>
<command execution_time="2648">bwscale.u8 = uint8( 255 .* (bwscale.high-bwscale.low) .* (bw - bwscale.low) + 1);</command>
<command execution_time="1870">imscplay(bwscale.u8)</command>
<command execution_time="37">cgray()</command>
<command execution_time="5492">clear</command>
<command execution_time="33">clc</command>
</session>
<session>
<command time_stamp="15d855757ad">%-- 7/27/2017 2:38 PM --%</command>
<command execution_time="80">md = load('Z:\Data\HowardMattStriatum\Construct\movementData\movement_data_263ACSF110815.mat')</command>
<command execution_time="84">[distance, rel_direction, dxdy, dTheta] = getMovement(md.data);</command>
<command execution_time="31">whos</command>
<command execution_time="811">plot(dxdy)</command>
<command execution_time="101">plot(rel_direction)</command>
<command execution_time="1534">whos</command>
<command execution_time="1631">imscplay(bw)</command>
<command execution_time="31">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="15446">imscplay(bwscale.u8)</command>
<command execution_time="27">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="411">help colorcube</command>
<command execution_time="98">help colorui</command>
<command error="true" execution_time="456">C = colorui('r','Choose color')</command>
<command execution_time="163">dbquit</command>
<command execution_time="36923">C = colorui([1 0 0],'Choose color')</command>
<command execution_time="173" repeat="2">dbquit</command>
<command execution_time="31">dbclear if error</command>
<command execution_time="32">clc</command>
<command execution_time="48177">[fname,fdir] = uigetfile('*.mat','Select movement data file')</command>
<command execution_time="65">md = load(fullfile(fdir,fname))</command>
<command execution_time="27">whos</command>
<command execution_time="98">plot(distance)</command>
<command execution_time="100">plot([distance, dxdy])</command>
<command execution_time="445">plot([rel_direction, dTheta])</command>
<command execution_time="40">clearvars -except md</command>
<command batch="237">[P.dr, P.theta, dxdy, P.dtheta] = getMovement(md.data);</command>
<command batch="237">P.dx = dxdy(:,1);</command>
<command batch="237" execution_time="50">P.dy = dxdy(:,2);</command>
<command execution_time="27">clearvars md</command>
<command execution_time="26">whos</command>
<command execution_time="26">clearvars dxdy</command>
<command execution_time="26">P</command>
<command execution_time="31">whos</command>
<command execution_time="30">clear</command>
<command execution_time="30">clc</command>
<command batch="238">[fname,fdir] = uigetfile('*.mat','Select movement data file');</command>
<command batch="238">md = load(fullfile(fdir,fname));</command>
<command batch="238">[P.dr, P.theta, dxdy, P.dtheta] = getMovement(md.data);</command>
<command batch="238">P.dx = dxdy(:,1);</command>
<command batch="238" execution_time="39058">P.dy = dxdy(:,2);</command>
<command execution_time="26">fname</command>
<command execution_time="24">fdir</command>
<command execution_time="25">fullfile(fdir,fname)</command>
<command execution_time="408">plot(P.dx)</command>
<command execution_time="45">hold on</command>
<command execution_time="23">plot(P.dy)</command>
<command execution_time="619">polarplot(atan2(P.dy(1:100),P.dx(1:100)), P.dr(1:100))</command>
<command execution_time="55">polarplot(atan2(P.dy(1:100),P.dx(1:100)), P.dr(1:100),'.')</command>
<command execution_time="57">h = polarplot(atan2(P.dy(1:100),P.dx(1:100)), P.dr(1:100),'.')</command>
<command batch="239">for k=1:5000;</command>
<command batch="239">h.ThetaData = atan2(P.dy(k+(1:100)),P.dx(k+(1:100)));</command>
<command batch="239">h.RData = P.dr(k+(1:100));</command>
<command batch="239">pause(.03);</command>
<command batch="239" execution_time="6861">end</command>
<command execution_time="24">h</command>
<command execution_time="53">get(h)</command>
<command execution_time="27">h.Parent.RLim = [0 5]</command>
<command batch="240">for k=1:5000;</command>
<command batch="240">h.ThetaData = atan2(P.dy(k+(1:100)),P.dx(k+(1:100)));</command>
<command batch="240">h.RData = P.dr(k+(1:100));</command>
<command batch="240">pause(.03);</command>
<command batch="240" execution_time="152412">end</command>
<command execution_time="30">whos</command>
<command execution_time="29">P</command>
<command execution_time="98">plot(P.theta)</command>
<command execution_time="101">plot(P.dtheta)</command>
<command execution_time="28">makewin = @(v,w) sum(toeplitz(v(1:w),v(:)), 1)</command>
<command execution_time="28">toeplitz(P.dx(1:4),P.dx(1:20))</command>
<command execution_time="28">clearvars makewin</command>
<command execution_time="29">getWinSum = @(v,w) sum(toeplitz(v(1:w),v(:)), 1)</command>
<command execution_time="28">winSum = @(v,w) sum(toeplitz(v(1:w),v(:)), 1)</command>
<command execution_time="101">plot(winSum( P.dy , 10))</command>
<command execution_time="28">hold on</command>
<command execution_time="32">plot(winSum( P.dx , 10))</command>
<command execution_time="98">plot(cumsum(P.dx), cumsum(P.dy))</command>
<command execution_time="27">P.dx(isnan(P.dx)) = 0;</command>
<command execution_time="27">P.dy(isnan(P.dy)) = 0;</command>
<command execution_time="94" repeat="2">plot(cumsum(P.dx), cumsum(P.dy))</command>
<command execution_time="31">md</command>
<command execution_time="1263">[distance, rel_direction, dxdy, dTheta] = getMovement(md.data)</command>
<command execution_time="30">clc</command>
<command execution_time="93">plot(distance)</command>
<command execution_time="94">plot(dxdy(:,1),dxdy(:,2))</command>
<command execution_time="102">plot(cumsum(dxdy(:,1)),cumsum(dxdy(:,2)))</command>
<command execution_time="24">dxdy(isnan(dxdy)) = 0;</command>
<command execution_time="86" repeat="2">plot(cumsum(dxdy(:,1)),cumsum(dxdy(:,2)))</command>
<command execution_time="24">whos</command>
<command execution_time="1811">imscplay(bw)</command>
<command execution_time="24">h = ans</command>
<command execution_time="23">h.fig.Colormap = gray(4096)</command>
<command execution_time="1238">imsc(bwLow)</command>
<command execution_time="23">bwscale</command>
<command execution_time="1899">imscplay(bwscale.u8)</command>
<command execution_time="23">ans.fig.Colormap = gray(256)</command>
<command execution_time="32">clc</command>
<command execution_time="17842">imscplay( bsxfun(@minus, log1p(bw+mean(bwMean(:))), log1p(bwLow) ) );</command>
<command execution_time="23">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="24">hImsc</command>
<command execution_time="24">hImsc.im</command>
<command error="true" execution_time="372">hImsc.im.CLim</command>
<command execution_time="24">hImsc.ax.CLim</command>
<command execution_time="529">clearvars bwscale</command>
<command execution_time="24">whos</command>
<command execution_time="24">clearvars h hImsc</command>
<command execution_time="11300">bwGammaSub = bsxfun(@minus, log1p(bw+mean(bwMean(:))), log1p(bwLow) ) ;</command>
<command execution_time="35">type writeVidStruct2BwMp4</command>
<command execution_time="30">mean(min(bwLow,[],1))</command>
<command execution_time="1686">imscplay(bwGammaSub)</command>
<command execution_time="34">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="30">hImsc.ax.CLim</command>
<command execution_time="11700">help map</command>
<command execution_time="33">u8clim = hImsc.ax.CLim;</command>
<command execution_time="29">u8clim</command>
<command execution_time="30">scale.a = diff(u8clim)</command>
<command batch="236">u8shift = -u8clim(1);</command>
<command batch="236" execution_time="33">u8scale = diff(u8clim);</command>
<command execution_time="30">u8shift</command>
<command execution_time="31">u8scale</command>
<command execution_time="31">clc</command>
<command execution_time="24">type writeVidStruct2BwMp4</command>
<command batch="237">filename = 'BW';</command>
<command batch="237">profile = 'MPEG-4';</command>
<command batch="237">writerObj = VideoWriter(filename,profile);</command>
<command batch="237">writerObj.FrameRate = 24;</command>
<command batch="237">writerObj.Quality = 95;</command>
<command batch="237" execution_time="1556">open(writerObj)</command>
<command error="true" execution_time="40">writeVideo(writerObj, bwu8);</command>
<command execution_time="25">whos</command>
<command execution_time="5345">bwu8 = min(1, max(0, u8Scale * (bwGammaSub + u8Shift)));</command>
<command error="true" execution_time="33">writeVideo(writerObj, bwu8);</command>
<command execution_time="488">help permute</command>
<command execution_time="32">bwu8 = permute(bwu8, [1 2  4 3]);</command>
<command error="true" execution_time="23659">writeVideo(writerObj, bwu8);</command>
<command execution_time="32">close(writerObj)</command>
<command execution_time="2897">clearvars Srgb</command>
<command execution_time="31">whos</command>
<command execution_time="1383">clearvars bwu8</command>
<command execution_time="1372">clearvars bwGammaSub</command>
<command execution_time="31">now</command>
<command execution_time="30">datestr(now)</command>
<command error="true" execution_time="34">datestr(now,'HHMMSS)</command>
<command execution_time="33">datestr(now,'HHMMSS')</command>
<command execution_time="46">close(writerObj)</command>
<command execution_time="416">writerObj</command>
<command execution_time="31">whos bw</command>
<command execution_time="1576">imscplay(bw)</command>
<command execution_time="750">bw = bw*100;</command>
<command execution_time="1485">imscplay(bw)</command>
<command execution_time="33">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="28">bwClim = hImsc.ax.CLim</command>
<command execution_time="29">bwClim = hImsc.ax.CLim;</command>
<command execution_time="36" repeat="3">bwClim = hImsc.ax.CLim</command>
<command execution_time="33">bwShift = -bwClim(1)</command>
<command execution_time="31">bwScale = diff(bwClim)</command>
<command execution_time="29">bwShift</command>
<command batch="238">bwShift = -bwClim(1);</command>
<command batch="238">bwScale = diff(bwClim);</command>
<command batch="238" execution_time="5126">bw = min(1, max(0, bwScale * (bw + bwShift)));</command>
<command execution_time="32">whos bw</command>
<command execution_time="46658">close(writerObj)</command>
<command execution_time="418">imsc(bw)</command>
<command execution_time="1351">imscplay(bw)</command>
<command execution_time="30">bwClim = hImsc.ax.CLim</command>
<command execution_time="31">bwClim = [.08 .18]</command>
<command execution_time="28">bwShift = -bwClim(1);</command>
<command execution_time="29">bwScale = diff(bwClim);</command>
<command execution_time="29">bwScale</command>
<command execution_time="31">bwScale = 1/diff(bwClim)</command>
<command execution_time="31">bwShift = -bwClim(1)</command>
<command execution_time="3205">bw = min(1, max(0, bwScale * (bw + bwShift)));</command>
<command execution_time="31">bw = permute( bw, [1 2 4 3]);</command>
<command execution_time="1315">imscplay(bw)</command>
<command error="true" execution_time="78">aviinf = aviinfo(filename)</command>
<command execution_time="31">filename</command>
<command execution_time="108">aviinf = aviinfo('mouseoverlay1.avi')</command>
<command error="true" execution_time="32">[aviinf,tmp] = aviinfo('mouseoverlay1.avi')</command>
<command error="true" execution_time="32">ferror</command>
<command execution_time="29">whos</command>
<command execution_time="29">info</command>
<command execution_time="49">jtxt = jsonencode(info)</command>
<command execution_time="97">datetime</command>
<command execution_time="31">string.empty</command>
<command execution_time="46">pathtool</command>
<command execution_time="32">version -java</command>
<command execution_time="30">whos</command>
<command execution_time="26">P</command>
<command error="true" execution_time="427">M</command>
<command execution_time="23">md</command>
<command execution_time="35">norm(2 + i*5)</command>
<command error="true" execution_time="414">mag(2 + i*5)</command>
<command execution_time="24">imag(2 + i*5)</command>
<command execution_time="23">abs(2 + i*5)</command>
<command error="true" execution_time="62">[distance, rel_direction, dxdy, dTheta] = getMovement(data)</command>
<command execution_time="1231">[distance, rel_direction, dxdy, dTheta] = getMovement(md.data)</command>
<command execution_time="96">plot(dxdy(:,1),dxdy(:,2))</command>
<command execution_time="96">dxdy(isnan(dxdy)) = 0; plot(cumsum(dxdy(:,1)),cumsum(dxdy(:,2)))</command>
<command error="true" execution_time="449">[tifName,tifDir] = uigetFile('*.tif')</command>
<command execution_time="34398">[tifName,tifDir] = uigetfile('*.tif')</command>
<command execution_time="21074">[tifName,tifDir] = uigetfile('*.tif','Select Tiff Files to Read Timestamps','MultiSelect','on')</command>
<command execution_time="51">fullfile(tifDir,tifName)</command>
<command execution_time="29">fullfile(tifDir,tifName)'</command>
<command execution_time="34">M.dt = md.info.Dt(:)</command>
<command execution_time="30">any(isnan(M.dt))</command>
<command execution_time="31">whos</command>
<command execution_time="29">M</command>
<command execution_time="30">P</command>
<command error="true" execution_time="396">ok</command>
<command batch="241">% Get Movement Data from Mike's Fcn -&gt; Projects to Mouse-Reference-Space</command>
<command batch="241">[M.speed, ~, dxdy, M.dtheta] = getMovement(md.data);</command>
<command batch="241">dxdy(isnan(dxdy)) = 0;</command>
<command batch="241">dmx = dxdy(:,1);</command>
<command batch="241">dmy = dxdy(:,2);</command>
<command batch="241">dt = md.info.Dt(:);</command>
<command batch="241">% Calculate Position and Orientation in Virtual-Space</command>
<command batch="241">pk = [0 0];</command>
<command batch="241">ok = 0;</command>
<command batch="241" execution_time="395">n = numel(dmx);</command>
<command execution_time="26">[M.speed, ~, dxdy, dzrot] = getMovement(md.data);</command>
<command execution_time="28">any(isnan(dzrot))</command>
<command execution_time="34">plot(dzrot)</command>
<command batch="242">[M.speed, ~, dxdy, dzrot] = getMovement(md.data);</command>
<command batch="242">dxdy(isnan(dxdy)) = 0;</command>
<command batch="242">dzrot(isnan(dzrot)) = 0;</command>
<command batch="242">dxM = dxdy(:,1);</command>
<command batch="242">dyM = dxdy(:,2);</command>
<command batch="242">dt = md.info.Dt(:);</command>
<command batch="242">% Calculate Position and Orientation in Virtual-Space</command>
<command batch="242">pk = [0 0];</command>
<command batch="242">ok = 0;</command>
<command batch="242">n = numel(dxM);</command>
<command batch="242">x(n,1) = 0;</command>
<command batch="242">y(n,1) = 0;</command>
<command batch="242">o(n,1) = 0;</command>
<command batch="242">for k = 1:n</command>
<command batch="242">% Get Rotation matrix for prior orientation in virtual ref-frame</command>
<command batch="242">rotMVk = [cos(ok) sin(ok) ; -sin(ok) cos(ok)];</command>
<command batch="242">% Apply Rk to current linear-motion vector (dpos) -&gt; dpos in Virtual</command>
<command batch="242">dposMk = [dxM(k) ; dyM(k)];</command>
<command batch="242">dposVk = rotMVk * dposMk;</command>
<command batch="242">% Add displacement vector (in V-space) to current position</command>
<command batch="242">pk = pk + dposVk';</command>
<command batch="242">% Add rotation around Z-Axis to update Orientation in V-space</command>
<command batch="242">ok = ok + dzrot(k);</command>
<command batch="242">% Collect updates to Position and Orientation</command>
<command batch="242">x(k) = pk(1);</command>
<command batch="242">y(k) = pk(2);</command>
<command batch="242">o(k) = ok;</command>
<command batch="242">end</command>
<command batch="242">% Fill Mouse Space Info</command>
<command batch="242">M.dtheta = dzrot(:);</command>
<command batch="242">M.dpos = dxM + 1i.*dyM;</command>
<command batch="242">M.dx = dxM;</command>
<command batch="242">M.dy = dyM;</command>
<command batch="242">M.dt = dt;</command>
<command batch="242">M.x = x;</command>
<command batch="242">M.y = y;</command>
<command batch="242">M.theta = o;</command>
<command batch="242" execution_time="522">M.t = cumsum(dt(:));</command>
<command execution_time="29">clc</command>
<command execution_time="23">M</command>
<command execution_time="95">plot3(M.x, M.y, M.t)</command>
<command execution_time="101">grid on</command>
<command execution_time="21" repeat="2">M</command>
<command execution_time="28">dbstop if error</command>
<command execution_time="26">whos</command>
<command execution_time="30">clear</command>
<command execution_time="30">clc</command>
<command error="true" execution_time="31043">[h,f] = showMouseMovement()</command>
<command execution_time="67">whos</command>
<command execution_time="32">M</command>
<command execution_time="30">getVelocity(10)</command>
<command execution_time="29">getVelocity(100)</command>
<command error="true" execution_time="108">getVelocity(100:103)</command>
<command execution_time="31">M</command>
<command execution_time="87">dbcont</command>
<command execution_time="30">clc</command>
<command execution_time="62105">[h,f] = showMouseMovement()</command>
<command execution_time="25">h</command>
<command execution_time="21">h.fig.CurrentPoint</command>
<command error="true" execution_time="395">figClickPt</command>
<command execution_time="26">h.fig.CurrentPoint</command>
<command execution_time="24">h.fig.CurrentPoint ~= [0 0]</command>
<command error="true" execution_time="21">h.fig.CurrentPoint != [0 0]</command>
<command execution_time="103">clear</command>
<command execution_time="28">clc</command>
<command execution_time="173202">[h,f] = showMouseMovement()</command>
<command execution_time="24">M</command>
<command error="true" execution_time="2162135" repeat="2">[h,f] = showMouseMovement(M)</command>
<command execution_time="30">whos</command>
</session>
<session>
<command time_stamp="15d8a5a5733">%-- 7/28/2017 1:59 PM --%</command>
<command batch="243">lowOn = @() linspace(1,grayLevel,128)';</command>
<command batch="243">lowOff = @() linspace(0,grayLevel,128)';</command>
<command batch="243">highOn = @() linspace(grayLevel,1,128)';</command>
<command batch="243" execution_time="46">highOff = @() linspace(grayLevel,0,128)';</command>
<command execution_time="28">grayLevel = .35;</command>
<command batch="244">lowOn = @() linspace(1,grayLevel,128)';</command>
<command batch="244">lowOff = @() linspace(0,grayLevel,128)';</command>
<command batch="244">highOn = @() linspace(grayLevel,1,128)';</command>
<command batch="244" execution_time="46">highOff = @() linspace(grayLevel,0,128)';</command>
<command execution_time="51">chanGrad = repmat( {lowOff() ; highOff()}, 1, 3)</command>
<command batch="245">colorScheme = [...</command>
<command batch="245">1 0 1 ;...</command>
<command batch="245" execution_time="28">1 1 0 ]</command>
<command batch="246">cmap = cat(1,...</command>
<command batch="246">cat(2, lowOn(), lowOff(), lowOn()),...</command>
<command batch="246" execution_time="28">cat(2, highOn(), highOn(), highOff()));</command>
<command execution_time="27">whos cmap</command>
<command execution_time="28">clc</command>
<command execution_time="2501570">[h,f] = showMouseMovement()</command>
</session>
<session>
<command time_stamp="15dcc3a86e4">%-- 8/10/2017 8:59 AM --%</command>
<command execution_time="2667913">[h,f] = showMouseMovement()</command>
<command execution_time="42">whos</command>
<command execution_time="38">M</command>
<command execution_time="35">h</command>
<command execution_time="44">f</command>
<command execution_time="40">f(1)</command>
<command execution_time="40">f(15)</command>
<command execution_time="37">f(154)</command>
<command execution_time="40">idx = [];</command>
<command execution_time="63">which save2binary</command>
<command execution_time="40">type save2binary</command>
<command execution_time="42">N = numel(f)</command>
<command execution_time="35">idx = 0;</command>
<command execution_time="40">fname = 'Animated Movement (raw frames) Mouse263 ACSF (11-8-15)'</command>
<command execution_time="37">%while idx(end)&lt;256, idx=idx(end)+(1:64); fname=save2binary(cat(4,f(idx).cdata))</command>
<command error="true" execution_time="107542">while idx(end)&lt;N, idx=idx(end)+(1:64); save2binary(cat(4,f(idx).cdata),fname); end</command>
<command execution_time="48">idx</command>
<command execution_time="1081">edit save2binary.m</command>
<command error="true" execution_time="505">fileName</command>
<command execution_time="43">fname</command>
<command execution_time="41">fileName = fname</command>
<command execution_time="42">strsplit(fileName,'.')</command>
<command execution_time="48">split(fileName,'.')</command>
<command execution_time="58">[newStr,matches] = split(fileName,'.')</command>
<command execution_time="47">[newStr,matches] = split([fileName,'.ext'],'.')</command>
<command execution_time="46">newStr = split([fileName,'.ext'],'.')</command>
<command execution_time="53">newStr = strsplit([fileName,'.ext'],'.')</command>
<command execution_time="44">fileName</command>
<command execution_time="775">help isstrprop</command>
<command execution_time="44">idx</command>
<command execution_time="48">fname</command>
<command error="true" execution_time="503">fName</command>
<command execution_time="46">exist(fname,'file')</command>
<command execution_time="48">[fpat,fnam,fext] = fileparts(fname)</command>
<command execution_time="43">fileName</command>
<command execution_time="48">[fdir,fname,fext] = fileparts(fileName)</command>
<command execution_time="46">fileExt = '.4.6.7'</command>
<command execution_time="44">fullfile(fdir,fname,fileExt)</command>
<command execution_time="46">fullfile(fdir,[fname,fileExt])</command>
<command execution_time="46">clc</command>
<command execution_time="33">fname</command>
<command execution_time="17093">fname = uigetfile('*.*')</command>
<command execution_time="32">%idx=idx(end)+(1:64); save2binary(cat(4,f(idx).cdata),fname);</command>
<command execution_time="453">save2binary(cat(4,f(idx).cdata),fname)</command>
<command execution_time="28">dir</command>
<command error="true" execution_time="250198">while idx(end)&lt;N, idx=idx(end)+(1:64); save2binary(cat(4,f(idx).cdata),fname), end</command>
<command execution_time="111">whos</command>
<command execution_time="32">M</command>
<command execution_time="31">h</command>
<command execution_time="32">h.gdata</command>
<command execution_time="34">h.gdata.roadData</command>
<command execution_time="937">h.gdata.roadData.X</command>
<command execution_time="29">clc</command>
<command execution_time="37">whos</command>
<command execution_time="470">h = []</command>
</session>
<session>
<command time_stamp="15dccf60d91">%-- 8/10/2017 12:24 PM --%</command>
<command execution_time="149388">nextFcn = getScicadelicPreProcessor(true,true)</command>
<command execution_time="43">whos</command>
<command execution_time="34">clc</command>
<command execution_time="875">but = uibutton()</command>
<command execution_time="1085">help uisuspend</command>
<command execution_time="638">help uiswitch</command>
<command execution_time="544">uiswitch</command>
<command execution_time="77">hSwitch = uiswitch()</command>
<command execution_time="34">strcmpi(hSwitch.Value,'Off')</command>
<command execution_time="33">clc</command>
<command execution_time="84">hSwitch = uiswitch('Value','On')</command>
<command batch="247" error="true">hSwitch = uiswitch('Value','On');</command>
<command batch="247" error="true">k=0;</command>
<command batch="247" error="true">while k &lt; 2000,</command>
<command batch="247" error="true">if ~strcmpi(hSwitch.Value,'On'), break, end,</command>
<command batch="247" error="true">k = k+1;</command>
<command batch="247" error="true">try</command>
<command batch="247" error="true">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="247" error="true">Fbw{k} = f;</command>
<command batch="247" error="true">T{k} = info.timestamp;</command>
<command batch="247" error="true">Srgb(k) = oncpu(srgb);</command>
<command batch="247" error="true">disp(k);</command>
<command batch="247" error="true">catch me</command>
<command batch="247" error="true">break</command>
<command batch="247" error="true">end</command>
<command batch="247" error="true" execution_time="800199">end</command>
<command execution_time="34">whos</command>
<command execution_time="33">Srgb(12)</command>
<command execution_time="34">Fbw(30)</command>
<command execution_time="30">k</command>
<command execution_time="35">info</command>
<command execution_time="32">info.idx</command>
<command execution_time="2705">Fbw = {};</command>
<command execution_time="36">Srgb(44)</command>
<command execution_time="10838">imscplay(cat(3,Srgb(50:350).marginalKurtosisOfIntensity))</command>
<command execution_time="105">colormap(gray(4096))</command>
<command error="true" execution_time="1572">h</command>
<command execution_time="30">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="30">whos</command>
<command execution_time="32">whos Srgb</command>
<command execution_time="8004">imscplay(cat(3,Srgb(50:350).marginalSkewnessOfIntensityChange))</command>
<command execution_time="30">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="6569">imscplay(cat(3,Srgb(50:350).marginalKurtosisOfIntensity))</command>
<command execution_time="31">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="31">whos</command>
<command execution_time="1456">f</command>
<command execution_time="34">clc</command>
<command execution_time="26">whos</command>
<command execution_time="27">Srgb(50)</command>
<command execution_time="32">mkiSum = zeros(1024,1024);</command>
<command execution_time="25">msicSum = zeros(1024,1024);</command>
<command batch="248">for k=1:numel(Srgb), mki = Srgb(k).marginalKurtosisOfIntensity; msic=Srgb(k).marginalSkewnessOfIntensityChange;</command>
<command batch="248">mkiSum = mkiSum + sum(mki&gt;.25, 3); msicSum = msicSum + sum(msic&gt;.25, 3);</command>
<command batch="248" execution_time="15544">end</command>
<command execution_time="2005">imsc(mkiSum)</command>
<command error="true" execution_time="30">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="27">whos</command>
<command execution_time="27">h.fig.Colormap = gray(4096);</command>
<command execution_time="440">imsc(msicSum)</command>
<command execution_time="8834">clear</command>
<command error="true" execution_time="330620">animat = readBinaryData();</command>
<command error="true" execution_time="268">fileName = uigetFile('*.*')</command>
<command execution_time="8205">fileName = uigetfile('*.*')</command>
<command execution_time="25">whos</command>
<command execution_time="26">clc</command>
<command execution_time="23">animat.fid = fopen(fileName,'rb');</command>
<command execution_time="22">numFrames = 2000; numBytes = 3*1024*1024*numFrames;</command>
<command execution_time="23921">animat.rgb = fread(animat.fid,numBytes,['*','uint8']);</command>
<command execution_time="25">bw.fileName = '[Mouse 263] 11-8-15 263ACSF(1 - 8)(2017Aug10_1230PM) [BW-Intensity].1024.1024.8.single'</command>
<command execution_time="27">fileName = '[Mouse 263] 11-8-15 263ACSF(1 - 8)(2017Aug10_1230PM) [BW-Intensity].1024.1024.8.single'</command>
<command execution_time="24">fid = fopen(fileName,'rb');</command>
<command execution_time="23">numBWBytes = 4*1024*1024*numFrames;</command>
<command error="true" execution_time="37">bw = fread(fid,numBWBytes,['*','single']);</command>
<command execution_time="25">fid</command>
<command execution_time="26">fileName</command>
<command execution_time="352">cd ..</command>
<command execution_time="107">cd Construct\</command>
<command execution_time="456">cd 'Mouse 263'\</command>
<command execution_time="112">cd export\</command>
<command execution_time="268">fid = fopen(fileName,'rb');</command>
<command execution_time="26">fid</command>
<command execution_time="62574">bw = fread(fid,numBWBytes,['*','single']);</command>
<command batch="249">fclose(fid)</command>
<command batch="249">fid = fopen('[Mouse 263] 11-8-15 263ACSF(1 - 8)(2017Aug10_1230PM) [RGB].1024.1024.3.8.uint8','rb');</command>
<command batch="249">rgb = fread(fid,numBytes,['*','single']);</command>
<command batch="249" execution_time="48926">fclose(fid)</command>
<command execution_time="22">clc</command>
<command execution_time="26">whos</command>
<command execution_time="23">bw = reshape(bw,1024,1,1024,[]);</command>
<command execution_time="23">animat.rgb = reshape(animat.rgb,1024,1024,3,[]);</command>
<command execution_time="22">rgb = reshape(rgb,1024,1024,3,[]);</command>
<command execution_time="26">whos</command>
<command execution_time="22">bw = reshape(bw,1024,1024,1,[]);</command>
<command execution_time="28">animat</command>
<command execution_time="27">whos</command>
<command error="true" execution_time="23876">imrgbplay(rgb)</command>
<command execution_time="22">fid = fopen('[Mouse 263] 11-8-15 263ACSF(1 - 8)(2017Aug10_1230PM) [RGB].1024.1024.3.8.uint8','rb');</command>
<command execution_time="6669">rgb = fread(fid,numBytes,['*','uint8']);</command>
<command execution_time="21">rgb = reshape(rgb,1024,1024,3,[]);</command>
<command execution_time="835">imrgbplay(rgb)</command>
<command execution_time="2099">imscplay(bw)</command>
<command execution_time="23">hImsc.fig.Colormap = gray(4096);</command>
<command execution_time="36">whos</command>
<command execution_time="23">bw = reshape(bw,1024,1024,[]);</command>
<command execution_time="35" repeat="2">bwClim = hImsc.ax.CLim</command>
<command execution_time="852">bwMean = mean(bw,3);</command>
<command execution_time="37">whos</command>
<command execution_time="60" repeat="2">bwLow = mean(bwPerc(:,:,1:10),3);</command>
<command execution_time="35">bwClim = hImsc.ax.CLim</command>
<command execution_time="39">whos</command>
<command execution_time="2514">imscplay(bwLoggy)</command>
<command execution_time="35">hImsc.fig.Colormap = gray(4096)</command>
<command execution_time="37">whos</command>
<command execution_time="41">outputFrameSize = [1080 1920 3]</command>
<command execution_time="35">brainFrameSize = [1024 1024]</command>
<command execution_time="24">animat</command>
<command execution_time="24">mouseFrameSize = [1024 1024 3];</command>
<command execution_time="34">rowStart = (outputFrameSize(1)-brainFrameSize(1))/2</command>
<command execution_time="28">k=200; mouseFrame = rgb(:,:,:,k);</command>
<command execution_time="34">k=200; mouseFrame = animat.rgb(:,:,:,k);</command>
<command execution_time="27">brainFrame = rgb(:,:,:,k);</command>
<command execution_time="23">outputFrame = blankFrame();</command>
<command execution_time="44">a = 0.8 * ~all(mouseFrame == 0, 3);</command>
<command batch="250">outputFrame(brainIdx{:}) = outputFrame(brainIdx{:}) + brainFrame;</command>
<command batch="250" execution_time="98">outputFrame(mouseIdx{:}) = uint8(bsxfun(@times, a, double(mouseFrame)) + bsxfun(@times, (1-a), double(outputFrame(mouseIdx{:}))));</command>
<command execution_time="693">imshow(outputFrame)</command>
<command execution_time="36">bwColumnStart = outputFrameSize(2)-brainFrameSize(2)</command>
<command execution_time="37">bwIdx = { rowStart + (1:brainFrameSize(1))', bwColumnStart + (1:brainFrameSize(2)), reshape(1:3,1,1,3)}</command>
<command execution_time="24">bwIdx = { rowStart + (1:brainFrameSize(1))', bwColumnStart + (1:brainFrameSize(2)), reshape([1 1 1],1,1,3)};</command>
<command execution_time="25">bwIdx</command>
<command execution_time="24">bwIdx = { rowStart + (1:brainFrameSize(1))', bwColumnStart + (1:brainFrameSize(2)), reshape(1:3,1,1,3)};</command>
<command execution_time="41">whos</command>
<command execution_time="28">bwOrig = bw;</command>
<command execution_time="21">bw = bwLoggy;</command>
<command execution_time="26">outputMid = outputFrameSize(2)/2;</command>
<command execution_time="42">brainFrameOvershoot = brainFrameSize(2) - outputMid</command>
<command error="true" execution_time="562">colIdx = 1:outputFrameIdx(2);</command>
<command execution_time="21">colIdx = 1:outputFrameSize(2);</command>
<command execution_time="53">colIdx</command>
<command execution_time="35">outputMid</command>
<command execution_time="45">brainImOverlap = abs(colIdx - outputMid)</command>
<command execution_time="45">brainImOverlap = outputMid - abs(colIdx - outputMid)</command>
<command execution_time="35">(brainFrameSize(2) - outputMid)</command>
<command execution_time="46">brainImOverlap = (brainFrameSize(2) - outputMid) - abs(colIdx - outputMid)</command>
<command execution_time="43">brainImOverlap = max( 0 , (brainFrameSize(2) - outputMid) - abs(colIdx - outputMid))</command>
<command execution_time="36">outputMid = outputFrameSize(2)/2</command>
<command execution_time="34">outputMid = outputFrameSize(2)/2 + 0.5</command>
<command execution_time="42">brainFrameOvershoot = brainFrameSize(2) - outputMid</command>
<command execution_time="34">outputMid = outputFrameSize(2)/2</command>
<command execution_time="23">brainFrameOvershoot = brainFrameSize(2) - outputMid</command>
<command execution_time="42" repeat="2">rgbIdx{2} - rgbColumnStart</command>
<command execution_time="48">rgbIdx{2} - rgbColumnStart - outputMid</command>
<command execution_time="35">brainFrameOvershoot</command>
<command execution_time="45">rgbColAlpha = (rgbIdx{2} - rgbColumnStart - outputMid)/brainFrameOvershoot</command>
<command execution_time="43">rgbColAlpha = max(0, 1 + (rgbIdx{2} - rgbColumnStart - outputMid)/brainFrameOvershoot)</command>
<command execution_time="44">rgbColAlpha = 1 - max(0, 1 + (rgbIdx{2} - rgbColumnStart - outputMid)/brainFrameOvershoot)/2</command>
<command error="true" execution_time="298">bwdx{2} - bwColumnStart</command>
<command execution_time="44">(bwIdx{2} - bwColumnStart - outputMid)</command>
<command execution_time="41">(bwIdx{2} + bwColumnStart - outputMid)</command>
<command execution_time="23">bwColumnStart</command>
<command execution_time="41">bwIdx{2}</command>
<command error="true" execution_time="27">(outputMid - bwIdx{2} - bwColumnStart)/brainFrameOvershoot)/2</command>
<command error="true" execution_time="23">(outputMid - bwIdx{2} - bwColumnStart)/brainFrameOvershoot)</command>
<command execution_time="48">(outputMid - bwIdx{2} - bwColumnStart)/brainFrameOvershoot</command>
<command execution_time="45">(outputMid + bwIdx{2} - bwColumnStart)/brainFrameOvershoot</command>
<command execution_time="45">outputMid + bwIdx{2}</command>
<command execution_time="45">(bwIdx{2} - outputMid)</command>
<command execution_time="46" repeat="2">(bwIdx{2} - outputMid)/brainFrameOvershoot</command>
<command execution_time="47">max(0, 1 + (-bwIdx{2} + outputMid)/brainFrameOvershoot)/2</command>
<command execution_time="45">1 - max(0, 1 + (-bwIdx{2} + outputMid)/brainFrameOvershoot)/2</command>
<command execution_time="1533">overlayAVI = VideoWriter('Overlay BWRGB (mouse263).avi', 'Uncompressed AVI');</command>
<command execution_time="28">set(overlayAVI,'FrameRate',24)</command>
<command execution_time="31">N = size(bw,3)</command>
<command execution_time="34">N = size(bw,4)</command>
<command execution_time="35">N = size(rgb,4)</command>
<command execution_time="650">imshow(uint8(outputFrame))</command>
<command execution_time="43">rgbColAlpha</command>
<command execution_time="49">bwColAlpha</command>
<command execution_time="401">imshow(outputFrame)</command>
<command execution_time="316">imshow(uint8(outputFrame))</command>
<command execution_time="3448">a</command>
<command execution_time="39">whos</command>
<command execution_time="97">image(mouseFrame)</command>
<command execution_time="424">imshow(mouseFrame)</command>
<command execution_time="340">imshow(uint8(mouseFrame))</command>
<command error="true" execution_time="335">imshow(uint8(mouseAlpha))</command>
<command execution_time="48">mouseAlpha = 0.8 * ~all(mouseFrame == 0, 3);</command>
<command execution_time="359">imshow(uint8(mouseAlpha))</command>
<command execution_time="344">imshow(mouseAlpha)</command>
<command execution_time="22">mouseAlphaMax = 0.8;</command>
<command execution_time="305">help im2bw</command>
<command execution_time="464">help im2double</command>
<command execution_time="375">imshow(im2double(rgb(:,:,:,k)))</command>
<command execution_time="25">blankFrame = @() zeros(outputFrameSize,'double');</command>
<command execution_time="35">outputFrameSize</command>
<command execution_time="28">clc</command>
<command execution_time="351">imshow(bwFrame)</command>
<command execution_time="355">imshow(rgbFrame)</command>
<command execution_time="352">imshow(mouseFrame)</command>
<command execution_time="45">rgbColAlpha</command>
<command execution_time="24">colorAlphaStruct = @(C,a) struct('C',C,'a',a);</command>
<command batch="251">premultiplyAlpha = @(src) struct(...</command>
<command batch="251">'C', src.C,...</command>
<command batch="251">'a', src.a,...</command>
<command batch="251" execution_time="25">'c', bsxfun(@times, src.a, src.C));</command>
<command execution_time="453">imshow([rgbFrame, bwFrame])</command>
<command execution_time="25">caStruct2RGB = @(s) bsxfun(@rdivide, s.c , s.a);</command>
<command batch="252">blend.xor = @(C1,a1,C2,a2) ...</command>
<command batch="252">caStruct2RGB( ...</command>
<command batch="252">blendXorPremultiplied( ...</command>
<command batch="252">premultiplyAlpha( colorAlphaStruct(C1,a1)),...</command>
<command batch="252" execution_time="28">premultiplyAlpha( colorAlphaStruct(C1,a1))));</command>
<command error="true" execution_time="26">imshow(blend.xor(rgbFrame, rgbColAlpha, bwFrame, bwColAlpha)))</command>
<command error="true" execution_time="25">imshow(blend.xor(rgbFrame, rgbColAlpha, bwFrame, bwColAlpha))))</command>
<command execution_time="556" repeat="3">imshow(blend.xor(rgbFrame, rgbColAlpha, bwFrame, bwColAlpha))</command>
<command execution_time="25">CaStruct2RGB = @(s) s.c;</command>
<command batch="253" error="true">fcn = blendOver;</command>
<command batch="253" error="true">S = fcn(...</command>
<command batch="253" error="true">colorAlphaStruct( outputFrame(rgbIdx{:}), 0),...</command>
<command batch="253" error="true" execution_time="108">colorAlphaStruct( rgbFrame, rgbColAlpha))</command>
<command execution_time="39">S</command>
<command execution_time="350">imshow(S.C)</command>
<command execution_time="25">clc</command>
<command execution_time="28">S</command>
<command execution_time="28" repeat="2">rgbIdx</command>
<command execution_time="29">S</command>
<command execution_time="4326">outputAlpha</command>
<command execution_time="31">clc</command>
<command execution_time="41">whos</command>
<command error="true" execution_time="4537">imshow(outputFrame)</command>
<command execution_time="39">S</command>
<command execution_time="42">whos</command>
<command execution_time="34">whos outputFrame</command>
<command execution_time="24">bwIdx</command>
<command execution_time="24">whos outputAlpha</command>
<command execution_time="26">outputAlpha = blankFrame();</command>
<command execution_time="24">whos outputAlpha</command>
<command execution_time="41">S</command>
<command execution_time="372" repeat="2">imshow(outputFrame)</command>
<command batch="254">r = blankFrame();</command>
<command batch="254">b = blankFrame();</command>
<command batch="254">% blend over onto separate blanks</command>
<command batch="254">r(rgbIdx{:}) = bsxfun(@times, 1-rgbColAlpha, r(rgbIdx{:})) + bsxfun(@times, rgbColAlpha, rgbFrame);</command>
<command batch="254" execution_time="307">b(bwIdx{:}) = bsxfun(@times, 1-bwColAlpha, b(bwIdx{:})) + bsxfun(@times, bwColAlpha, bwFrame);</command>
<command execution_time="319">imshow(r)</command>
<command execution_time="320">imshow(b)</command>
<command batch="255">ra = 0.*r(:,:,1);</command>
<command batch="255">rb = 0.*b(:,:,1);</command>
<command batch="255" execution_time="86">ra(rgbIdx{1:2}) = bsxfun(@times, ones(size(rgbIdx{1})), rgbColAlpha);</command>
<command batch="256">ra = 0.*r(:,:,1);</command>
<command batch="256">ba = 0.*b(:,:,1);</command>
<command batch="256">ra(rgbIdx{1:2}) = bsxfun(@times, ones(size(rgbIdx{1})), rgbColAlpha);</command>
<command batch="256" execution_time="264">ba(bwIdx{1:2}) = bsxfun(@times, ones(size(bwIdx{1})), bwColAlpha);</command>
<command execution_time="336" repeat="2">imshow(ba)</command>
<command execution_time="319">imshow(ra)</command>
<command execution_time="477">imshow(blend.xor(r,ra,b,ba))</command>
<command execution_time="326">imshow(r)</command>
<command batch="257">blendOver = @(dst,src) struct(...</command>
<command batch="257">'C', bsxfun(@rdivide, ...</command>
<command batch="257">bsxfun(@plus, bsxfun(@times, src.C , src.a), bsxfun(@times, bsxfun(@times, dst.C , dst.a) , (1-src.a))),...</command>
<command batch="257">bsxfun(@plus, src.a, bsxfun(@times, dst.a, (1-src.a)))),...</command>
<command batch="257" execution_time="26">'a', bsxfun(@plus, src.a, bsxfun(@times, dst.a, (1-src.a))) );</command>
<command error="true" execution_time="311">s</command>
<command execution_time="34">S</command>
<command batch="258">blendOver = @(dst,src) struct(...</command>
<command batch="258">'C', bsxfun(@rdivide, ...</command>
<command batch="258">bsxfun(@plus, bsxfun(@times, src.C , src.a), bsxfun(@times, bsxfun(@times, dst.C , dst.a) , (1-src.a))),...</command>
<command batch="258">bsxfun(@plus, src.a, bsxfun(@times, dst.a, (1-src.a)))),...</command>
<command batch="258" execution_time="23">'a', bsxfun(@plus, src.a, bsxfun(@times, dst.a, (1-src.a))) );</command>
<command execution_time="24">outputFrame = blankFrame();</command>
<command batch="259">outputFrame(rgbIdx{:}) = bsxfun(@plus,...</command>
<command batch="259">bsxfun(@times, 1-rgbColAlpha, outputFrame(rgbIdx{:})),...</command>
<command batch="259">bsxfun(@times, rgbColAlpha, rgbFrame));</command>
<command batch="259">outputFrame(bwIdx{:}) = bsxfun(@plus,...</command>
<command batch="259">outputFrame(bwIdx{:}), ...</command>
<command batch="259" execution_time="288">bsxfun(@times, bwColAlpha, bwFrame));</command>
<command execution_time="377" repeat="2">imshow(outputFrame)</command>
<command execution_time="57">bwFrame = fliplr( im2double(repmat( bw(:,:,k), 1, 1, 3)));</command>
<command execution_time="375">imshow(outputFrame)</command>
<command execution_time="2411">mouseAlpha</command>
<command error="true" execution_time="275">whose mouseFrame</command>
<command execution_time="31">whos mouseFrame</command>
<command execution_time="40">mouseAlpha = mouseAlphaMax * ~all(mouseFrame == 0, 3);</command>
<command execution_time="33">max(mouseAlpha(:))</command>
<command execution_time="321" repeat="2">imshow(outputFrame)</command>
<command execution_time="27">mouseAlphaMax = 1.0;</command>
<command execution_time="327">imshow(outputFrame)</command>
<command execution_time="31">N</command>
<command execution_time="31">k</command>
<command execution_time="34">open(overlayAVI)</command>
<command execution_time="409">help im2uint8</command>
<command execution_time="348">imshow(im2uint8(outputFrame))</command>
<command execution_time="285">overlayAVI</command>
<command execution_time="274">writeVideo(overlayAVI, im2uint8(outputFrame));</command>
<command execution_time="55">overlayAVI</command>
<command execution_time="24">close(overlayAVI)</command>
</session>
<session>
<command time_stamp="15de38724ed">%-- 8/14/2017 9:34 PM --%</command>
<command execution_time="120">pathtool</command>
<command execution_time="23">fdir = 'H:\Susie\[SC0419] GCaMP\I0811 - 114DAT\0419GE-M1RH-114DAT-40fps00001'</command>
<command execution_time="27">fdir = 'Z:\Data\SusieStem\[SC0419] GCaMP\I0811 - 114DAT\0419GE-M1RH-114DAT-40fps00001'</command>
<command execution_time="79">cd(fdir)</command>
<command execution_time="21">clc</command>
<command error="true" execution_time="146789">nextFcn = getScicadelicPreProcessor()</command>
<command execution_time="23">clc</command>
<command execution_time="28">whos</command>
<command execution_time="19175">nextFcn = getScicadelicPreProcessor()</command>
<command execution_time="30">whos</command>
<command execution_time="23">max(4,5)</command>
<command execution_time="29">max(4,3)</command>
<command execution_time="23">max(4,1)</command>
<command execution_time="31">getMax = @max</command>
<command error="true" execution_time="387">whois</command>
<command execution_time="23">whos</command>
<command execution_time="24">clc</command>
<command execution_time="19649">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="29">whos</command>
<command execution_time="47">clearvars fdir getMax</command>
<command execution_time="27">clc</command>
<command execution_time="27">whos</command>
<command execution_time="2913">imscplay(f)</command>
<command execution_time="845">imrgbplay(frgb)</command>
<command execution_time="28">info</command>
<command execution_time="36">info.timestamp</command>
<command execution_time="29">info.motion</command>
<command execution_time="36">info.motion.ux</command>
<command execution_time="26">mstat</command>
<command execution_time="26">mstat.marginalintensity</command>
<command execution_time="992">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="23">clc</command>
<command execution_time="757" repeat="6">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="27">info</command>
<command execution_time="35">info.idx</command>
<command execution_time="29">clc</command>
<command execution_time="679">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="30">whos</command>
<command execution_time="899">imrgbplay(frgb)</command>
<command execution_time="650">imscplay(squeeze(frgb(:,:,3,:)))</command>
<command execution_time="676">imscplay(squeeze(frgb(:,:,2,:)))</command>
<command execution_time="23">clc</command>
<command execution_time="25">rgbCell = {}</command>
<command execution_time="24">whos</command>
<command execution_time="741" repeat="6">[f,info,mstat,frgb,srgb] = nextFcn(); rgbCell{end+1} = frgb;</command>
<command execution_time="27">rgbCell</command>
<command execution_time="1423">frgb</command>
<command execution_time="32">clc</command>
<command execution_time="24">whos</command>
<command execution_time="25">mstat</command>
<command execution_time="26">mstat.marginalintensitychange</command>
<command execution_time="24">clc</command>
<command execution_time="26">whos</command>
<command execution_time="25">rgbCell</command>
<command execution_time="669">imrgbplay( cat(4, rgbCell{:}))</command>
<command execution_time="812">[f,info,mstat,frgb,srgb] = nextFcn(); rgbCell{end+1} = frgb;</command>
<command execution_time="20">t = tic;</command>
<command batch="260">t = tic;</command>
<command batch="260">while toc(t)&lt;30,</command>
<command batch="260">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="260">rgbCell{end+1} = frgb;</command>
<command batch="260" execution_time="31381">end</command>
<command execution_time="1238">imrgbplay( cat(4, rgbCell{:}))</command>
<command execution_time="30">Fdynamic = frgb(:,:,3,:);</command>
<command execution_time="711">imscplay(Fdynamic)</command>
<command execution_time="1212">Frgb = cat(4,rgbCell{:});</command>
<command execution_time="1602">imscplay(squeeze(Frgb(:,:,2,:)))</command>
<command execution_time="1735">imscplay(squeeze(Frgb(:,:,1,:)))</command>
<command execution_time="1359">imscplay(squeeze(Frgb(:,:,3,:)))</command>
<command execution_time="1481">help cumsum</command>
<command execution_time="869">Fdynamic = squeeze(Frgb(:,:,3,:));</command>
<command execution_time="2243">doc imfilter</command>
<command execution_time="3860">Fmovsum = movsum(Fdynamic, 3, 3);</command>
<command execution_time="5694">Fmovsum = movsum(single(Fdynamic), 3, 3);</command>
<command execution_time="948">imscplay(Fmovsum)</command>
<command execution_time="501">Fmask{1} = Fmovsum&gt;20;</command>
<command execution_time="486">Fmask{2} = Fmovsum&gt;40;</command>
<command execution_time="515">Fmask{3} = Fmovsum&gt;80;</command>
<command execution_time="378">help imrcplay</command>
<command execution_time="37">type imrcplay</command>
<command execution_time="946">help imrcOverlay</command>
<command execution_time="311">help imoverlay</command>
<command execution_time="983">help imcomposite</command>
<command execution_time="25">type imcomposite</command>
<command execution_time="2114">imcomposite(mean(Fmovsum,3), Fmask{1})</command>
<command execution_time="16536">imcomposite(mean(Fmovsum,3), any(Fmask{1},3), any(Fmask{2},3), any(Fmask{3},3))</command>
<command execution_time="24">whos</command>
<command execution_time="24">Fmask</command>
<command error="true" execution_time="2900">imrgbplay(255*uint8(permute(cat(3,Fmask{:}),[1 2 4 3])))</command>
<command execution_time="2502">r = 255*uint8(permute(cat(3,Fmask{:}),[1 2 4 3]));</command>
<command execution_time="24">whos</command>
<command execution_time="4037">r = 255*uint8(permute(cat(4,Fmask{:}),[1 2 4 3]));</command>
<command execution_time="899">imrgbplay(r)</command>
<command execution_time="1377">Fmask = {Fmovsum&gt;100, Fmovsum&gt;200, Fmovsum&gt;300};</command>
<command execution_time="3999">r = 255*uint8(permute(cat(4,Fmask{:}),[1 2 4 3]));</command>
<command execution_time="793">imrgbplay(r)</command>
<command error="true" execution_time="626">Fmask = bwareaopen( Fmovsum&gt;250);</command>
<command execution_time="319">help bwareaopen</command>
<command execution_time="2562">Fmask = bwareaopen( Fmovsum&gt;250, 9);</command>
<command execution_time="374">imscplay(Fmask)</command>
<command error="true" execution_time="62">Fmask = bwmorph(Fmask,'close');</command>
<command execution_time="1219">Fmask = reshape( bwmorph(reshape(Fmask,1024,[]),'close'), 1024,1024,[]);</command>
<command execution_time="1011">imscplay(Fmask)</command>
<command execution_time="1514">Fmask = bwareaopen( Fmask, 15);</command>
<command execution_time="1020">imscplay(Fmask)</command>
<command execution_time="1209">imsc(mean(Fmask,3))</command>
<command execution_time="948">which RegionOfInterest</command>
<command execution_time="2050">edit RegionOfInterest</command>
<command batch="261">R={};</command>
<command batch="261">for k=1:size(Fmask,3);</command>
<command batch="261">m = bwareaopen(Fmask(:,:,k),9);</command>
<command batch="261">if any(m(:)),</command>
<command batch="261">R{k} = RegionOfInterest(m);</command>
<command batch="261">end,</command>
<command batch="261" execution_time="6522">end</command>
<command execution_time="74">R</command>
<command execution_time="23">clc</command>
<command execution_time="75">R</command>
<command execution_time="26">clc</command>
<command execution_time="47">roiA = cat(1,R{:})</command>
<command execution_time="25">roiSingle = roiA;</command>
<command execution_time="311">help reduceRegions</command>
<command execution_time="2187">roiA = reduceRegions(roiSingle)</command>
<command execution_time="2134">roiA = reduceSuperRegions(roiSingle)</command>
<command execution_time="1880">show(roiA)</command>
<command execution_time="1187">roiA.showAsOverlay(mean(frgb(:,:,2,:),4))</command>
<command execution_time="384">imsc(mean(frgb(:,:,2,:),4))</command>
<command execution_time="1294">imsc(mean(Frgb(:,:,2,:),4)./255)</command>
<command execution_time="1765">roiA.showAsOverlay(mean(Frgb(:,:,2,:),4)./255)</command>
<command execution_time="2921">roiA.showAsOverlay(single(squeeze(Frgb(:,:,1,:)))./255)</command>
<command execution_time="3206">roiA.showAsOverlay(single(squeeze(Frgb(:,:,1,:)))./140)</command>
<command execution_time="25">clc</command>
<command execution_time="77">R</command>
<command execution_time="29">roiSingle = cat(1,R{:})</command>
<command execution_time="7578">show(roiSingle)</command>
<command execution_time="1896">roiReduced = reduceSuperRegions(roiSingle)</command>
<command execution_time="26">roiSingle(1)</command>
<command execution_time="50">roiSingle(2)</command>
<command execution_time="60">roiSingle(1).overlaps( roiSingle(:))</command>
<command execution_time="354">plot(roiSingle(1).overlaps( roiSingle(:)))</command>
<command error="true" execution_time="22">show( roiSingle(1).overlaps( roiSingle(:))))</command>
<command execution_time="676" repeat="2">show( roiSingle( roiSingle(1).overlaps( roiSingle(:))))</command>
<command execution_time="406">show( roiSingle( roiSingle(2).overlaps( roiSingle(:))))</command>
<command execution_time="579">show( roiSingle( roiSingle(20).overlaps( roiSingle(:))))</command>
<command error="true" execution_time="71588">for k=1:34:2222, show( roiSingle( roiSingle(k).overlaps( roiSingle(:)))), pause, end</command>
<command execution_time="27">roiA</command>
<command execution_time="1055">show(roiA)</command>
<command execution_time="41">roiA(4)</command>
<command execution_time="26">roiA(4).RegionPropInputs</command>
<command execution_time="26">roiA(45).RegionPropInputs</command>
<command execution_time="28">roiA(45)</command>
<command execution_time="39">roiA(45).PixelWeights</command>
<command execution_time="12976">traceOut = roiA.makeTraceFromVid(single(squeeze(Frgb(:,:,1,:))));</command>
<command execution_time="35">whos traceOut</command>
<command execution_time="1028">show(roiA)</command>
<command execution_time="11264">traceOutBlue = roiA.makeTraceFromVid(single(squeeze(Frgb(:,:,3,:))));</command>
<command execution_time="1031">show(roiA)</command>
<command execution_time="27">R = {};</command>
<command execution_time="24">rChunk = {};</command>
<command execution_time="40" repeat="2">R</command>
<command execution_time="3726">Frgb = cat(4, rgbCell{:});</command>
<command execution_time="300">R1 = RegionOfInterest(R);</command>
<command execution_time="328">R2 = RegionOfInterest(R);</command>
<command batch="262">traceOutRed = R1.makeTraceFromVid(single(squeeze(Frgb(:,:,1,:))));</command>
<command batch="262" execution_time="10788">traceOutBlue = R2.makeTraceFromVid(single(squeeze(Frgb(:,:,3,:))));</command>
<command execution_time="638">show(R1)</command>
<command execution_time="583">show(R2)</command>
<command execution_time="42">R</command>
<command execution_time="47">rChunk</command>
<command execution_time="24">rSingle = cat(1,rChunk{:});</command>
<command execution_time="2668">show(rSingle)</command>
<command execution_time="1282">R = reduceSuperRegions(rSingle);</command>
<command execution_time="1465">show(R)</command>
<command execution_time="43">R</command>
<command execution_time="593">show(R1)</command>
<command execution_time="41">R1</command>
<command execution_time="19912">traceOutRed = R.makeTraceFromVid(single(squeeze(Frgb(:,:,1,:))));</command>
<command execution_time="1039">show(R)</command>
<command execution_time="26">clc</command>
<command execution_time="30">R(1)</command>
<command execution_time="105">R.TraceType</command>
<command execution_time="24">clc</command>
<command execution_time="35">R</command>
<command execution_time="1280">R = reduceSuperRegions(rSingle);</command>
<command execution_time="19623">traceOutRed = R.makeTraceFromVid(single(squeeze(Frgb(:,:,1,:))));</command>
<command execution_time="1517">show(R)</command>
<command execution_time="26">R(4)</command>
<command error="true" execution_time="49">cellfun(@size, {R.Trace})</command>
<command execution_time="43">cellfun(@(c) size(c,2), {R.Trace})</command>
<command execution_time="45">cellfun(@(c) size(c,1), {R.Trace})</command>
<command execution_time="43">cellfun(@(c) size(c,3), {R.Trace})</command>
<command execution_time="367">show(R(1:10))</command>
<command execution_time="26">R(1)</command>
<command execution_time="25">R(1).PixelSubScripts</command>
<command execution_time="40">cellfun(@isempty, {R.PixelSubScripts})</command>
<command execution_time="728">show(R(cellfun(@isempty, {R.PixelSubScripts})))</command>
<command execution_time="327">help swapbytes</command>
<command execution_time="38">uint16([0 1 128 65535])</command>
<command execution_time="41">swapbytes(uint16([0 1 128 65535]))</command>
<command execution_time="23">format hex</command>
<command execution_time="24">swapbytes(uint16([0 1 128 65535]))</command>
<command execution_time="24">uint16([0 1 128 65535])</command>
<command execution_time="404">help format</command>
<command execution_time="38">single(pi)</command>
<command execution_time="24">pi</command>
<command execution_time="24">format('short')</command>
<command execution_time="24">fmtopt.float = {'short','long','shorte','longe','shortg','longg','shorteng','longeng'};</command>
<command execution_time="37">fmtopt.numeric = {'hex','bank','rat','+'}</command>
<command execution_time="25">fmtopt.spacing = {'compact','loose'}</command>
<command execution_time="42">fmtopt.testnums = { [-1 0 1], [-pi:pi/10:pi], 0:1/12:4, pi^6, pi^-6}</command>
<command execution_time="467">help for</command>
<command execution_time="37">for str={'a','b','c'}, disp(str), end</command>
<command batch="263" error="true">for fmtcat=fields(fmtopt),</command>
<command batch="263" error="true">for opt=fmtopt.(fmtcat),</command>
<command batch="263" error="true">format(opt);</command>
<command batch="263" error="true">fprintf('\n\n\t&gt;&gt; format %s\n\n',opt),</command>
<command batch="263" error="true">for testnum=fmtopt.testnums,</command>
<command batch="263" error="true">disp(testnum),</command>
<command batch="263" error="true">pause,</command>
<command batch="263" error="true">end,</command>
<command batch="263" error="true">end,</command>
<command batch="263" error="true" execution_time="44">end</command>
<command execution_time="24">fmtcat</command>
<command batch="264" error="true">fmtcatname = fields(fmtopt);</command>
<command batch="264" error="true">for fmtcat=fmtcatname,</command>
<command batch="264" error="true">for opt=fmtopt.(fmtcat),</command>
<command batch="264" error="true">format(opt);</command>
<command batch="264" error="true">fprintf('\n\n\t&gt;&gt; format %s\n\n',opt),</command>
<command batch="264" error="true">for testnum=fmtopt.testnums,</command>
<command batch="264" error="true">disp(testnum),</command>
<command batch="264" error="true">pause,</command>
<command batch="264" error="true">end,</command>
<command batch="264" error="true">end,</command>
<command batch="264" error="true" execution_time="87">end</command>
<command batch="265" error="true">fmtcatname = fields(fmtopt);</command>
<command batch="265" error="true">for k1=1:numel(fmtcatname), fmtcat=fmtcatname{k1};</command>
<command batch="265" error="true">for k2=1:numel(fmtopt.(fmtcat)), opt=fmtopt.(fmtcat){k2};</command>
<command batch="265" error="true">format(opt);</command>
<command batch="265" error="true">fprintf('\n\n\t&gt;&gt; format %s\n\n',opt),</command>
<command batch="265" error="true">for k3=1:numel(fmtopt.testnums), testnum=fmtopt.testnums{k3};</command>
<command batch="265" error="true">disp(testnum),</command>
<command batch="265" error="true">pause,</command>
<command batch="265" error="true">end,</command>
<command batch="265" error="true">end,</command>
<command batch="265" error="true" execution_time="74759">end</command>
<command execution_time="48">k3</command>
<command execution_time="33">k2</command>
<command execution_time="31">k1</command>
<command execution_time="22">format shortg</command>
<command execution_time="33">k1</command>
<command execution_time="23">k2</command>
<command execution_time="24">k3</command>
<command execution_time="35">opt</command>
<command execution_time="34">fmtcat</command>
<command execution_time="22">format shortg</command>
<command execution_time="30">clc</command>
<command execution_time="29">whos</command>
<command execution_time="28">clearvars fmtcat k k1 k2 k3 fmtopt fmtcatname opt str testnum</command>
<command execution_time="25">clc</command>
<command execution_time="29">whos</command>
<command execution_time="527">clearvars Fmovsum</command>
<command execution_time="46">rgbCell</command>
<command execution_time="92">rChunk</command>
<command execution_time="26">sum(cellfun(@numel, rChunk))</command>
<command execution_time="35">info</command>
<command execution_time="24">info.idx</command>
<command execution_time="40">whos</command>
<command execution_time="2507">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="322">help labelmatrix</command>
<command error="true" execution_time="54">lm = labelmatrix(Fmask);</command>
<command error="true" execution_time="44">lm = bwlabel(Fmask);</command>
<command execution_time="61">lm = applyFunction2D( @bwlabel, Fmask);</command>
<command execution_time="436">imrc(lm)</command>
<command execution_time="988">imrcplay(lm)</command>
<command execution_time="51">Fmask = bwareaopen( Fdynamic &gt; 100 , 80);</command>
<command execution_time="659">imscplay(Fmask)</command>
<command execution_time="54">Fmask = bwareaopen( Fdynamic &gt; 20 , 30);</command>
<command execution_time="863">imscplay(Fmask)</command>
<command execution_time="26">Fmask = Fdynamic &gt; 20;</command>
<command execution_time="856">imscplay(Fmask)</command>
<command batch="266">Fmask = Fdynamic &gt; 20;</command>
<command batch="266" execution_time="75">Fmask = applyFunction2D( @bwareaopen, Fmask, 5);</command>
<command execution_time="384">imscplay(Fmask)</command>
<command execution_time="412">imscplay(applyFunction2D(@bwmorph, Fmask, 'close'))</command>
<command batch="267">Fmask = Fdynamic &gt; 20;</command>
<command batch="267">Fmask = applyFunction2D( @bwareaopen, Fmask, 5);</command>
<command batch="267" execution_time="95">Fmask = applyFunction2D( @bwmorph, Fmask, 'close');</command>
<command execution_time="839">imscplay(Fmask)</command>
<command execution_time="62">lm = applyFunction2D(@bwlabel, Fmask);</command>
<command execution_time="48">whos lm</command>
<command execution_time="306">help bwlabel</command>
<command execution_time="71">cc = bwconncomp(Fmask)</command>
<command execution_time="47">cc.PixelIdxList</command>
<command error="true" execution_time="85">cc = applyFunction2D( @bwconncomp, Fmask)</command>
<command execution_time="65">cc = bwconncomp(any(Fmask,3))</command>
<command execution_time="45">cc.PixelIdxList</command>
<command execution_time="37">ccChunk = {};</command>
<command execution_time="115">rp = regionprops(any(Fmask,3))</command>
<command execution_time="27">rp</command>
<command execution_time="28">rp(1)</command>
<command execution_time="511">help regionprops</command>
<command execution_time="81">rp = regionprops(any(Fmask,3),{'Area','BoundingBox','Centroid','PixelIdxList'})</command>
<command execution_time="322">flr = FrameLinkedRegion(rp)</command>
<command execution_time="29">flr(1)</command>
<command execution_time="48">flr.edgeSeparation</command>
<command execution_time="414">pcolor(flr.centroidSeparation)</command>
<command execution_time="51">reg = ImageRegion(rp)</command>
<command execution_time="111">lr = LinkedRegion(rp)</command>
<command execution_time="41">lr</command>
<command execution_time="40">lr(1)</command>
<command execution_time="25">rp(1)</command>
<command execution_time="29">flr(1)</command>
<command error="true" execution_time="308">pr = PropagatingRegion( flr )</command>
<command execution_time="25">rp</command>
<command execution_time="81">rp = regionprops(Fmask,{'Area','BoundingBox','Centroid','PixelIdxList'})</command>
<command execution_time="24">rp(1)</command>
<command execution_time="27">rp(1).PixelIdxList</command>
<command execution_time="26">rp(end).PixelIdxList</command>
<command execution_time="25">1024*1024</command>
<command execution_time="24">info</command>
<command execution_time="25">info.idx</command>
<command execution_time="51">hasReg = any(any(Fmask,1),2)</command>
<command execution_time="38">flrCell = {}</command>
<command batch="268">for k=1:size(info.idx)</command>
<command batch="268">if hasReg(k)</command>
<command batch="268">rp = regionprops(Fmask(:,:,k),{'Area','BoundingBox','Centroid','PixelIdxList'});</command>
<command batch="268">idx = info.idx(k);</command>
<command batch="268">flr = FrameLinkedRegion(rp, 'FrameIdx',idx ,'FrameSize', [1024 1024]) ;</command>
<command batch="268">flrCell{idx} = flr;</command>
<command batch="268">end</command>
<command batch="268" execution_time="313">end</command>
<command execution_time="28">flr</command>
<command execution_time="52">pr = PropagatingRegion( flr)</command>
<command execution_time="470">pr(1)</command>
<command execution_time="472">pr(2)</command>
<command execution_time="477">pr(3)</command>
<command execution_time="460">pr(4)</command>
<command error="true" execution_time="115">RP = RegionPropagation(rp)</command>
<command execution_time="67">pr.IntersectingRegion</command>
<command execution_time="37">pr(3).IntersectingRegion</command>
<command execution_time="28">pr</command>
<command execution_time="473">pr(1)</command>
<command execution_time="28">flr</command>
<command execution_time="323">pr(1).FrameLink</command>
<command execution_time="372">pr(1).FrameLink(3)</command>
<command execution_time="325">pr(1).FrameLink(1)</command>
<command execution_time="349">flrCell</command>
<command execution_time="28">pr</command>
<command execution_time="44">methods(pr)</command>
<command error="true" execution_time="40">FLR = cat(1,flr{:});</command>
<command execution_time="40">flr</command>
<command execution_time="565">FLR = cat(1,flrCell{:});</command>
<command execution_time="39">FLR</command>
<command execution_time="45">methods(FLR)</command>
<command execution_time="83">flrLM = FLR.createLabelMatrix;</command>
<command execution_time="35">whos flrLM</command>
<command execution_time="604">imrc(flrLM)</command>
<command execution_time="16523">Frgb = cat(4, rgbCell{:});</command>
<command execution_time="1296">imrgbplay(Frgb)</command>
</session>
<session>
<command time_stamp="15de63bf93c">%-- 8/15/2017 10:11 AM --%</command>
<command error="true" execution_time="1653">show(R)</command>
<command execution_time="31">rSingle = cat(1,rChunk{:});</command>
<command error="true" execution_time="793">R = reduceSuperRegions(rSingle);</command>
<command execution_time="27098">nextFcn = getScicadelicPreProcessor()</command>
<command execution_time="32">clc</command>
<command execution_time="3276">whos</command>
<command execution_time="25347">nextFcn = getScicadelicPreProcessor()</command>
<command execution_time="12695">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="2875">imscplay(f)</command>
<command execution_time="889">imrgbplay(frgb)</command>
<command execution_time="32">info</command>
<command execution_time="31">info.motion</command>
<command execution_time="31">info.timestamp</command>
<command execution_time="31">info.motion.ux</command>
<command execution_time="32">mstat</command>
<command execution_time="15">mstat.marginalintensity</command>
<command execution_time="827">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="31">info</command>
<command execution_time="32">info.idx</command>
<command execution_time="796">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="3183">whos</command>
<command execution_time="483">imrgbplay(frgb)</command>
<command execution_time="764">imscplay(squeeze(frgb(:,:,3,:)))</command>
<command execution_time="842">imscplay(squeeze(frgb(:,:,2,:)))</command>
<command execution_time="14196">imrgbplay( cat(4, rgbCell{:}))</command>
<command execution_time="109">pathtool</command>
<command execution_time="16">fdir = 'H:\Susie\[SC0419] GCaMP\I0811 - 114DAT\0419GE-M1RH-114DAT-40fps00001'</command>
<command execution_time="842">cd(fdir)</command>
<command execution_time="31">clc</command>
<command batch="269">nextFcn = getScicadelicPreProcessor()</command>
<command batch="269" execution_time="24727">nextFcn = getScicadelicPreProcessor()</command>
<command execution_time="31">getMax = @max</command>
<command execution_time="3167">whos</command>
<command execution_time="47">clearvars fdir getMax</command>
<command execution_time="406">clc</command>
<command execution_time="858">imscplay(f)</command>
<command execution_time="702">imrgbplay(frgb)</command>
<command execution_time="328">info</command>
<command execution_time="31">info.timestamp</command>
<command execution_time="1014">info.motion</command>
<command execution_time="32">info.motion.ux</command>
<command execution_time="31">mstat</command>
<command execution_time="1560">mstat.marginalintensity</command>
<command error="true" execution_time="31">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="18683">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="15">info</command>
<command execution_time="1654">info.idx</command>
<command execution_time="437">imscplay( mstat.marginalintensity.M1)</command>
<command execution_time="1794">edit ImageRegion.m</command>
<command execution_time="499">edit FrameLinkedRegion</command>
<command execution_time="3213">whos</command>
<command execution_time="31">rp</command>
<command execution_time="437">rp(1)</command>
<command execution_time="47">flr</command>
<command execution_time="31">flr(1)</command>
<command execution_time="1638">flr(2)</command>
<command error="true" execution_time="421">show(flr)</command>
<command execution_time="998">imrc(flr.createLabelMatrix)</command>
<command execution_time="16">rp</command>
<command execution_time="31">idx</command>
<command execution_time="499">flr = RegionOfInterest(rp, 'FrameIdx',idx ,'FrameSize', [1024 1024])</command>
<command error="true" execution_time="63">show(flr)</command>
<command execution_time="796">imscplay(Fdynamic)</command>
<command batch="270">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="270">Fmask = Fdynamic &gt; 20;</command>
<command batch="270" execution_time="110">Fmask = applyFunction2D( @bwareaopen, Fmask, 5);</command>
<command execution_time="5223">imcomposite(mean(Fdynamic,3), Fdynamic &gt; 20, applyFunction2D( @bwareaopen, Fdynamic&gt;20, 5), applyFunction2D( @bwmorph, Fmask, 'close'))</command>
<command error="true" execution_time="422">typeimoverlay</command>
<command execution_time="1107">type imoverlay</command>
<command execution_time="47">type imrcOverlay</command>
<command execution_time="1935">clc</command>
<command execution_time="31">type imrcOverlay</command>
<command error="true" execution_time="31">imrcOverlay(bwlabel(Fmask), mean(Fdynamic,3))</command>
<command execution_time="578">imrcOverlay(bwlabel(any(Fmask,3)), mean(Fdynamic,3))</command>
<command error="true" execution_time="878">imcompare(Fdynamic, Fmask)</command>
<command error="true" execution_time="518">imcompare(Fdynamic, any(Fmask,3))</command>
<command error="true" execution_time="512">imcompare(mean(Fdynamic,3), any(Fmask,3))</command>
<command execution_time="29">clc</command>
<command execution_time="532">imscplay(Fmask)</command>
<command batch="271">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="271">rgbCell{end+1} = frgb;</command>
<command batch="271" execution_time="2425">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command execution_time="759">imscplay(Fdynamic)</command>
<command execution_time="23">Fmask = Fdynamic &gt; 20;</command>
<command error="true" execution_time="577">imscplay(cat(2, Fmask1, Fmask2, Fmask3))</command>
<command batch="272">Fmask1 = Fdynamic &gt; 20;</command>
<command batch="272">Fmask2 = applyFunction2D( @bwareaopen, Fmask1, 5);</command>
<command batch="272" execution_time="1212">Fmask3 = applyFunction2D( @bwmorph, Fmask2, 'close');</command>
<command execution_time="2058">imscplay(cat(2, Fmask1, Fmask2, Fmask3))</command>
<command execution_time="27">info</command>
<command execution_time="444">info.idx</command>
<command batch="273">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="273">rgbCell{end+1} = frgb;</command>
<command batch="273">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="273">Fmask1 = Fdynamic &gt; 20;</command>
<command batch="273">Fmask2 = applyFunction2D( @bwareaopen, Fmask1, 5);</command>
<command batch="273" execution_time="2786">Fmask3 = applyFunction2D( @bwmorph, Fmask2, 'close');</command>
<command execution_time="849">imscplay(cat(2, Fmask1, Fmask2, Fmask3))</command>
<command batch="274" repeat="11">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="274">rgbCell{end+1} = frgb;</command>
<command batch="274">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="274">Fmask1 = Fdynamic &gt; 20;</command>
<command batch="274">Fmask2 = applyFunction2D( @bwareaopen, Fmask1, 5);</command>
<command batch="274" execution_time="21983">Fmask3 = applyFunction2D( @bwmorph, Fmask2, 'close');</command>
<command execution_time="878">imscplay(cat(2, Fmask1, Fmask2, Fmask3))</command>
<command batch="266" repeat="2">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command batch="266">%     rgbCell{end+1} = frgb;</command>
<command batch="266">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="266">Fmask1 = Fdynamic &gt; 25;</command>
<command batch="266">Fmask2 = applyFunction2D( @bwareaopen, Fmask1, 8);</command>
<command batch="266" execution_time="7714">Fmask3 = applyFunction2D( @bwmorph, Fmask2, 'close');</command>
<command execution_time="27">t = tic;</command>
<command execution_time="1856" repeat="6">toc(t)</command>
<command execution_time="28">t=tic</command>
<command batch="267" execution_time="34" repeat="3">toc(t)</command>
<command batch="267">toc(t)</command>
<command batch="267" execution_time="2618">toc(t)</command>
<command batch="268">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="268">Fmask = Fdynamic &gt; 25;</command>
<command batch="268">Fmask = applyFunction2D( @bwareaopen, Fmask, 8);</command>
<command batch="268" execution_time="419">Fmask = applyFunction2D( @bwmorph, Fmask, 'close');</command>
<command batch="269">Fdynamic = squeeze(frgb(:,:,3,:));</command>
<command batch="269">Fmask = Fdynamic &gt; 25;</command>
<command batch="269">Fmask = applyFunction2D( @bwareaopen, Fmask, 8);</command>
<command batch="269">Fmask = applyFunction2D( @bwmorph, Fmask, 'close');</command>
<command batch="269" execution_time="444">hasRoi = any(any(Fmask,1),2);</command>
<command execution_time="27">hasRoi = any(any(Fmask,1),2)</command>
<command execution_time="25">k=1</command>
<command execution_time="443">rp = regionprops(Fmask(:,:,k),{'Area','BoundingBox','Centroid','PixelIdxList'})</command>
<command execution_time="26">rp.Area</command>
<command execution_time="24">info</command>
<command execution_time="26">info.motion</command>
<command execution_time="26">info.motion.dux</command>
<command execution_time="33">info.motion.duy</command>
<command execution_time="31" repeat="2">mstat</command>
<command execution_time="26">mstat.marginalintensity</command>
<command execution_time="983">imscplay(mstat.marginalintensity.M1)</command>
<command execution_time="973">imscplay(sqrt(mstat.marginalintensity.M2))</command>
<command error="true" execution_time="47">imscplay(sqrt(mstat.marginalintensity.M3))</command>
<command execution_time="751">imscplay(mstat.marginalintensity.M3)</command>
<command execution_time="946">imscplay(sqrt(mstat.marginalintensitychange.M2))</command>
<command error="true" execution_time="47">imscplay(sqrt(mstat.marginalintensitychange.M1))</command>
<command execution_time="2313">rp</command>
<command execution_time="3796">help questdlg</command>
<command execution_time="662">pauseMsg = msgbox('Pause', 'Click to Pause','modal')</command>
<command execution_time="498">pauseMsg = msgbox('Pause', 'Click to Pause','nonmodal')</command>
<command execution_time="540">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal')</command>
<command execution_time="27">pauseMsg</command>
<command error="true" execution_time="41">msgBox</command>
<command execution_time="33">pauseMsg</command>
<command execution_time="24">isvalid(pauseMsg)</command>
<command execution_time="25">info</command>
<command execution_time="25">mstat</command>
<command error="true" execution_time="26">mstat.</command>
<command execution_time="26">mstat.marginalintensitychange</command>
<command execution_time="3211">whos</command>
<command execution_time="47">rpCell</command>
<command execution_time="26">allRegionProps = cat(1, rpCell{:});</command>
<command execution_time="1231">rSingle = RegionOfInterest(allRegionProps)</command>
<command error="true" execution_time="1806">R = reduceSuperRegions(rSingle)</command>
<command execution_time="740">rSingle.FrameSize</command>
<command execution_time="33">set(rSingle,'FrameSize',[1024 1024])</command>
<command execution_time="7550">R = reduceSuperRegions(rSingle)</command>
<command execution_time="765">imrgbplay(Frgb)</command>
<command error="true" execution_time="1331">show(R)</command>
<command execution_time="25">set(R,'FrameSize',[1024 1024])</command>
<command execution_time="5697">show(R)</command>
<command execution_time="25">rSingle</command>
<command execution_time="24">rSingle(3)</command>
<command execution_time="25">set(R,'FrameSize',[1024 1024]);</command>
<command execution_time="2049">show(R)</command>
<command execution_time="697">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal');</command>
<command execution_time="22">pauseMsg.UserData = true;</command>
<command execution_time="24">pauseMsg</command>
<command batch="270" error="true">pauseMsg.UserData = true;</command>
<command batch="270" error="true" execution_time="395">pauseMsg.ButtonDownFcn = @ (src,evnt) src.UserData = ~src.UserData</command>
<command execution_time="26">pauseMsg.ButtonDownFcn = @ (src,evnt) set( src, 'UserData', ~src.UserData)</command>
<command error="true" execution_time="34" repeat="2">pauseMsg.UserData</command>
<command batch="271">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal');</command>
<command batch="271">pauseMsg.UserData = true;</command>
<command batch="271" execution_time="559">pauseMsg.ButtonDownFcn = @ (src,evnt) set( src, 'UserData', ~src.UserData);</command>
<command batch="272">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal');</command>
<command batch="272" execution_time="522">pauseMsg.UserData = true;</command>
<command batch="273">pauseMsg</command>
<command batch="273">pauseMsg</command>
<command batch="273">pauseMsg</command>
<command batch="273" execution_time="3097">pauseMsg</command>
<command execution_time="25">pauseMsg.Children</command>
<command execution_time="26">pauseMsg.Children(1)</command>
<command execution_time="26">pauseMsg.Children(2)</command>
<command error="true" execution_time="35">pauseMsg.Children(1) = true</command>
<command execution_time="1369">but = pauseMsg.Children(1)</command>
<command execution_time="26">but.UserData = true</command>
<command execution_time="582">but.ButtonDownFcn = @ (src,evnt) set( src, 'UserData', ~src.UserData)</command>
<command execution_time="26">but</command>
<command execution_time="34">but.UserData</command>
<command error="true" execution_time="689">but.CallBack = @ (src,evnt) set( src, 'UserData', ~src.UserData)</command>
<command execution_time="91">but</command>
<command execution_time="26">but.Callback = @ (src,evnt) set( src, 'UserData', ~src.UserData)</command>
<command execution_time="24" repeat="2">but.UserData = true</command>
<command error="true" execution_time="32" repeat="2">but.UserData</command>
<command batch="274" error="true">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal');</command>
<command batch="274" error="true">but = pauseMsg.Children(1);</command>
<command batch="274" error="true">pauseMsg.UserData = true;</command>
<command batch="274" error="true" execution_time="1293">pauseMsg.Callback = @ (src,evnt) set( src, 'UserData', ~src.UserData);</command>
<command execution_time="28">clc</command>
<command execution_time="1541">pauseMsg = msgbox('Pause', 'Click to Pause','non-modal');</command>
<command execution_time="28">isvalid(pauseMsg)</command>
<command execution_time="28">nextFcn</command>
<command error="true" execution_time="36">[f,info,mstat,frgb,srgb] = nextFcn();</command>
<command execution_time="26">info</command>
<command execution_time="3375">help history</command>
<command execution_time="4113">help matlab.codetools</command>
<command execution_time="3230">help commandhistory</command>
<command execution_time="26">dir(prefdir)</command>
<command execution_time="3505">help copyfile</command>
<command execution_time="48">copyfile(fullfile(prefdir,'History.xml'),'historymarkysusie.xml')</command>
<command execution_time="38">which processabit</command>
<command execution_time="116">cd('Z:\Data\SusieStem\[SC0419] GCaMP\I0811 - 114DAT\0419GE-M1RH-114DAT-40fps00001')</command>
<command execution_time="27">mkdir susiescraps</command>
<command execution_time="27">copyfile('processabit.m','./susiescraps/processabit.m')</command>
<command batch="275">copyfile(fullfile(prefdir,'History.xml'),'./susiescraps/historymarkysusie.xml')</command>
</session>
</history>
